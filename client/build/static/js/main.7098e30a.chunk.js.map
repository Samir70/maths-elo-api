{"version":3,"sources":["NewQs/MetricConversion.js","NewQs/TimeConversion.js","NewQs/VocabQ.js","NewQs/QTypes.js","NewQs/RandomElement.js","NewQs/Ratio.js","NewQs/NumberOperations.js","NewQs/GetNewQ.js","Ratings/Ratings.js","components/Keypad.js","Reducers/actions.js","components/Question.js","components/QWithReveal.js","components/ClassRoom.js","App.js","Reducers/Reducer.js","serviceWorker.js","index.js"],"names":["conversionPairs","large","small","ratio","MetricConversionQ","subQType","Qtype","Number","Math","floor","random","length","convFacts","forward","extraLarge","q","a","QType","metricConversion","hms2sec","h","m","s","rnd","outof","TimeConversionQ","subType","left","right","leftUnits","rightUnits","sec","min","hr","totalSec","TimeConversion","console","log","answerFormat","VocabQList","VocabQ","question","RandomElement","arr","subQTypes","RatioQ","slice","quAndA","Ratio","QTypes","GetNewQ","newQ","type","MultiplyNumbers","ceil","b","c","returnable","MultiplyNumberQ","getQRating","qType","toGet","qRating","axios","get","params","then","res","data","rating","catch","err","transformRating","NewRatings","rating1","rating2","result","howProvisional","r1","r2","ratingSum","newR1","newR2","connect","Keypad_number","n","payload","Keypad_delete","buttons1_9","map","x","onClick","className","key","button0","buttonDP","buttonDEL","state","needNewRatedQ","wrongAnswers","userAnswer","userRating","UpdateUserAnswer","newAnswer","UserRatingChanges","newUserRating","SetNewQ","newQuAndA","UserIsWrong","newQuAndARating","wrongAnswer","NeedNewRatedQ","wrongAnswerList","i","useEffect","promiseMessage","QRating","id","onSubmit","e","preventDefault","userIsCorrect","toLowerCase","toPost","category","ratingValue","post","name","value","onChange","target","QWithReveal","showAnswer","quandaClass","props","rowType","handleClick","setState","RevealButton","Answer","this","React","Component","ClassRoom","qList","QTypeSplit","split","push","currentQ","showClassRoom","ToggleClass","giveme5Option","Dropdown","Item","rateMymathsOption","DropdownButton","title","size","initialState","reducer","action","Boolean","window","location","hostname","match","ReactDOM","render","store","createStore","Reducer","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7098e30a.chunk.js","sourcesContent":["import { metricConversion } from './QTypes';\r\n\r\nconst conversionPairs = [\r\n  'zeroQ',\r\n    {large:['metres', 'm'], small:['centimetres', 'cm'], ratio:100},\r\n    {large:['metres', 'm'], small:['millimetres', 'mm'], ratio:1000},\r\n    {large:['kilometres', 'Km'], small:['metres', 'm'], ratio:1000},\r\n\r\n    {large:['grams', 'g'], small:['milligrams', 'mg'], ratio:1000},\r\n    {large:['kilograms', 'Kg'], small:['grams', 'g'], ratio:1000},\r\n\r\n    {large:['litres', 'L'], small:['centilitres', 'cL'], ratio:100},\r\n    {large:['litres', 'L'], small:['millimetres', 'mL'], ratio:1000},\r\n]\r\n\r\nconst MetricConversionQ = (subQType) => {\r\n    var Qtype = Number(subQType) || Math.floor(Math.random()*(conversionPairs.length-1))+1;\r\n    //console.log(metricConversion+'-'+Qtype);\r\n    var convFacts = conversionPairs[Qtype];\r\n    let forward = Math.random() < 0.5 ? true : false,\r\n        extraLarge = Math.random() < 0.25 ? 1 : Math.random() < 0.8 ? 10 : 100;\r\n    let small = Math.floor(Math.random()*convFacts.ratio)*extraLarge,\r\n        large = small/convFacts.ratio;\r\n    return forward ? \r\n      {q:\"Convert \"+small+convFacts.small[1]+\" to \"+convFacts.large[0], \r\n        a:''+large, QType:metricConversion+'-'+Qtype} : \r\n      {q:\"Convert \"+large+convFacts.large[1]+\" to \"+convFacts.small[0], \r\n        a:''+small, QType:metricConversion+'-'+Qtype} \r\n}\r\n\r\nexport default MetricConversionQ;\r\n","import { TimeConversion } from './QTypes';\r\n\r\n// so ohr 2min 28sec => 148sec\r\nconst hms2sec = (h, m, s) => h*3600+m*60+s\r\n\r\nconst conversionPairs = [\r\n    'null',\r\n    'secMin', 'secMinHr',\r\n    //'minHr', 'minHrDays',\r\n    //'hrDays', 'hrWeeks', 'hrDaysWeeks'\r\n]\r\n\r\nconst rnd = (outof) => Math.floor(Math.random()*outof);\r\n\r\nconst TimeConversionQ = (subType) => {\r\n    var subQType = Number(subType) || Math.floor(Math.random()*(conversionPairs.length-1))+1;\r\n    /* direction of conversion decided by forward variable\r\n    * before composing quAndA: parts are labeled left, middle and right\r\n    * so 1min 78sec will give\r\n    * LMR: 138, 1, 78\r\n    * and the Qs\r\n    * 138 seconds is 1min and how many seconds?\r\n    * 138 seconds is 18seconds and how many minutes?\r\n    * Convert 1min 78sec into seconds\r\n    * because answer should be a number\r\n    */\r\n\r\n    let forward = Math.random() < 0.5 ? true : false;\r\n    var left, right, leftUnits, rightUnits;\r\n    var sec = rnd(60), min = rnd(60), hr = rnd(24);\r\n    switch (conversionPairs[subQType]) {\r\n        case 'secMin' : {\r\n            var totalSec = hms2sec(0, min, sec);\r\n            left =''+totalSec; right = min+'min '+sec+'sec';\r\n            leftUnits = 'seconds'; rightUnits = 'minutes and seconds';\r\n            break\r\n        }\r\n        case 'secMinHr' : {\r\n            totalSec = hms2sec(hr, min, sec);\r\n            left = ''+totalSec; right=hr+'hr '+min+'min '+sec+'sec';\r\n            leftUnits='seconds'; rightUnits = 'hours minutes and seconds';\r\n            break\r\n        }\r\n        default: return { q:'TimeConversion default Q', a:'625' }\r\n    }\r\n    subQType = TimeConversion+'-'+subQType;\r\n    console.log(subQType);\r\n    return forward ? \r\n        { q:'Convert '+left+leftUnits+' to '+rightUnits, \r\n          a:right, QType:subQType, answerFormat:'string' } :\r\n        { q:'Convert '+right+' to '+leftUnits,\r\n          a:left, QType:subQType, answerFormat:'number' }\r\n}\r\n\r\nexport default TimeConversionQ\r\n","import { Vocab } from './QTypes';\r\n\r\nconst VocabQList = [\r\n    // circle vocab\r\n    {q:'What do you call a line that goes from the edge of a circle, through the centre, to the other side?', \r\n     a:'diameter'},\r\n    {q:'What do you call a line from the centre of a circle to the edge of the circle?', a:'radius'},\r\n    {q:'What do you call a line that just touches the outside of a circle?', a:'tangent'},\r\n    {q:'What do you call a line cuts across a circle, but not necessarily through the centre?', a:'chord'},\r\n    {q:'A chord cuts a circle into two ...?', a:'segments'},\r\n    {q:'Two radii (radiuses) cut out a piece like a slice of pie, called a ...?', a:'sector'}\r\n]\r\n\r\nconst VocabQ = () => {\r\n    var question = Math.floor(Math.random()*VocabQList.length);\r\n    return {...VocabQList[question], answerFormat:'string', QType:Vocab}\r\n}\r\n\r\nexport default VocabQ;\r\n","export const metricConversion = 'metricConversion';\r\nexport const TimeConversion = 'TimeConversion';\r\nexport const MultiplyNumbers = 'MultiplyNumbers';\r\nexport const Vocab = 'Vocab';\r\nexport const Ratio = 'Ratio';\r\n\r\n// Aiming for QCodes which the app can parse to produce a new question of the same type\r\n// but with different numbers.\r\n\r\n// Format will be a string beginning with a QType\r\n// 'metricConversion-2'\r\n// would get us the subQType with index 2 for that topic\r\n// whereas: just 'metricConversion' (or 'metricConversion-0') \r\n// should allow for a random choice of subQType","const RandomElement = (arr) => arr[Math.floor(Math.random()*arr.length)];\r\n\r\nexport default RandomElement;","import { Ratio } from './QTypes';\r\nimport RandomElement from './RandomElement';\r\n\r\nconst subQTypes = [\r\n    null, 'simplify', 'mapForm', 'keepRatio', 'share', 'givenDiff'\r\n]\r\n\r\nconst RatioQ = (subType) => {\r\n    const subQType = subQTypes[Number(subType)] || RandomElement(subQTypes.slice(1));\r\n    var quAndA = { QType: Ratio+'-'+subQType }\r\n\r\n    switch (subQType) {\r\n        case 'simplify' : {quAndA.q=\"Simplify 12:16\"; quAndA.a=\"3:4\";quAndA.answerFormat=\"string\"; break}\r\n        case 'mapForm' : {quAndA.q=\"Express 16:12 in the form 1:n\"; quAndA.a=\"1:0.75\"; quAndA.answerFormat=\"string\"; break}\r\n        case 'keepRatio' : {quAndA.q=\"The ratio of men to women waiting at a bus stop is 3:2. If there are 6 men, then how many women are there?\"; quAndA.a=\"4\"; break}\r\n        case 'share' : {quAndA.q=\"Share £180 in the ratio 3:5:4\"; quAndA.a=\"45:75:60\"; quAndA.answerFormat=\"string\"; break}\r\n        case 'givenDiff' : {quAndA.q=\"Alice and Bob share some money in the ratio 7:5 Alice gets £10 more than Bob. How much money did they share?\"; quAndA.a=\"60\"; break}\r\n        default : {quAndA.q=\"Ratio default Q\"; quAndA.a=\"42\"}\r\n    }\r\n    \r\n    console.log(quAndA);\r\n    return quAndA\r\n}\r\n\r\nexport default RatioQ;","import { MultiplyNumbers } from './QTypes';\r\n\r\nconst subQTypes = [\r\n    'zeroQ',\r\n    'sq', 'cube', \r\n    //'twos', 'threes', 'fours', 'fives', 'sixes', 'sevens', 'eights', 'nines', 'tens',\r\n    'sqEnd5', 'sqEnd1',\r\n    'gridWhole'//, 'decimal'\r\n]\r\n\r\nexport const MultiplyNumberQ = (subQType) => {\r\n    var type = Number(subQType) || Math.floor(Math.random()*(subQTypes.length-1))+1;\r\n    console.log(MultiplyNumbers+'-'+type)\r\n    var a = Math.ceil(Math.random()*9)+1, \r\n        b = Math.ceil(Math.random()*9)+1,\r\n        c = Math.ceil(Math.random()*90)+10;\r\n    var returnable = {QType:MultiplyNumbers+'-'+type}\r\n    switch (subQTypes[type]) {\r\n        case 'sq': return {...returnable, q:'What is '+a+' squared?', a:''+(a*a)}\r\n        case 'sqEnd5': {\r\n            a = a*10+5;\r\n            return {...returnable, q:'What is '+a+' squared?', a:''+(a*a)}\r\n        }\r\n        case 'sqEnd1': {\r\n            a = a*10+1;\r\n            return {...returnable, q:'What is '+a+' squared?', a:''+(a*a)}\r\n        }\r\n        case 'cube': return {...returnable, q:'What is '+a+' cubed?', a:''+(a*a*a)}\r\n        case 'gridWhole': return {...returnable, q:'What is '+c+' times '+(a*b)+'?', a:''+(a*b*c) }\r\n        default: return { q:'MultiplyNumberQ default Q', a:'625' }\r\n    }\r\n}","import axios from 'axios';\r\n\r\nimport MetricConversionQ from './MetricConversion';\r\nimport TimeConversionQ from './TimeConversion';\r\nimport VocabQ from './VocabQ';\r\nimport RatioQ from './Ratio';\r\nimport { MultiplyNumberQ } from './NumberOperations';\r\nimport { metricConversion, TimeConversion, MultiplyNumbers, Vocab, Ratio } from './QTypes';\r\nconst QTypes = [metricConversion, TimeConversion, MultiplyNumbers, Vocab, Ratio];\r\n\r\nexport const GetNewQ = (QType, subQType) => {\r\n  //console.log('QType and subQType', QType, subQType)\r\n  var type = QType || QTypes[Math.floor(Math.random() * QTypes.length)];\r\n  var newQ;\r\n  switch (type) {\r\n    case metricConversion: { newQ = MetricConversionQ(subQType); break }\r\n    case MultiplyNumbers: { newQ = MultiplyNumberQ(subQType); break }\r\n    case TimeConversion: { newQ = TimeConversionQ(subQType); break }\r\n    case Vocab: { newQ = VocabQ(); break }\r\n    case Ratio: { newQ = RatioQ(subQType); break}\r\n    default: return {\r\n      q: \"How many mathematicians does it take to change a light bulb?\",\r\n      a: \"1\", QType: 'giveDefault'\r\n    }\r\n  }\r\n  return newQ;\r\n}\r\n\r\nexport const getQRating = async (qType) => {\r\n  const toGet = { qType: qType };\r\n  var qRating = 1234;\r\n  await axios.get('/qratings/get1rating', { params: toGet })\r\n    .then(res => {\r\n      console.log('Axios get 1 rating:', res.data);\r\n      qRating = res.data.rating;\r\n    })\r\n    .catch(err => {\r\n      console.log('Axios Error getting rating for ', qType, err);\r\n      qRating = 1345;\r\n    });\r\n  return qRating;\r\n}\r\n","const transformRating = (rating) => 10**(rating/400);\r\n\r\n// in this, the result is from the point of view of player 1 (human) \r\n// who answered question with difficulty of rating2\r\n// howProvisional will be in [1, 10]\r\n// if the humans rating is very provisional (ie: 10) then rating1 changes by more\r\n// but the question's rating changes by little\r\nconst NewRatings = (rating1, rating2, result, howProvisional) => {\r\n    var r1=transformRating(rating1), r2 = transformRating(rating2);\r\n    // expected result for each player\r\n    var ratingSum = r1+r2;\r\n    var e1=r1/ratingSum, e2=r2/ratingSum;\r\n    // console.log('r1, e1', r1, e1)\r\n\r\n    var newR1 = rating1 + 32*howProvisional*(result - e1),\r\n        newR2 = rating2 + (32/howProvisional)*(1-result - e2);\r\n    \r\n    return [Math.floor(newR1), Math.floor(newR2)]\r\n}\r\n\r\nexport default NewRatings;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Keypad_number, Keypad_delete } from '../Reducers/actions';\r\n\r\nconst Keypad = ({ Keypad_number, Keypad_delete }) => {\r\n    const buttons1_9 = [...'123456789'].map(x => <button\r\n        onClick={() => Keypad_number(x)}\r\n        className=\"keypadButton\"\r\n        key={'keypad-button' + x}>{x}</button>);\r\n    const button0 = <button\r\n        onClick={() => Keypad_number('0')}\r\n        className=\"keypadButton\"\r\n        key='keypad-button0'>0</button>;\r\n    const buttonDP = <button\r\n        onClick={() => Keypad_number('.')}\r\n        className=\"keypadButton\"\r\n        key='keypad-buttonDP'>.</button>\r\n    const buttonDEL = <button\r\n        onClick={() => Keypad_delete()}\r\n        className=\"keypadButton\"\r\n        key='keypad-buttonDEL'>DEL</button>\r\n    return (\r\n        <div className=\"keypad\">\r\n            <div>{buttons1_9.slice(0, 3)}</div>\r\n            <div>{buttons1_9.slice(3, 6)}</div>\r\n            <div>{buttons1_9.slice(6)}</div>\r\n            <div>{button0}{buttonDP}{buttonDEL}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, { Keypad_number, Keypad_delete })(Keypad);","export const UPDATE_USER_ANSWER = 'UPDATE_USER_ANSWER';\r\nexport const SET_NEW_Q = 'SET_NEW_Q';\r\nexport const USER_IS_WRONG = 'USER_IS_WRONG';\r\nexport const USER_RATING_CHANGES = 'USER_RATING_CHANGES';\r\nexport const TOGGLE_CLASS = 'TOGGLE_CLASS';\r\nexport const NEED_NEW_RATED_Q = 'NEED_NEW_RATED_Q';\r\nexport const KEYPAD_NUMBER = 'KEYPAD_NUMBER';\r\nexport const KEYPAD_DELETE = 'KEYPAD_DELETE';\r\n\r\nexport const UpdateUserAnswer = (newAnswer) => {\r\n    return { type: UPDATE_USER_ANSWER, payload: newAnswer}\r\n}\r\n\r\nexport const SetNewQ = (newQuAndA) => {\r\n    return { type:SET_NEW_Q, quAndA: newQuAndA }\r\n}\r\n\r\nexport const UserIsWrong = (userAnswer, newQuAndARating) => {\r\n    return { type:USER_IS_WRONG, wrongAnswer:userAnswer, newQuAndARating:newQuAndARating }\r\n}\r\n\r\nexport const UserRatingChanges = (newUserRating) => {\r\n    return { type: USER_RATING_CHANGES, userRating: newUserRating}\r\n}\r\n\r\nexport const ToggleClass = () => {\r\n    return {type:TOGGLE_CLASS}\r\n}\r\n\r\nexport const NeedNewRatedQ = () => {\r\n    return {type: NEED_NEW_RATED_Q}\r\n}\r\n\r\nexport const Keypad_number = (n) => {\r\n    return {type:KEYPAD_NUMBER, payload:n}\r\n}\r\n\r\nexport const Keypad_delete = () => {\r\n    return {type:KEYPAD_DELETE}\r\n}","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {\r\n    UpdateUserAnswer, UserRatingChanges,\r\n    SetNewQ, UserIsWrong, NeedNewRatedQ\r\n} from '../Reducers/actions';\r\nimport { GetNewQ, getQRating } from '../NewQs/GetNewQ';\r\nimport NewRatings from '../Ratings/Ratings';\r\nimport Keypad from '../components/Keypad';\r\n\r\nconst Question = ({\r\n    quAndA, userAnswer, userRating, wrongAnswers, needNewRatedQ,\r\n    UserRatingChanges, UpdateUserAnswer, SetNewQ, UserIsWrong, NeedNewRatedQ }) => {\r\n    const changeHandler = (e) => {\r\n        UpdateUserAnswer(e.target.value);\r\n    }\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        // allow answer like 1.70 when the required answer is 1.7\r\n        // converting to Number will do this\r\n        // but take care if questions types are included that need a string as an answer\r\n        switch (quAndA.answerFormat) {\r\n            case 'string': {\r\n                var userIsCorrect = userAnswer.toLowerCase() === quAndA.a.toLowerCase();\r\n                break\r\n            }\r\n            default: userIsCorrect = Number(userAnswer) === Number(quAndA.a)\r\n        }\r\n        if (userIsCorrect) {\r\n            var [newUserRating, newQuAndARating] = NewRatings(userRating, quAndA.QRating || 1500, 1, 1);\r\n            UserRatingChanges(newUserRating);\r\n            NeedNewRatedQ();\r\n        } else {\r\n            [newUserRating, newQuAndARating] = NewRatings(userRating, quAndA.QRating || 1500, 0, 1);\r\n            //console.log('QType, QRating, old, new:', quAndA.QType, quAndA.QRating, newQuAndARating);\r\n            UserRatingChanges(newUserRating);\r\n            UserIsWrong(userAnswer, newQuAndARating)\r\n        }\r\n        if (quAndA.QType !== 'giveDefault') {\r\n            const toPost = {\r\n                category: quAndA.QType,\r\n                ratingValue: newQuAndARating\r\n            }\r\n            axios.post('/qratings/new-data', toPost)\r\n                .then(res => console.log('Success while posting rating of Q', res))\r\n                .catch(err => console.log('Error while posting rating of Q', err));\r\n        } else { console.log('Did not post about default Q') }\r\n    }\r\n\r\n    const wrongAnswerList = wrongAnswers.map((x, i) =>\r\n        <p key={i}>{x} was wrong</p>)\r\n\r\n    useEffect(() => {\r\n        if (needNewRatedQ || quAndA.QType === 'giveDefault') {\r\n            var newQ = GetNewQ('', '');\r\n            //console.log('q.js, useEffect, newQ is: ', newQ);\r\n            getQRating(newQ.QType).then(promiseMessage => {\r\n                //console.log('getQRating in useEffect has promise:', promiseMessage);\r\n                newQ.QRating = promiseMessage;\r\n                SetNewQ(newQ);\r\n            })\r\n                .catch(err => {\r\n                    console.log('GetNewQ in useEffect has error:', err);\r\n                });\r\n        }\r\n    })\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"quAndA\">\r\n                <h2>{quAndA.q}</h2>\r\n                <form onSubmit={submitHandler}>\r\n                    <input className=\"answerbox\"\r\n                        type=\"text\"\r\n                        name=\"answerbox\"\r\n                        value={userAnswer}\r\n                        onChange={changeHandler} />\r\n                    <button type=\"submit\">Submit</button>\r\n                </form>\r\n                {wrongAnswerList}\r\n                <br />\r\n            </div>\r\n            {needNewRatedQ ?\r\n                <p>Fetching the rating for a new question....</p> :\r\n                <Keypad />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        quAndA: state.quAndA,\r\n        needNewRatedQ: state.needNewRatedQ,\r\n        wrongAnswers: state.wrongAnswers,\r\n        userAnswer: state.userAnswer,\r\n        userRating: state.userRating\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    UpdateUserAnswer, UserRatingChanges, SetNewQ, UserIsWrong, NeedNewRatedQ\r\n})(Question);","import React from 'react';\r\n\r\nclass QWithReveal extends React.Component {\r\n    state = {showAnswer: false}\r\n    quandaClass = Number(this.props.rowType) % 2 ? \"quandaBlock-odd\" : \"quandaBlock-even\";\r\n    \r\n    \r\n    handleClick = () => {\r\n        this.setState({showAnswer:!this.state.showAnswer})\r\n    }\r\n    RevealButton = <button className=\"revealBtn\" onClick={this.handleClick}>Show answer</button>\r\n    Answer = <h2 className=\"aBlock\" onClick={this.handleClick} >{this.props.a}</h2>; \r\n\r\n    render() {\r\n        return (\r\n            <div className={this.quandaClass}>\r\n                <h2 className=\"qBlock\">{this.props.q}</h2>\r\n                {this.state.showAnswer ? this.Answer : this.RevealButton}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default QWithReveal;","import React from 'react';\r\nimport QWithReveal from './QWithReveal';\r\nimport {GetNewQ} from '../NewQs/GetNewQ';\r\n\r\nconst ClassRoom = (props) => {\r\n    var qList = [];\r\n    var QTypeSplit = props.QType.split('-');\r\n    console.log(props.QType, QTypeSplit)\r\n    for (var i=0; i<5; i++) {\r\n        var newQ = GetNewQ(QTypeSplit[0], QTypeSplit[1]);\r\n        qList.push(\r\n            <QWithReveal q={newQ.q} a={newQ.a} rowType={'' + i} key={i} />\r\n        )\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>This is the class room</h2>\r\n            <h3>Where you simply click to see the answers</h3>\r\n            {qList}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClassRoom;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport Question from './components/Question';\r\nimport ClassRoom from './components/ClassRoom';\r\nimport { ToggleClass } from './Reducers/actions';\r\nimport './App.css';\r\n\r\nconst App = ({ userRating, currentQ, showClassRoom, ToggleClass }) => {\r\n  const giveme5Option = <Dropdown.Item onClick={ToggleClass}>5 in the Classroom</Dropdown.Item>;\r\n  const rateMymathsOption = <Dropdown.Item onClick={ToggleClass}>Rate My Maths</Dropdown.Item>;\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"header\" >\r\n        <DropdownButton id=\"dropdown-variants-info\" title=\"Maths ELO\" className=\"appTitle\" size=\"lg\">\r\n          {showClassRoom ? rateMymathsOption : giveme5Option}\r\n        </DropdownButton>\r\n        <p>Rate and review your maths</p>\r\n        <p className=\"userVSquestion\" >Guest User ({userRating}) VS {currentQ.QType} ({currentQ.QRating||'????'}) </p>\r\n      </div>\r\n      {showClassRoom ? <ClassRoom QType={currentQ.QType} /> : <Question />}\r\n    </div>\r\n  );\r\n}\r\n// used before dropdown menu implemented\r\n// {showClassRoom ? giveMeTestsbtn : giveme5btn }\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userRating: state.userRating,\r\n    currentQ: state.quAndA,\r\n    showClassRoom: state.showClassRoom\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { ToggleClass })(App);\r\n","import { UPDATE_USER_ANSWER, KEYPAD_NUMBER, KEYPAD_DELETE,\r\n    SET_NEW_Q, \r\n    USER_IS_WRONG, USER_RATING_CHANGES, \r\n    TOGGLE_CLASS, NEED_NEW_RATED_Q } from './actions';\r\n\r\nconst newQ = { \r\n    q: \"How many mathematicians does it take to change a light bulb?\", \r\n    a: \"1\", QType:'giveDefault' };\r\n\r\nconst initialState = {\r\n    userRating: 1500,\r\n    quAndA: newQ,\r\n    needNewRatedQ: true,\r\n    userAnswer: '',\r\n    wrongAnswers: [], \r\n    showClassRoom: false\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    console.log('handling the action ', action)\r\n    switch (action.type) {\r\n        case NEED_NEW_RATED_Q : return {...state, needNewRatedQ:true}\r\n        // split update of rating and quandA\r\n        case USER_RATING_CHANGES: return {...state, userRating:action.userRating}\r\n        case SET_NEW_Q : return {\r\n            ...state, \r\n            quAndA:action.quAndA, \r\n            needNewRatedQ: false,\r\n            userAnswer:'', wrongAnswers:[]}\r\n        case USER_IS_WRONG : return {\r\n            ...state,\r\n            wrongAnswers:[...state.wrongAnswers, action.wrongAnswer],\r\n            userAnswer: '',\r\n            quAndA: {...state.quAndA, QRating: action.newQuAndARating}\r\n        }\r\n        case UPDATE_USER_ANSWER : return {...state, userAnswer:action.payload}\r\n        case KEYPAD_NUMBER : return {...state, userAnswer:state.userAnswer+action.payload}\r\n        case KEYPAD_DELETE : return {...state, userAnswer:state.userAnswer.slice(0, -1)}\r\n        case TOGGLE_CLASS : return {...state, showClassRoom:!state.showClassRoom}\r\n        default : return state;\r\n    } \r\n}\r\n\r\nexport default reducer;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport Reducer from './Reducers/Reducer';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={createStore(Reducer)} ><App /></Provider>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}