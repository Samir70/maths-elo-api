{"version":3,"sources":["NewQs/RandomFuncs.js","Reducers/actions.js","NewQs/QTypes.js","NewQs/MetricConversion.js","NewQs/TimeConversion.js","NewQs/VocabQ.js","NewQs/Ratio.js","NewQs/AlgebraFuncs/CoeffsAndVars.js","NewQs/AlgebraFuncs/SimplifyAddSub.js","NewQs/AlgebraFuncs/ExpandBracket.js","NewQs/AlgebraQ.js","NewQs/AlgebraFuncs/substitution.js","NewQs/AlgebraFuncs/linearQs/bothSidesQ.js","NewQs/AlgebraFuncs/linearQs/linearFractionQ.js","NewQs/AlgebraFuncs/solveLinear.js","NewQs/AlgebraFuncs/linearQs/oneStep.js","NewQs/AlgebraFuncs/linearQs/twoStep.js","NewQs/AlgebraFuncs/linearQs/bracketQ.js","NewQs/DataQ.js","NewQs/Decimals.js","NewQs/NumberOperations.js","NewQs/NegNumQ.js","NewQs/FactorsMultiples.js","NewQs/Percentage.js","NewQs/GetNewQ.js","Ratings/Ratings.js","components/Keypad.js","components/Question.js","components/QWithReveal.js","components/ClassRoom.js","components/TopicSelect.js","components/LoginForm.js","App.js","Reducers/Reducer.js","serviceWorker.js","index.js"],"names":["RandomElement","arr","Math","floor","random","length","RandomInt","n","nRandomInts","max","l","i","push","elementsFrom","distinctElementsFrom","list","slice","filter","x","indexOf","primes","smallPrimes","RandomPrime","t","distinctPrimes","random2357","maxE","exponents","map","every","value","reduce","acc","val","names","randomNames","ChangeActiveScreen","newScreen","type","QTypes","topic","subTopics","conversionPairs","large","small","ratio","MetricConversionQ","subQType","Qtype","findIndex","cp","console","log","convFacts","forward","extraLarge","q","a","QType","metricConversion","hms2sec","h","m","s","rnd","outof","TimeConversionQ","subType","left","right","leftUnits","rightUnits","Number","sec","min","hr","totalSec","TimeConversion","answerFormat","extraKeys","VocabQList","VocabQ","question","subQTypes","coprimes","1","2","3","4","5","multipliers","decFrac","giveNames","join","RatioQ","quAndA","Ratio","qA","b","high","simp","simplifyQ","dF","mF","mapFormQ","seq","split","ratioVals","keepRatioQ","askAbout","shareQ","comparitor","abs","givenDiffQ","require","Coeffs","Array","fill","combine","c","v","exp","SimplifyAddSub","varList","sort","simpAddSubQ","coeffs","letters","threeVars","twoVars","oneVar","Brackets1","outer","varNames","multiply","out","inner","Expand1","FactoriseQ","level","co","p1","p2","Expand2","out1","co1","pm","out2","co2","first","second","final","Algebra01Q","Algebra01","newQ","furtherInstructions","mult","Expand1Q","c1","c2","o1","o2","vs","Expand2SimplifyQ","expression","valList","answer","toSub","substitutionQ","tidy","u","SolveLinearQ","SolveLinear","coefOfx","constTerm","oneStepTypes","qType","oneStep","coeffOfx","twoStep","bracketType","bracketQ","bothsSidestype","otherCoef","bothSidesQ","fractionType","r","d","linearFractionQ","modeQ","howMany","offset","tally","modes","maxFreq","p","forEach","rangeQ","medianQ","listLength","sortedList","meanQ","listTotal","targetMean","ceil","DataQ","Data","DecimalQ","Decimal","hundreds","tens","smaller","tensBigger","aBitOff","listDecimals","upOrDown","orderQ","dPlaces","dToRound","round","toFixed","roundQ","NegNumQ","NegNumbers","op","notBothPositive","FactorsMultiplesQ","FactorsMultiples","base","times","findMultipleQ","factor","multiple","facOrMulQ","numOfPrimes","prodOfPrimesQ","hcf","numbers","hcfQ","lcmQ","number","numFactorsQ","beginners","intermediate","subTypeList","percentAmount","percen","amount","GetNewQ","returnable","MultiplyNumbers","MultiplyNumberQ","PercentOf","PercentOfQ","PercentChange","PercentChangeQ","ReversePercentageQ","transformRating","rating","NewRatings","rating1","rating2","result","howProvisional","r1","r2","ratingSum","newR1","newR2","connect","state","extraKeys4Pad","Keypad_number","payload","Keypad_delete","buttons1_9","onClick","className","key","button0","buttonDP","buttonDEL","buttonCount","extraButtons","needNewRatedQ","wrongAnswers","userAnswer","userRating","UpdateUserAnswer","newAnswer","UserRatingChanges","newUserRating","SetNewQ","newQuAndA","UserIsWrong","newQuAndARating","wrongAnswer","NeedNewRatedQ","wrongAnswerList","useEffect","async","toGet","qRating","axios","get","params","then","res","data","catch","err","getQRating","promiseMessage","QRating","id","onSubmit","e","preventDefault","userIsCorrect","toLowerCase","replace","toPost","category","ratingValue","put","name","onChange","target","QWithReveal","showAnswer","localQ","props","freshQ","quandaClass","rowType","handleClick","setState","refreshQ","RevealButton","this","Answer","title","React","Component","ClassRoom","qList","typeList","QTypeSplit","selectedTopics","ToggleTopic","AllTopics","mode","qTypeList","DropdownButton","variant","includes","startsWith","Dropdown","Item","st","active","Button","ButtonGroup","LoginUser","userName","Form","event","UserName","password","status","Group","Label","Control","placeholder","required","Text","userID","currentQ","activeScreen","giveme5Option","rateMymathsOption","selectTopicsOption","userLabel","size","mainScreen","defaultExtraKeys","initialState","userLoggedIn","addOrDrop","el","reducer","action","Boolean","window","location","hostname","match","ReactDOM","render","store","createStore","Reducer","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d2995428.chunk.js","sourcesContent":["export const RandomElement = (arr) => arr[Math.floor(Math.random()*arr.length)];\r\nexport const RandomInt = (n) => Math.floor(Math.random()*n);\r\nexport const nRandomInts = (n, max) => {\r\n    var l = [];\r\n    var i = 0;\r\n    while (i < n){\r\n        l.push(RandomInt(max));\r\n        i++;\r\n    }\r\n    return l;\r\n}\r\n\r\nexport const elementsFrom = (n, arr) => {\r\n    if (arr.length === n) {return arr}\r\n    if (arr.length > n) {return distinctElementsFrom(n, arr)}\r\n    var list = [];\r\n    while (list.length<n) {\r\n        list = [...list, ...arr];\r\n    }\r\n    return list.slice(0, n)\r\n}\r\n\r\nexport const distinctElementsFrom = (n, arr) => {\r\n    var list = [];\r\n    if (arr.length<=n) {return arr}\r\n    while (list.length<n) {\r\n        list.push(RandomElement(arr.filter(x=>list.indexOf(x)===-1)))\r\n    }\r\n    return list\r\n}\r\n\r\nexport const primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47];\r\nexport const smallPrimes = [2, 3, 5, 7];\r\n\r\nexport const RandomPrime = (t) => t === 'small' ? RandomElement(smallPrimes) : RandomElement(primes);\r\nexport const distinctPrimes = (n, t) => t === 'small' ? \r\n            distinctElementsFrom(n, smallPrimes) : distinctElementsFrom(n, primes);\r\n\r\nexport const random2357 = (maxE) => {\r\n    // This function gives a random number in prime power notation\r\n    // The output is an object with powers property (powers to which 2, 3, 5, 7 are raised).\r\n    // and value property\r\n    // the highest exponent in maxE\r\n    let exponents = [0,0,0,0].map(x=>RandomInt(maxE+1));\r\n    if (exponents.every(x => x===0)) {exponents = [0, 1, 0, 1]}// gives 21 as a default, rather than 0\r\n    let value = [2, 3, 5, 7].map((x, i) => x**exponents[i])\r\n        .reduce((acc, val) => acc*val, 1)\r\n    return {exponents, value}\r\n}\r\n\r\nconst names = [\r\n    'Alex', 'Arlene', 'Bruce', 'Caroline', 'Demi', 'Evette', \r\n    'Felix', 'Farnaz', 'Grace', 'Helen', 'Isobel', 'James', 'Jana', \r\n    'Katie', 'Kal', 'Louise', 'Meera', 'Muthu', 'Natalie', 'Nandini', 'Nadiya',\r\n    'Parvathy',\r\n    'Ranjit', 'Raji', \r\n    'Sharon','Shraddha', 'Steven', 'Sam',\r\n    'Victoria', 'Val',\r\n    'Zanet'\r\n];\r\n\r\nexport const randomNames = (n) => distinctElementsFrom(n, names);\r\n","export const UPDATE_USER_ANSWER = 'UPDATE_USER_ANSWER';\r\nexport const TOGGLE_TOPIC = \"TOGGLE_TOPIC\";\r\nexport const ALL_TOPICS = \"ALL_TOPICS\";\r\nexport const SET_NEW_Q = 'SET_NEW_Q';\r\nexport const USER_IS_WRONG = 'USER_IS_WRONG';\r\nexport const USER_RATING_CHANGES = 'USER_RATING_CHANGES';\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const CHANGE_ACTIVE_SCREEN = 'CHANGE_ACTIVE_SCREEN';\r\nexport const NEED_NEW_RATED_Q = 'NEED_NEW_RATED_Q';\r\nexport const KEYPAD_NUMBER = 'KEYPAD_NUMBER';\r\nexport const KEYPAD_DELETE = 'KEYPAD_DELETE';\r\n\r\nexport const UpdateUserAnswer = (newAnswer) => {\r\n    return { type: UPDATE_USER_ANSWER, payload: newAnswer}\r\n}\r\n\r\nexport const ToggleTopic = (topic) => {\r\n    return { type: TOGGLE_TOPIC, topic:topic }\r\n}\r\n\r\nexport const AllTopics = (mode) => {\r\n    return { type: ALL_TOPICS, mode }\r\n}\r\n\r\nexport const SetNewQ = (newQuAndA) => {\r\n    return { type:SET_NEW_Q, quAndA: newQuAndA }\r\n}\r\n\r\nexport const UserIsWrong = (userAnswer, newQuAndARating) => {\r\n    return { type:USER_IS_WRONG, wrongAnswer:userAnswer, newQuAndARating:newQuAndARating }\r\n}\r\n\r\nexport const UserRatingChanges = (newUserRating) => {\r\n    return { type: USER_RATING_CHANGES, userRating: newUserRating}\r\n}\r\n\r\nexport const LoginUser = (name, rating) => {\r\n    return { type: LOGIN_USER, userName: name, userRating:rating }\r\n}\r\n\r\nexport const ChangeActiveScreen = (newScreen) => {\r\n    return { type: CHANGE_ACTIVE_SCREEN, newScreen:newScreen }\r\n}\r\n\r\nexport const NeedNewRatedQ = () => {\r\n    return {type: NEED_NEW_RATED_Q}\r\n}\r\n\r\nexport const Keypad_number = (n) => {\r\n    return {type:KEYPAD_NUMBER, payload:n}\r\n}\r\n\r\nexport const Keypad_delete = () => {\r\n    return {type:KEYPAD_DELETE}\r\n}","export const metricConversion = 'metricConversion';\r\nexport const TimeConversion = 'TimeConversion';\r\nexport const MultiplyNumbers = 'MultiplyNumbers';\r\nexport const NegNumbers = 'NegNumbers';\r\nexport const FactorsMultiples = 'FactorsAndMultiples';\r\nexport const PercentOf = 'PercentOf';\r\nexport const PercentChange = 'PercentChange';\r\nexport const ReversePercentage = 'ReversePercentage';\r\nexport const Vocab = 'Vocab';\r\nexport const Ratio = 'Ratio';\r\nexport const Algebra01 = 'Algebra01';\r\nexport const SolveLinear = 'SolveLinear';\r\nexport const Data = 'Data';\r\nexport const Decimal = 'Decimal';\r\n\r\n// Aiming for QCodes which the app can parse to produce a new question of the same type\r\n// but with different numbers.\r\n\r\n// Format will be a string with format QType-subQType\r\n// 'metricConversion-2', or 'Algebra01-expandBracket'\r\n// whereas: just 'metricConversion' (or 'metricConversion-0') \r\n// should allow for a random choice of subQType\r\n\r\nexport const QTypes = [\r\n    { topic: Algebra01, subTopics: ['simplifyAddSub', 'expandBracket', 'expand2Simplify', 'factorise1', 'factorise2', 'substitution'] },\r\n    { topic: SolveLinear, subTopics: ['oneStep', 'twoStep', 'brackets', 'bothSides', 'fraction'] },\r\n    { topic: Data, subTopics: ['mean', 'meanFindmissing', 'medianOdd', 'medianEven', 'range', 'mode'] },\r\n    { topic: MultiplyNumbers, subTopics: ['sq', 'cube', 'sqEnd5', 'sqEnd1', 'gridWhole'] },\r\n    { topic: NegNumbers, subTopics: ['adding', 'subtract', 'times', 'divide'] },\r\n    { topic: Decimal, subTopics: ['order', 'round'] },\r\n    { topic: metricConversion, subTopics: ['m/cm', 'm/mm', 'km/m', 'g/mg', 'kg/g', 'L/cL', 'L/mL'] },\r\n    { topic: TimeConversion, subTopics: ['secMin', 'secMinHr'] },\r\n    { topic: FactorsMultiples, subTopics: ['prodOfPrimes', 'findMultiple', 'facOrMul', 'hcf', 'lcm', 'numFactors'] },\r\n    { topic: PercentOf, subTopics: ['beginner1', 'beginner2', 'intermediate', 'expert'] },\r\n    { topic: PercentChange, subTopics: ['beginner1', 'beginner2', 'intermediate', 'expert'] },\r\n    { topic: ReversePercentage, subTopics: [] },\r\n    { topic: Ratio, subTopics: ['simplify', 'mapForm', 'keepRatio', 'share', 'givenDiff'] },\r\n    { topic: Vocab, subTopics: [] }\r\n];","import { metricConversion } from './QTypes';\r\n\r\nconst conversionPairs = [\r\n  { type: 'zeroQ' },\r\n  { type: 'm/cm', large: ['metres', 'm'], small: ['centimetres', 'cm'], ratio: 100 },\r\n  { type: 'm/mm', large: ['metres', 'm'], small: ['millimetres', 'mm'], ratio: 1000 },\r\n  { type: 'km/m', large: ['kilometres', 'Km'], small: ['metres', 'm'], ratio: 1000 },\r\n\r\n  { type: 'g/mg', large: ['grams', 'g'], small: ['milligrams', 'mg'], ratio: 1000 },\r\n  { type: 'kg/g', large: ['kilograms', 'Kg'], small: ['grams', 'g'], ratio: 1000 },\r\n\r\n  { type: 'L/cL', large: ['litres', 'L'], small: ['centilitres', 'cL'], ratio: 100 },\r\n  { type: 'L/mL', large: ['litres', 'L'], small: ['millilitres', 'mL'], ratio: 1000 },\r\n]\r\n\r\nconst MetricConversionQ = (subQType) => {\r\n  var Qtype = conversionPairs.findIndex(cp => cp.type === subQType);\r\n  console.log('index for convFacts Q is', Qtype, 'from parameter', subQType)\r\n  if (Qtype === -1) {\r\n    Qtype = Math.floor(Math.random() * (conversionPairs.length - 1)) + 1;\r\n    console.log('index changed for convFacts Q is', Qtype, 'from parameter', subQType)\r\n  }\r\n  //console.log(metricConversion+'-'+Qtype);\r\n  var convFacts = conversionPairs[Qtype];\r\n  let forward = Math.random() < 0.5 ? true : false,\r\n    extraLarge = Math.random() < 0.25 ? 1 : Math.random() < 0.8 ? 10 : 100;\r\n  let small = Math.floor(Math.random() * convFacts.ratio) * extraLarge,\r\n    large = small / convFacts.ratio;\r\n  return forward ?\r\n    {\r\n      q: \"Convert \" + small + convFacts.small[1] + \" to \" + convFacts.large[0],\r\n      a: '' + large, QType: metricConversion + '-' + conversionPairs[Qtype].type\r\n    } :\r\n    {\r\n      q: \"Convert \" + large + convFacts.large[1] + \" to \" + convFacts.small[0],\r\n      a: '' + small, QType: metricConversion + '-' + conversionPairs[Qtype].type\r\n    }\r\n}\r\n\r\nexport default MetricConversionQ;\r\n","import { TimeConversion } from './QTypes';\r\n\r\n// so ohr 2min 28sec => 148sec\r\nconst hms2sec = (h, m, s) => h*3600+m*60+s\r\n\r\nconst conversionPairs = [\r\n    'null',\r\n    'secMin', 'secMinHr',\r\n    //'minHr', 'minHrDays',\r\n    //'hrDays', 'hrWeeks', 'hrDaysWeeks'\r\n]\r\n\r\nconst rnd = (outof) => Math.floor(Math.random()*outof);\r\n\r\nconst TimeConversionQ = (subType) => {\r\n    var subQType = Number(subType) || Math.floor(Math.random()*(conversionPairs.length-1))+1;\r\n    /* direction of conversion decided by forward variable\r\n    * before composing quAndA: parts are labeled left, middle and right\r\n    * so 1min 78sec will give\r\n    * LMR: 138, 1, 78\r\n    * and the Qs\r\n    * 138 seconds is 1min and how many seconds?\r\n    * 138 seconds is 18seconds and how many minutes?\r\n    * Convert 1min 78sec into seconds\r\n    * because answer should be a number\r\n    */\r\n\r\n    // at the moment, I don't like the need for answers with unspecified format\r\n    // So I am setting forward to false so it never asks for answer in form 2hr 3min 5sec\r\n    let forward = Math.random() < 0 ? true : false;\r\n    var left, right, leftUnits, rightUnits;\r\n    var sec = rnd(60), min = rnd(60), hr = rnd(24);\r\n    switch (conversionPairs[subQType]) {\r\n        case 'secMin' : {\r\n            if (min===0) {min++}\r\n            var totalSec = hms2sec(0, min, sec);\r\n            left =''+totalSec; right = min+'min '+sec+'sec';\r\n            leftUnits = 'seconds'; rightUnits = 'minutes and seconds';\r\n            break\r\n        }\r\n        case 'secMinHr' : {\r\n            totalSec = hms2sec(hr, min, sec);\r\n            left = ''+totalSec; right=hr+'hr '+min+'min '+sec+'sec';\r\n            leftUnits='seconds'; rightUnits = 'hours minutes and seconds';\r\n            break\r\n        }\r\n        default: return { q:'TimeConversion default Q', a:'625' }\r\n    }\r\n    subQType = TimeConversion+'-'+conversionPairs[subQType];\r\n    // console.log(subQType);\r\n    return forward ? \r\n        { q:'Convert '+left+leftUnits+' to '+rightUnits, \r\n          a:right, QType:subQType, answerFormat:'string', extraKeys:['hrs', 'min', 'sec'] } :\r\n        { q:'Convert '+right+' to '+leftUnits,\r\n          a:left, QType:subQType, answerFormat:'number', extraKeys:['hrs', 'min', 'sec'] }\r\n}\r\n\r\nexport default TimeConversionQ\r\n","import { Vocab } from './QTypes';\r\n\r\nconst circleVocab = [\r\n    {q:'What do you call a line that goes from the edge of a circle, through the centre, to the other side?', \r\n     a:'diameter'},\r\n    {q:'What do you call a line from the centre of a circle to the edge of the circle?', a:'radius'},\r\n    {q:'What do you call a line that just touches the outside of a circle?', a:'tangent'},\r\n    {q:'What do you call a line that cuts across a circle, but not necessarily through the centre?', a:'chord'},\r\n    {q:'A chord cuts a circle into two ...?', a:'segments'},\r\n    {q:'Two radii (radiuses) cut out a piece like a slice of pie, called a ...?', a:'sector'}\r\n];\r\n\r\nconst triangleVocab = [\r\n    {q:'A triangle with all sides equal is described as ...?', a:'equilateral'},\r\n    {q:'A triangle with exactly two sides equal is described as ...?', a:'isosceles'},\r\n    {q:'A triangle with all sides of different length is described as ...?', a:'scalene'},\r\n    {q:'The long side of a right-angled triangle is called the ...?', a:'hypotenuse'}\r\n];\r\n\r\nconst angleVocab = [\r\n    {q:'An angle which is less than 90 degrees is described as ...?', a:'acute'},\r\n    {q:'An angle which is exactly 90 degrees is described as ...?', a:'right'},\r\n    {q:'An angle which is more than 90 degrees is described as ...?', a:'obtuse'},\r\n    {q:'An angle which is more than 180 degrees is described as ...?', a:'reflex'},\r\n    {q:'Two angles which add up to 180 degress are described as ...?', a:'supplementary'},\r\n    {q:'Two angles which add up to 90 degress are described as ...?', a:'complementary'},\r\n    {q:'Lines which point in the same direction and never meet are described as ...?', a:'parallel'}\r\n]\r\n\r\nconst VocabQList = [...circleVocab, ...triangleVocab, ...angleVocab];\r\n\r\nconst VocabQ = () => {\r\n    var question = Math.floor(Math.random()*VocabQList.length);\r\n    return {...VocabQList[question], answerFormat:'string', QType:Vocab}\r\n}\r\n\r\nexport default VocabQ;\r\n","import { Ratio } from './QTypes';\r\nimport { RandomInt, RandomElement, randomNames, distinctElementsFrom } from './RandomFuncs';\r\n\r\nconst subQTypes = [\r\n    null, 'simplify', 'mapForm', 'keepRatio', 'share', 'givenDiff'\r\n];\r\n\r\nconst coprimes = {\r\n    1: [2, 3, 4, 5, 6, 7, 8, 9],\r\n    2: [3, 5, 7, 9],\r\n    3: [4, 5, 7, 8],\r\n    4: [5, 7, 9],\r\n    5: [6, 7, 8, 9]//,\r\n    // 6 : [7],\r\n    // 7 : [8, 9],\r\n    // 8 : [9]\r\n}\r\n\r\n// apart from 7 itself, these numbers have only 2, 3, 5 as prime factors (and not too high)\r\nconst multipliers = [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 15, 18, 20, 24, 25, 30];\r\n\r\n// decimals and fractions [decimal, numerator, denominator]\r\nconst decFrac = [\r\n    [0.5, 1, 2],\r\n    [1.5, 3, 2],\r\n    [2.5, 5, 2],\r\n    [0.25, 1, 4],\r\n    [0.75, 3, 4],\r\n    [1.25, 5, 4],\r\n    [0.2, 1, 5],\r\n    [0.4, 2, 5],\r\n    [0.6, 3, 5],\r\n    [0.8, 4, 5],\r\n    [1.2, 6, 5]\r\n]\r\n\r\nconst simplifyQ = () => {\r\n    var a = '' + (RandomInt(5) + 1);\r\n    var b = RandomElement(coprimes[a]);\r\n    if (RandomInt(2) === 0) { [a, b] = [b, a] }\r\n    var m = RandomElement(multipliers);\r\n    return { high: a * m + ':' + b * m, simp: a + ':' + b }\r\n}\r\n\r\nconst mapFormQ = () => {\r\n    var dF = RandomElement(decFrac);\r\n    var m = RandomElement(multipliers.slice(0, 5));\r\n    return { high: m * dF[2] + ':' + m * dF[1], mF: '1:' + dF[0] }\r\n}\r\n\r\nconst giveNames = (arr) => {\r\n    // don't use with only one name in the array!\r\n    if (arr.length === 2) { return arr.join(' and ') }\r\n    return arr[0] + ', ' + giveNames(arr.slice(1))\r\n}\r\n\r\nconst keepRatioQ = () => {\r\n    var n = randomNames(3);\r\n    var seq = RandomElement(['012', '021', '120', '102', '210', '201']).split('').map(Number);\r\n    var ratioVals = distinctElementsFrom(3, [1, 2, 3, 4, 5, 6, 7, 8, 9]);\r\n    var m = RandomInt(10) + 2;\r\n    var qFormat = RandomInt(3);\r\n    var q = '', a = '';\r\n    switch (qFormat) {\r\n        case 0: {\r\n            q = giveNames(n) + ' share some money in the ratio ' + ratioVals.join(':')\r\n                + '   ' + n[seq[0]] + ' gets £' + ratioVals[seq[0]] * m\r\n                + '   How much money did they share?';\r\n            a = ratioVals.reduce((a, b) => a + b) * m;\r\n            break\r\n        }\r\n        case 1: {\r\n            q = giveNames([n[0], n[1]]) + ' share some money in the ratio '\r\n                + ratioVals.slice(0, 2).join(':')\r\n                + '   ' + n[0] + ' gets £' + ratioVals[0] * m\r\n                + '   How much does ' + n[1] + ' get?';\r\n            a = ratioVals[1] * m;\r\n            break\r\n        }\r\n        default: {\r\n            q = giveNames(n) + ' share some money in the ratio ' + ratioVals.join(':')\r\n                + '   ' + n[seq[0]] + ' gets £' + ratioVals[seq[0]] * m\r\n                + '   How much does ' + n[seq[1]] + ' get?';\r\n            a = ratioVals[seq[1]] * m;\r\n        }\r\n    }\r\n    return { q, a }\r\n}\r\n\r\nconst shareQ = () => {\r\n    var n = randomNames(3);\r\n    var askAbout = RandomInt(3);\r\n    var ratioVals = distinctElementsFrom(3, [1, 2, 3, 4, 5, 6, 7, 8, 9]);\r\n    var m = RandomInt(10) + 2;\r\n    var q = giveNames(n) + ' share £' + ratioVals.reduce((a, b) => a + b) * m\r\n        + ' in the ratio ' + ratioVals.join(':')\r\n        + '   How much money did ' + n[askAbout] + ' get?';\r\n    var a = ratioVals[askAbout] * m;\r\n    return { q, a }\r\n}\r\n\r\nconst givenDiffQ = () => {\r\n    var n = randomNames(3);\r\n    var seq = RandomElement(['012', '021', '120', '102', '210', '201']).split('').map(Number);\r\n    var ratioVals = distinctElementsFrom(3, [1, 2, 3, 4, 5, 6, 7, 8, 9]);\r\n    var m = RandomInt(10) + 2;\r\n    var comparitor = ratioVals[seq[0]] > ratioVals[seq[1]] ? ' more' : ' less';\r\n    var q = giveNames(n) + ' shared some money in the ratio ' + ratioVals.join(':')\r\n        + ' ' +n[seq[0]] + ' got ' + Math.abs((ratioVals[seq[0]] - ratioVals[seq[1]]) * m)\r\n        + comparitor + ' than ' + n[seq[1]]\r\n        + '.   How much money did ' + n[seq[2]] + ' get?';\r\n    var a = ratioVals[seq[2]] * m;\r\n    return { q, a }\r\n}\r\n\r\nconst RatioQ = (subType) => {\r\n    const subQType = subType || RandomElement(subQTypes.slice(1));\r\n    var quAndA = { QType: Ratio + '-' + subQType, extraKeys: [':', ':', ':'] }\r\n\r\n    switch (subQType) {\r\n        case 'simplify': {\r\n            var qA = simplifyQ();\r\n            quAndA.q = \"Simplify \" + qA.high;\r\n            quAndA.a = qA.simp;\r\n            quAndA.answerFormat = \"string\";\r\n            break\r\n        }\r\n        case 'mapForm': {\r\n            qA = mapFormQ();\r\n            quAndA.q = \"Express \" + qA.high + \" in the form 1:n\";\r\n            quAndA.a = qA.mF;\r\n            quAndA.answerFormat = \"string\";\r\n            break\r\n        }\r\n        case 'keepRatio': {\r\n            qA = keepRatioQ();\r\n            quAndA.q = qA.q;\r\n            quAndA.a = qA.a;\r\n            break\r\n        }\r\n        case 'share': {\r\n            qA = shareQ();\r\n            quAndA.q = qA.q;\r\n            quAndA.a = qA.a;\r\n            break\r\n        }\r\n        case 'givenDiff': {\r\n            qA = givenDiffQ();\r\n            quAndA.q = qA.q;\r\n            quAndA.a = qA.a;\r\n            break\r\n        }\r\n        default: { quAndA.q = \"Ratio default Q\"; quAndA.a = \"42\" }\r\n    }\r\n\r\n    // console.log(quAndA);\r\n    return quAndA\r\n}\r\n\r\nexport default RatioQ;","const { RandomInt, RandomElement } = require('../RandomFuncs');\r\nexport const Coeffs = (n) => Array(n).fill(9).map(RandomInt)\r\n        .map((x, i)=>{\r\n            if (i===0) {return x+1}\r\n            return RandomInt(2) === 1 ? x+1 : -(x+1)\r\n        });\r\nexport const threeVars = (n) => Array(n).fill(['a', 'b', 'c']).map(RandomElement);\r\nexport const twoVars = (n) => Array(n).fill(['a', 'b']).map(RandomElement);\r\nexport const oneVar = (n) => Array(n).fill(RandomElement(['a', 'b', 'c']));","import { Coeffs, threeVars, twoVars, oneVar } from './CoeffsAndVars';\r\nconst { RandomInt } = require('../RandomFuncs');\r\n\r\n\r\n// to test above, which are random so can't be tested with jest\r\n// for (var i = 0; i<10; i++) {\r\n//     console.log(Coeffs(4), Coeffs(6));\r\n//     console.log(threeVars(4), threeVars(7));\r\n//     console.log(twoVars(3), twoVars(6));\r\n//     console.log(oneVar(8), oneVar(2));\r\n// }\r\n\r\n\r\n// parameters are coefficients and the variable names\r\n// output is an expression such as 6a+7c+3b-9a+4c\r\nexport const combine = (c, v) => {\r\n    var l = Math.min(c.length, v.length);\r\n    if (l === 0 ) {return null}\r\n    var exp = '';\r\n    for (var i = 0; i<l; i++) {\r\n        if (c[i]!== 0) {\r\n            exp += c[i] < 0 ? '-' : exp.length > 0 ? '+' : '';\r\n            var val = Math.abs(c[i]);\r\n            exp += val === 1 && v[i] !== '' ? '' : val;\r\n            exp += v[i];\r\n        }\r\n    }\r\n    // console.log('combining ', c, v, 'to get', exp)\r\n    return exp === '' ? '0' : exp;\r\n}\r\n\r\n// parameters are coefficients and the variable names\r\n// output is the simplified form of the expression given by combine\r\nexport const SimplifyAddSub = (c, v) => {\r\n    var varList = v.filter((x, i)=> v.indexOf(x) === i).sort();\r\n    const collectLikeTerms = (a) => c.reduce((acc, val, i) => v[i]===a?acc+val:acc, 0);\r\n    return combine(varList.map(collectLikeTerms), varList);\r\n}\r\n\r\n// expression in Q has n terms\r\n// at the moment, none of them are simply numbers\r\nexport const simpAddSubQ = (n) => {\r\n    var coeffs = Coeffs(n);\r\n    var t = RandomInt(4); // to choose how many variables to put into Q\r\n    var letters = t<=1? threeVars(n) : t===2 ? twoVars(n) : oneVar(n);\r\n    return {\r\n        q : 'Simplify '+combine(coeffs, letters),\r\n        a : SimplifyAddSub(coeffs, letters)\r\n    } \r\n}\r\n\r\n//console.log(Coeffs(), threeVars());","import { Coeffs } from './CoeffsAndVars';\r\nimport { RandomInt, distinctPrimes } from '../RandomFuncs';\r\nimport { combine } from './SimplifyAddSub';\r\n\r\nexport const Brackets1 = (outer, coeffs, varNames) => {\r\n    var inner = combine(coeffs, varNames)\r\n    return outer + '(' + inner + ')'\r\n}\r\n\r\nconst multiply = (out, inner) => inner.map(x => out * x)\r\nexport const Expand1 = (outer, coeffs, varNames) => combine(multiply(outer, coeffs), varNames);\r\n\r\nexport const Expand1Q = () => {\r\n    var co = Coeffs(2), mult = RandomInt(9) + 2;\r\n    return {\r\n        q: 'Expand ' + Brackets1(mult, co, ['a', '']),\r\n        a: Expand1(mult, co, ['a', ''])\r\n    }\r\n}\r\nexport const FactoriseQ = (level) => {\r\n    var co = [];\r\n    var [p1, p2] = distinctPrimes(2, 'small');\r\n    switch (level) {\r\n        case 1: { co = RandomInt(2) === 0 ? [1, p1] : [p1, 1]; break }\r\n        case 2: { co = RandomInt(2) === 0 ? [p1, p2] : [p1, -p2]; break }\r\n        default: { console.log('level unknown in FactoriseQ:', level); co = [3, 2] }\r\n    }\r\n    var out = RandomInt(9) + 2;\r\n    return {\r\n        q: 'Factorise ' + Expand1(out, co, ['a', 'b']),\r\n        a: Brackets1(out, co, ['a', 'b'])\r\n    }\r\n}\r\n\r\n// brackets always contain same variable names in same order\r\nexport const Expand2 = (out1, co1, pm, out2, co2, varNames) => {\r\n    var first = multiply(out1, co1), second = multiply(out2, co2);\r\n    var final = first.map((x, i) => pm === '+' ? x + second[i] : x - second[i]);\r\n    return combine(final, varNames)\r\n}\r\n\r\nexport const Expand2SimplifyQ = () => {\r\n    var c1 = Coeffs(2), c2 = Coeffs(2);\r\n    var o1 = RandomInt(9) + 2, o2 = RandomInt(9) + 2;\r\n    var pm = RandomInt(2) === 0 ? '+' : '-';\r\n    var vs = ['a', 'b']\r\n    return {\r\n        q: 'Expand and simplify ' + Brackets1(o1, c1, vs) + pm + Brackets1(o2, c2, vs),\r\n        a: Expand2(o1, c1, pm, o2, c2, vs)\r\n    }\r\n}","import { Algebra01 } from './QTypes';\r\nimport { RandomElement } from './RandomFuncs';\r\nimport { simpAddSubQ } from './AlgebraFuncs/SimplifyAddSub';\r\nimport { Expand1Q, Expand2SimplifyQ, FactoriseQ } from './AlgebraFuncs/ExpandBracket';\r\nimport { substitutionQ } from './AlgebraFuncs/substitution';\r\n\r\nconst subQTypes = [\r\n    null, 'simplifyAddSub', 'expandBracket', 'expand2Simplify', 'factorise1', 'factorise2', 'substitution'\r\n];\r\n\r\nconst Algebra01Q = (subType) => {\r\n    const subQType = subType || RandomElement(subQTypes.slice(1));\r\n    var quAndA = {\r\n        QType: Algebra01 + '-' + subQType,\r\n        extraKeys: ['a', 'b', 'c', '+', '-', '/'],\r\n    }\r\n    var newQ = {};\r\n    switch (subQType) {\r\n        case 'simplifyAddSub': {\r\n            newQ = simpAddSubQ(5);\r\n            quAndA.answerFormat = 'string';\r\n            quAndA.furtherInstructions = 'Give variables in alphabetical order. eg: 7+3a-2b'\r\n            break\r\n        }\r\n        case 'expandBracket': {\r\n            newQ = Expand1Q();\r\n            quAndA.answerFormat = 'string';\r\n            quAndA.furtherInstructions = 'Give variables in order of appearance in brackets';\r\n            break\r\n        }\r\n        case 'expand2Simplify': {\r\n            newQ = Expand2SimplifyQ();\r\n            quAndA.answerFormat = 'string';\r\n            quAndA.furtherInstructions = 'Give variables in order of appearance in brackets';\r\n            break\r\n\r\n        }\r\n        case 'factorise1': {\r\n            newQ = FactoriseQ(1);\r\n            quAndA.answerFormat = 'string';\r\n            quAndA.furtherInstructions = 'Give variables in order of appearance';\r\n            quAndA.extraKeys = ['a', 'b', '(', '+', '-', ')'];\r\n            break\r\n        }\r\n        case 'factorise2': {\r\n            newQ = FactoriseQ(2);\r\n            quAndA.answerFormat = 'string';\r\n            quAndA.furtherInstructions = 'Give variables in order of appearance';\r\n            quAndA.extraKeys = ['a', 'b', '(', '+', '-', ')'];\r\n            break\r\n        }\r\n        case 'substitution': {\r\n            newQ = substitutionQ();\r\n            break\r\n        }\r\n        default: { newQ.q = 'default algebra01 Q'; newQ.a = 42 }\r\n    }\r\n    quAndA.q = newQ.q; quAndA.a = newQ.a;\r\n    return quAndA;\r\n}\r\n\r\nexport default Algebra01Q;","import { combine } from './SimplifyAddSub'\r\nimport { Coeffs } from './CoeffsAndVars'\r\nimport { RandomInt } from '../RandomFuncs';\r\n\r\nexport const substitutionQ = (level = RandomInt(4)) => {\r\n    let expression, valList, answer;\r\n    let coeffs = Coeffs(4);\r\n    let toSub = Coeffs(4);\r\n    switch (level) {\r\n        case 0: {\r\n            expression = combine(coeffs.slice(0, 2), ['a', ''])\r\n            valList = 'a=' + toSub[0]; // don't allow negative values, coeffs always begin positive\r\n            answer = coeffs[0] * toSub[0] + coeffs[1]\r\n            break\r\n        }\r\n        case 1: {\r\n            expression = combine(coeffs.slice(0, 2), ['a', ''])\r\n            valList = 'a=' + toSub[1]; // allow negative values\r\n            answer = coeffs[0] * toSub[1] + coeffs[1]\r\n            break\r\n        }\r\n        case 2: {\r\n            expression = combine(coeffs.slice(0, 3), ['b', 'a', ''])\r\n            valList = 'a=' + toSub[1] + ' b=' + toSub[0];\r\n            answer = coeffs[0] * toSub[0] + coeffs[1] * toSub[1] + coeffs[2]\r\n            break\r\n        }\r\n        case 3: {\r\n            expression = combine(coeffs.slice(0, 3), ['ab', 'a', 'b'])\r\n            valList = 'a=' + toSub[0] + ' b=' + toSub[1];\r\n            answer = coeffs[0] * toSub[0] * toSub[1] + coeffs[1] * toSub[0] + coeffs[2] * toSub[1]\r\n            break\r\n        }\r\n        default: {\r\n            expression = '4x+2';\r\n            valList = 'x = 10';\r\n            answer = 42\r\n        }\r\n    }\r\n    return {\r\n        QType: \"Algebra01-substitution\",\r\n        q: 'What is the value of ' + expression + ' when ' + valList,\r\n        a: answer\r\n    }\r\n}","// generate the qs where the unknown is on both sides\r\n/**\r\n * make sure to account for all types listed in sloveLinear:\r\n * let bothsSidestype = [\r\n                'ax+b=x+?', 'x+?=b-ax', 'ax-b=x+?', '?-x=ax+b', \r\n                'ax+b=cx+?', 'b-ax=cx+?', 'cx+?=b-ax',\r\n                'c(x+b)=ax+?', 'c(b-x)=ax+?'\r\n            ][RandomInt(10)]\r\n */\r\nconst tidy = (u) => u < 0 ? ' - ' + (-u) : u === 0 ? '' : ' + ' + u\r\nexport const bothSidesQ = (x, coefOfx, constTerm, otherCoef, qType) => {\r\n    switch (qType) {\r\n        case 'ax+b=x+?': {\r\n            let unknown = (coefOfx - 1) * x + constTerm;\r\n            return coefOfx + 'x + ' + constTerm + ' = x' + tidy(unknown)\r\n        }\r\n        case 'x+?=b-ax': {\r\n            let unknown = constTerm - (coefOfx + 1) * x;\r\n            return 'x' + tidy(unknown) + ' = ' + constTerm + ' - ' + coefOfx + 'x'\r\n        }\r\n        case 'ax-b=x+?': {\r\n            let unknown = (coefOfx - 1) * x - constTerm;\r\n            return coefOfx + 'x - ' + constTerm + ' = x' + tidy(unknown)\r\n        }\r\n        case '?-x=ax+b': {\r\n            let unknown = constTerm + (coefOfx + 1) * x;\r\n            return unknown + ' - x = ' + coefOfx + 'x + ' + constTerm\r\n        }\r\n\r\n        case 'ax+b=cx+?': { //case 5\r\n            let unknown = (coefOfx - otherCoef) * x + constTerm;\r\n            return coefOfx + 'x + ' + constTerm + ' = ' + otherCoef + 'x' + tidy(unknown)\r\n        }\r\n        case 'b-ax=cx+?': {\r\n            let unknown = constTerm - (coefOfx + otherCoef) * x;\r\n            return constTerm + ' - ' + coefOfx + 'x = ' + otherCoef + 'x' + tidy(unknown)\r\n        }\r\n        case 'cx+?=b-ax': {\r\n            let unknown = constTerm - (coefOfx + otherCoef) * x;\r\n            return otherCoef + 'x' + tidy(unknown) + ' = ' + constTerm + ' - ' + coefOfx + 'x';\r\n        }\r\n\r\n        case 'c(x+b)=ax+?': {\r\n            let unknown = otherCoef * constTerm + (otherCoef - coefOfx) * x;\r\n            return otherCoef + '(x + ' + constTerm + ') = ' + coefOfx + 'x' + tidy(unknown)\r\n        }\r\n        case 'c(b-x)=ax+?': {\r\n            let unknown = otherCoef * constTerm - (otherCoef + coefOfx) * x;\r\n            return otherCoef+'('+constTerm+' - x) = '+coefOfx+'x'+tidy(unknown)\r\n        }\r\n        default: return '2x+0=x+' + x\r\n    }\r\n}","import { RandomInt } from '../../RandomFuncs'\r\n// Be sure to include all types listed in solveLinear.js\r\n// let fractionType = ['(cx+d) / (ax+b)', '(cx+d) / (b-ax)', '(d-cx) / (b-ax)'][RandomInt(3)];\r\n\r\n/**\r\n * we need top = bottom*r\r\n * where bottom can be our (ax + b)\r\n * then c and d can be worked out from the ratio\r\n*/\r\n\r\nconst tidy = (u) => u < 0 ? ' - ' + (-u) : u === 0 ? '' : ' + ' + u\r\nexport const linearFractionQ = (x, a, b, r, qType) => {\r\n    let c = RandomInt(8)+2;\r\n    switch (qType) {\r\n        case '(cx+d) / (ax+b)': {\r\n            let numerator = r * (a * x + b);\r\n            if (c === a*r) {c++} \r\n            let d = numerator - c*x;\r\n            let numText = d === 0 ? c+'x' : '('+c+'x'+tidy(d)+')';\r\n            return numText + ' / ('+a+'x + '+b+') = '+r\r\n        }\r\n        case '(cx+d) / (b-ax)': {\r\n            let numerator = r * (b - a*x);\r\n            let d = numerator - c*x;\r\n            let numText = d === 0 ? c+'x' : '('+c+'x'+tidy(d)+')';\r\n            return numText + ' / ('+b+' - '+a+'x) = '+r\r\n        }\r\n        case '(d-cx) / (b-ax)': {\r\n            let numerator = r * (b - a*x);\r\n            let d = numerator + c*x;\r\n            let numText = d === 0 ? c+'x' : '('+d+' - '+c+'x)';\r\n            return numText + ' / ('+b+' - '+a+'x) = '+r\r\n        }\r\n        default: return '(x+0) / (x-x+1) = ' + x;\r\n    }\r\n}","// define the QType in QTypes, add to list of QTypes that is exported\r\n// and import it into GetNewQs\r\nimport { SolveLinear } from '../QTypes';\r\nimport { RandomElement } from '../RandomFuncs';\r\nimport { RandomInt } from '../RandomFuncs';\r\nimport { oneStep } from './linearQs/oneStep';\r\nimport { twoStep } from './linearQs/twoStep';\r\nimport { bracketQ } from './linearQs/bracketQ';\r\nimport { bothSidesQ } from './linearQs/bothSidesQ';\r\nimport { linearFractionQ } from './linearQs/linearFractionQ';\r\n\r\n//This list needs to be in the same as in the QTypes list\r\n//Maybe refactor so that it is extracted from that\r\nconst subQTypes = [\r\n    null, 'oneStep', 'twoStep', 'brackets', 'bothSides', 'fraction'\r\n]\r\n\r\nconst SolveLinearQ = (subType) => {\r\n    const subQType = subType || RandomElement(subQTypes.slice(1));\r\n    // define the things which are already decieded whatever the returned question\r\n    // consider extraKeys, answerFormat, furtherInstructions\r\n    let x = RandomInt(20) - 9; // x can be -9..10\r\n    // NB: don't want x=0 for random Qs involving divide by x\r\n    var quAndA = { QType: SolveLinear + '-' + subQType, a: x }; // we already know the value of x\r\n    // generate question by making an equation.\r\n    // need following\r\n    let coefOfx = RandomInt(9) + 2; // can be 2..10\r\n    let constTerm = RandomInt(24) + 2; // can be 2..25\r\n    let q = '';\r\n    switch (subQType) {\r\n        case 'oneStep': {\r\n            let oneStepTypes = ['x+a', 'x-a', 'a-x', 'ax', 'a/x', 'x/a'][RandomInt(6)];\r\n            if (oneStepTypes === 'a/x' && x === 0) { x = 7 }\r\n            if (oneStepTypes === 'x/a') {\r\n                quAndA.a = constTerm * x;\r\n            }\r\n            q = oneStep(x, constTerm, oneStepTypes);\r\n            break;\r\n        }\r\n        case 'twoStep': {\r\n            let twoStepTypes = ['ax+b', 'ax-b', 'b-ax'][RandomInt(3)];\r\n            q = twoStep(x, coefOfx, constTerm, twoStepTypes);\r\n            break;\r\n        }\r\n        case 'brackets': {\r\n            let bracketType = ['c(x+b)', 'c(ax+b)', 'c(ax-b)', 'c(b-ax)'][RandomInt(4)];\r\n            let outer = RandomInt(9) + 2; // can be 2..10\r\n            q = bracketQ(x, coefOfx, constTerm, outer, bracketType);\r\n            break;\r\n        }\r\n        case 'bothSides': {\r\n            let bothsSidestype = [\r\n                'ax+b=x+?', 'x+?=b-ax', 'ax-b=x+?', '?-x=ax+b',\r\n                'ax+b=cx+?', 'b-ax=cx+?', 'cx+?=b-ax',\r\n                'c(x+b)=ax+?', 'c(b-x)=ax+?'\r\n            ][RandomInt(9)];\r\n            let otherCoef = RandomInt(9) + 2; //can be 2..10\r\n            if (otherCoef === coefOfx) {otherCoef++}\r\n            q = bothSidesQ(x, coefOfx, constTerm, otherCoef, bothsSidestype);\r\n            break;\r\n        }\r\n        case 'fraction': {\r\n            let fractionType = ['(cx+d) / (ax+b)', '(cx+d) / (b-ax)', '(d-cx) / (b-ax)'][RandomInt(3)];\r\n            /**\r\n             * we need top = bottom*r\r\n             * where bottom can be our (ax + b)\r\n             * then c and d can be worked out from the ratio\r\n             */\r\n            let ratio = RandomInt(9)+2; //can be 2..10\r\n            q = linearFractionQ(x, coefOfx, constTerm, ratio, fractionType);\r\n            break;\r\n        }\r\n        default: {\r\n            q = 'default solveLinear Question';\r\n        }\r\n    }\r\n    quAndA.q = q;\r\n    return quAndA\r\n}\r\n\r\n// import into GetnewQs and add to the switch\r\nexport default SolveLinearQ;","// make sure that every type declared in solveLinear.js is accounted for\r\n// let qType = ['x+a', 'x-a', 'a-x', 'ax', 'a/x', 'x/a'][RandomInt(6)];\r\nexport const oneStep = (x, constTerm, qType) => {\r\n    switch (qType) {\r\n        case 'x+a': { return 'x + ' + constTerm + ' = ' + (x + constTerm) }\r\n        case 'x-a': { return 'x - ' + constTerm + ' = ' + (x - constTerm) }\r\n        case 'a-x': { return constTerm + ' - x = ' + (constTerm - x) }\r\n        case 'ax': { return constTerm + 'x = ' + (constTerm * x) }\r\n        case 'a/x': { return (constTerm * x) + '/x = ' + constTerm }\r\n        case 'x/a': { return 'x/'+constTerm+' = '+x} //answer was changed to be x*constTerm\r\n        default: return 'x = ' + x\r\n    }\r\n}","// make sure to account for all cases in SolveLinear\r\n// let twoStepTypes = ['ax+b', 'ax-b', 'b-ax'][RandomInt(3)];\r\nexport const twoStep = (x, coeffOfx, constTerm, qType) => {\r\n    switch (qType) {\r\n        case 'ax+b': { return coeffOfx + 'x + ' + constTerm + ' = ' + (coeffOfx * x + constTerm) }\r\n        case 'ax-b': { return coeffOfx + 'x - ' + constTerm + ' = ' + (coeffOfx * x - constTerm) }\r\n        case 'b-ax': { return constTerm + ' - ' + coeffOfx + 'x = ' + (constTerm - coeffOfx * x) }\r\n        default: { return 'x + 0 = ' + x }\r\n    }\r\n}","// let bracketType = ['c(x+b)', 'c(ax+b)', 'c(ax-b)', 'c(b-ax)'][RandomInt(4)];\r\nexport const bracketQ = (x, coefOfx, constTerm, outer, bracketType) => {\r\n    switch (bracketType) {\r\n        case 'c(x+b)': { return outer + '(x + ' + constTerm + ') = ' + (outer * (x + constTerm)) }\r\n        case 'c(ax+b)': { return outer + '('+coefOfx+'x + ' + constTerm + ') = ' + (outer * (coefOfx*x + constTerm)) }\r\n        case 'c(ax-b)': { return outer + '('+coefOfx+'x - ' + constTerm + ') = ' + (outer * (coefOfx*x - constTerm)) }\r\n        case 'c(b-ax)': { return outer + '('+constTerm+' - ' + coefOfx + 'x) = ' + (outer * (constTerm - coefOfx*x)) }\r\n        default: { return '(x+0) = ' + x }\r\n    }\r\n}","import { Data } from './QTypes';\r\nimport { RandomInt, nRandomInts, RandomElement } from './RandomFuncs';\r\n\r\nconst subQTypes = [\r\n    null, 'mean', 'meanFindmissing', 'medianOdd', 'medianEven', 'range', 'mode'\r\n];\r\n\r\nconst modeQ = () => {\r\n    const howMany = RandomInt(4) + 6; // 6, 7, 8, 9\r\n    const offset = RandomInt(20) + 1;\r\n    var list = nRandomInts(howMany, 20).map(x => x + offset);\r\n    var tally = {}, modes = [], maxFreq = 0;\r\n    list.forEach(v => tally[v] = (tally[v] || 0) + 1);\r\n    for (var p in tally) {\r\n        if (tally[p] > maxFreq) {\r\n            maxFreq = tally[p];\r\n            modes = [p]\r\n        } else {\r\n            if (tally[p] === maxFreq) {\r\n                modes.push(p)\r\n            }\r\n        }\r\n        // console.log('property:', p, 'maxFreq:', maxFreq, 'modes are:', modes)\r\n    }\r\n    // console.log(list, tally)\r\n    return {\r\n        q: `Find the mode of ${list.join(', ')}`,\r\n        a: modes.length > 2 ? 'none' : modes.join(' and ')\r\n    }\r\n}\r\n\r\nconst rangeQ = () => {\r\n    const howMany = RandomInt(4) + 4; // 4, 5, 6, 7\r\n    const offset = RandomInt(20) + 1;\r\n    var list = nRandomInts(howMany, 20).map(x => x + offset);\r\n    var q = 'Find the range of ' + list.join(', ');\r\n    var a = Math.max(...list) - Math.min(...list);\r\n    return { q, a }\r\n}\r\n\r\nconst medianQ = (t) => {\r\n    const howMany = RandomInt(3) + 2;\r\n    var listLength = t === 'ODD' ? howMany * 2 + 1 : howMany * 2;\r\n    var list = nRandomInts(listLength, 15).map(x => x + 3);\r\n    var q = 'Find the median of ' + list.join(', ');\r\n    var sortedList = list.sort((a, b) => a - b);\r\n    var a = t === 'ODD' ? sortedList[howMany] : (sortedList[howMany - 1] + sortedList[howMany]) / 2\r\n    return { q, a }\r\n}\r\n\r\nconst meanQ = (t) => {\r\n    var howMany = RandomInt(3) + 5;\r\n    var offset = RandomInt(10) + 1;\r\n    var list = nRandomInts(howMany, 15).map(x => x + offset);\r\n    var listTotal = list.reduce((a, b) => a + b);\r\n    howMany++;\r\n    var targetMean = Math.ceil(listTotal / howMany);\r\n    if (t === 'findMissing') {\r\n        var q = 'The numbers ' + list.join(', ') + ', x have a mean of ' + targetMean + '. Find x';\r\n        var a = targetMean * howMany - listTotal\r\n    } else {\r\n        list.push(targetMean * howMany - listTotal);\r\n        q = 'Find the mean of  ' + list.join(', ');\r\n        a = targetMean\r\n    }\r\n    return { q, a }\r\n}\r\n\r\nconst DataQ = (subType = '') => {\r\n    const subQType = subType || RandomElement(subQTypes.slice(1));\r\n    // define the things which are already decieded whatever the returned question\r\n    // consider extraKeys, answerFormat\r\n    var quAndA = { QType: Data + '-' + subQType }\r\n    var qA = {};\r\n    switch (subQType) {\r\n        case 'mean': { qA = meanQ('regular'); break }\r\n        case 'meanFindmissing': { qA = meanQ('findMissing'); break }\r\n        case 'medianOdd': { qA = medianQ('ODD'); break }\r\n        case 'medianEven': { qA = medianQ('EVEN'); break }\r\n        case 'range': { qA = rangeQ(); break }\r\n        case 'mode': {\r\n            quAndA.answerFormat = 'string';\r\n            quAndA.furtherInstructions = 'Say \"none\" if there are none. For two modes give answer as \"lowest and highest\"'\r\n            qA = modeQ(); break\r\n        }\r\n        default: {\r\n            qA.q = 'default Data Question';\r\n            qA.a = 42\r\n        }\r\n    }\r\n    quAndA.q = qA.q;\r\n    quAndA.a = qA.a;\r\n    return quAndA\r\n}\r\n\r\nexport default DataQ;","import { Decimal } from './QTypes';\r\nimport { RandomInt, RandomElement } from './RandomFuncs';\r\n\r\nconst subQTypes = [\r\n    null, 'order', 'round'\r\n];\r\n\r\nconst orderQ = () => {\r\n    var hundreds = (RandomInt(9)+1)*100; // a number like 200\r\n    var tens = (RandomInt(9)+1) * 10;\r\n    var smaller = hundreds - RandomInt(50) - 1; // a number like 176\r\n    var tensBigger = hundreds + tens;   // a number like 230\r\n    var aBitOff = tensBigger - RandomInt(9) - 1   // a number like 227\r\n    var order1 = [hundreds, smaller, tensBigger, aBitOff];\r\n    var order2 = [tensBigger, hundreds, smaller, aBitOff];\r\n    var order3 = [aBitOff, tensBigger, hundreds, smaller];\r\n    var listDecimals = [order1, order2, order3][RandomInt(3)].map(x=>x/1000)\r\n    var upOrDown = RandomInt(2);\r\n    var sortDirection = upOrDown === 0 ? 'ascending' : 'descending'\r\n    return {\r\n        q:'Put into '+sortDirection+' order '+listDecimals.join(', '),\r\n        a: listDecimals.sort((a, b) => upOrDown === 0 ? a-b : b-a).join(', ')\r\n    }\r\n}\r\n\r\nconst roundQ = (dPlaces) => {\r\n    var dToRound = [...'012345'].map((x, i)=> i===2 ? '.' : RandomInt(9)+1).join('');\r\n    switch (dPlaces) {\r\n        case 0 : {\r\n            return {\r\n                q:'Round '+dToRound+' to the nearest whole number',\r\n                a: ''+Math.round(dToRound)\r\n            }\r\n        }\r\n        case 1 : {\r\n            return {\r\n                q:'Round '+dToRound+' to one decimal place',\r\n                a:''+Number(Math.round(dToRound+'e1')+'e-1').toFixed(1)\r\n            }\r\n        }\r\n        case 2 : {\r\n            return {\r\n                q:'Round '+dToRound+' to two decimal place',\r\n                a:''+Number(Math.round(dToRound+'e2')+'e-2').toFixed(2)\r\n            }\r\n        }\r\n        default : {\r\n            return {q:'Round 0.42 to one decimal place', a:'0.4'}\r\n        }\r\n    }\r\n}\r\n\r\nconst DecimalQ = (subType) => {\r\n    const subQType = subType || RandomElement(subQTypes.slice(1));\r\n    var quAndA = { QType: Decimal + '-' + subQType };\r\n    var qA = {};\r\n    switch (subQType) {\r\n        case 'order' : { \r\n            qA = orderQ(); \r\n            quAndA.furtherInstructions='give numbers seperated by comma and space';\r\n            quAndA.answerFormat='string'; \r\n            break \r\n        }\r\n        case 'round' : {\r\n            qA = roundQ(RandomInt(3));\r\n            quAndA.answerFormat='string'; \r\n            break\r\n        }\r\n        default : {  \r\n            qA.q = 'default Decimal Question';\r\n            qA.a = 42\r\n        }\r\n    }\r\n    quAndA.q = qA.q;\r\n    quAndA.a = qA.a;\r\n    return quAndA\r\n}\r\n\r\nexport default DecimalQ;","import { MultiplyNumbers } from './QTypes';\r\n\r\nconst subQTypes = [\r\n    'zeroQ',\r\n    'sq', 'cube', \r\n    //'twos', 'threes', 'fours', 'fives', 'sixes', 'sevens', 'eights', 'nines', 'tens',\r\n    'sqEnd5', 'sqEnd1',\r\n    'gridWhole'//, 'decimal'\r\n]\r\n\r\nexport const MultiplyNumberQ = (subQType) => {\r\n    var type = subQType || subQTypes[Math.floor(Math.random()*(subQTypes.length-1))+1];\r\n    // console.log(MultiplyNumbers+'-'+type)\r\n    var a = Math.ceil(Math.random()*9)+1, \r\n        b = Math.ceil(Math.random()*9)+1,\r\n        c = Math.ceil(Math.random()*90)+10;\r\n    var returnable = {QType:MultiplyNumbers+'-'+type}\r\n    switch (type) {\r\n        case 'sq': return {...returnable, q:'What is '+a+' squared?', a:''+(a*a)}\r\n        case 'sqEnd5': {\r\n            a = a*10+5;\r\n            return {...returnable, q:'What is '+a+' squared?', a:''+(a*a)}\r\n        }\r\n        case 'sqEnd1': {\r\n            a = a*10+1;\r\n            return {...returnable, q:'What is '+a+' squared?', a:''+(a*a)}\r\n        }\r\n        case 'cube': return {...returnable, q:'What is '+a+' cubed?', a:''+(a*a*a)}\r\n        case 'gridWhole': return {...returnable, q:'What is '+c+' times '+(a*b)+'?', a:''+(a*b*c) }\r\n        default: return { q:'MultiplyNumberQ default Q', a:'625' }\r\n    }\r\n}","import { NegNumbers } from './QTypes';\r\nimport { RandomElement, RandomInt } from './RandomFuncs';\r\n\r\nconst subQTypes = [\r\n    null, 'adding', 'subtract', 'times', 'divide'\r\n];\r\n\r\nconst notBothPositive = () => {\r\n    // 3 options: first, second or both are negative\r\n    var op = RandomInt(3);\r\n    var a = RandomInt(15) + 1, b = RandomInt(15) + 1;\r\n    return op === 0 ? [-a, b] : op === 1 ? [a, -b] : [-a, -b]\r\n}\r\n\r\nconst NegNumQ = (subType) => {\r\n    const subQType = subType || RandomElement(subQTypes.slice(1));\r\n    // define the things which are already decieded whatever the returned question\r\n    // consider extraKeys, answerFormat\r\n    var quAndA = { QType: NegNumbers + '-' + subQType };\r\n    var qA = {};\r\n    var [a, b] = [...notBothPositive()]\r\n    switch (subQType) {\r\n        case 'adding' : {\r\n            qA.q = [a, b].join(' + ') + ' = ';\r\n            qA.a = a + b;\r\n            break\r\n        }\r\n        case 'subtract' : {\r\n            qA.q = [a, b].join(' - ') + ' = ';\r\n            qA.a = a - b;\r\n            break\r\n        }\r\n        case 'times' : {\r\n            qA.q = [a, b].join(' * ') + ' = ';\r\n            qA.a = a * b;\r\n            break\r\n        }\r\n        case 'divide' : {\r\n            qA.q = [a*b, b].join(' / ') + ' = ';\r\n            qA.a = a;\r\n            break\r\n        }\r\n        default : {  \r\n            qA.q = 'default NegNumbers Question';\r\n            qA.a = 42\r\n        }\r\n    }\r\n    quAndA.q = qA.q;\r\n    quAndA.a = qA.a;\r\n    return quAndA\r\n}\r\n\r\nexport default NegNumQ;","// define the QType in QTypes, add to list of QTypes that is exported\r\n// and import it into GetNewQs\r\nimport { FactorsMultiples } from './QTypes';\r\nimport { RandomElement, RandomInt, RandomPrime, random2357, distinctPrimes } from './RandomFuncs';\r\n\r\nconst subQTypes = [\r\n    null, 'prodOfPrimes', 'findMultiple', 'facOrMul', 'hcf', 'lcm', 'numFactors'\r\n];\r\n\r\nconst findMultipleQ = () => {\r\n    var base = RandomInt(11) + 2;\r\n    var times = RandomInt(8) + 5;\r\n    return {\r\n        q: 'Find the ' + times + 'th multiple of ' + base,\r\n        a: base * times\r\n    }\r\n}\r\n\r\nconst facOrMulQ = () => {\r\n    var factor = RandomElement([2, 3, 4, 5, 6, 10, 15]);\r\n    var multiplier = RandomElement([2, 3, 4]);\r\n    var multiple = factor * multiplier;\r\n    var t = RandomInt(2);\r\n    return t === 0 ?\r\n        { q: `Is ${factor} a factor or multiple of ${multiple}?`, a: 'factor' } :\r\n        { q: `Is ${multiple} a factor or multiple of ${factor}?`, a: 'multiple' }\r\n}\r\n\r\nconst prodOfPrimesQ = () => {\r\n    var numOfPrimes = RandomInt(2) + 4;\r\n    var primes = [...Array(numOfPrimes)].map((x, i) => RandomPrime('small')).sort((a, b) => a - b);\r\n    return {\r\n        q: `Express ${primes.reduce((a, b) => a * b, 1)} as a product of primes.`,\r\n        a: primes.join('x')\r\n    }\r\n}\r\n\r\nconst hcfQ = (level = 3, howMany = 2) => {\r\n    let hcf = random2357(level).value;\r\n    let numbers = distinctPrimes(howMany, 'small').map(x => x * hcf);\r\n    return {\r\n        q: `Find the highest common factor of \r\n            ${numbers.slice(0, -1).join(', ')} and ${numbers.slice(-1)}`,\r\n        a: hcf\r\n    }\r\n}\r\n\r\nconst lcmQ = (level = 3) => {\r\n    let hcf = random2357(level).value;\r\n    let numbers = distinctPrimes(2, 'small').map(x => x * hcf);\r\n    return {\r\n        q: `Find the lowest common multiple of \r\n            ${numbers.join(' and ')}.`,\r\n        a: numbers[0] * numbers[1] / hcf\r\n    }\r\n}\r\n\r\nconst numFactorsQ = (level=3) => {\r\n    let number = random2357(level)\r\n    return {\r\n        q:`How many factors does ${number.value} have?`,\r\n        a: number.exponents.map(x => x+1).reduce((acc, val) => acc*val, 1)\r\n    }\r\n}\r\n\r\nconst FactorsMultiplesQ = (subType) => {\r\n    const subQType = subType || RandomElement(subQTypes.slice(1));\r\n    // define the things which are already decieded whatever the returned question\r\n    // consider extraKeys, answerFormat, furtherInstructions\r\n    var quAndA = { QType: FactorsMultiples + '-' + subQType };\r\n    var qA = {};\r\n    switch (subQType) {\r\n        case 'findMultiple': { qA = findMultipleQ(); break }\r\n        case 'facOrMul': {\r\n            quAndA.answerFormat = 'string';\r\n            qA = facOrMulQ(); break\r\n        }\r\n        case 'prodOfPrimes': {\r\n            quAndA.answerFormat = 'string';\r\n            quAndA.furtherInstructions = 'Give primes in ascending order'\r\n            qA = prodOfPrimesQ(); break\r\n        }\r\n        case 'hcf': {\r\n            qA = hcfQ(2, RandomInt(2) + 2)\r\n            break\r\n        }\r\n        case 'lcm': {\r\n            qA = lcmQ(2);\r\n            break\r\n        }\r\n        case 'numFactors': {\r\n            qA = numFactorsQ(2)\r\n            break\r\n        }\r\n        default: {\r\n            qA.q = 'default factorsAndMultiples Question';\r\n            qA.a = 42\r\n        }\r\n    }\r\n    quAndA.q = qA.q;\r\n    quAndA.a = qA.a;\r\n    return quAndA\r\n}\r\n\r\n// import into GetnewQs and add to the switch\r\nexport default FactorsMultiplesQ;","import { PercentOf, PercentChange, ReversePercentage } from './QTypes';\r\nimport { RandomInt, RandomElement } from './RandomFuncs';\r\n\r\nconst beginners = [50, 25, 10];\r\nconst intermediate = [5, 10, 15, 25, 35, 50, 75];\r\n\r\nconst subTypeList = [null, 'beginner1', 'beginner2', 'intermediate', 'expert'];\r\n\r\n// percent to find, and initial amount to work with\r\nconst percentAmount = (t) => {\r\n  var percen = 0, amount = 0;\r\n  switch (t) {\r\n    case 'beginner1': {\r\n      percen = RandomElement(beginners);\r\n      amount = (RandomInt(5) + 1) * 20;\r\n      break\r\n    }\r\n    case 'beginner2': {\r\n      percen = RandomElement(beginners);\r\n      amount = (RandomInt(50) + 1) * 4;\r\n      break\r\n    }\r\n    case 'intermediate': {\r\n      percen = RandomElement(intermediate);\r\n      amount = RandomInt(200);\r\n      break\r\n    }\r\n    case 'expert': {\r\n      percen = RandomInt(99) + 1;\r\n      amount = RandomInt(200);\r\n      break\r\n    }\r\n    default: { percen = 0; amount = 0 }\r\n  }\r\n  return [percen, amount]\r\n}\r\n\r\nexport const PercentOfQ = (subType) => {\r\n  const type = subType || RandomElement(subTypeList.slice(1));\r\n  const quAndA = { QType: PercentOf + '-' + type };\r\n  var [percen, amount] = percentAmount(type);\r\n\r\n  if (percen !== 0) {\r\n    quAndA.q = 'Find ' + percen + '% of ' + amount;\r\n    quAndA.a = percen * amount / 100\r\n  } else {\r\n    quAndA.q = 'Default Percentage Q';\r\n    quAndA.a = 42\r\n  }\r\n  return quAndA;\r\n}\r\n\r\nexport const PercentChangeQ = (subType) => {\r\n  const type = subType || RandomElement(subTypeList.slice(1));\r\n  const quAndA = { QType: PercentChange + '-' + type };\r\n  var [percen, amount] = percentAmount(type);\r\n\r\n  if (percen !== 0) {\r\n    if (RandomInt(4) === 0) { // ask user to calculate what the percentage change was\r\n      quAndA.q = 'A shop is having a sale. The price of an item went from £'\r\n        + amount + ' to £' + ((100 - percen) * amount / 100).toFixed(2)\r\n        + '  Find the percentage change';\r\n      quAndA.a = percen;\r\n    } else { // ask user to calculate the new amount\r\n      if (RandomInt(2) === 1) {\r\n        quAndA.q = 'Increase ' + amount + ' by ' + percen + '%';\r\n        quAndA.a = (100 + percen) * amount / 100;\r\n      } else {\r\n        quAndA.q = 'Decrease ' + amount + ' by ' + percen + '%';\r\n        quAndA.a = (100 - percen) * amount / 100;\r\n      }\r\n    }\r\n  } else { //percen was zero\r\n    quAndA.q = 'Default Percentage Q';\r\n    quAndA.a = 42\r\n  }\r\n  return quAndA;\r\n}\r\n\r\nexport const ReversePercentageQ = () => {\r\n  const percen = RandomElement(intermediate);\r\n  const amount = (RandomInt(30) + 1) * 15;\r\n  const quAndA = {\r\n    QType: ReversePercentage,\r\n    a: amount\r\n  };\r\n  if (RandomInt(2) === 0) {\r\n    quAndA.q = 'A shop is having a ' + percen + '% off sale. The sale price of an item is £'\r\n      + ((100 - percen) * amount / 100).toFixed(2) + '  What was the original price?'\r\n  } else {\r\n    quAndA.q = 'After a '+percen+'% increase, the value of a share in Maths-ELO is now £'\r\n      + ((100 + percen) * amount / 100).toFixed(2) + '  What was the original price?'\r\n  }\r\n\r\n  return quAndA;\r\n}","import axios from 'axios';\r\n\r\nimport MetricConversionQ from './MetricConversion';\r\nimport TimeConversionQ from './TimeConversion';\r\nimport VocabQ from './VocabQ';\r\nimport RatioQ from './Ratio';\r\nimport Algebra01Q from './AlgebraQ';\r\nimport SolveLinearQ from './AlgebraFuncs/solveLinear';\r\nimport DataQ from './DataQ';\r\nimport DecimalQ from './Decimals';\r\nimport { MultiplyNumberQ } from './NumberOperations';\r\nimport NegNumQ from './NegNumQ';\r\nimport FactorsMultiplesQ from './FactorsMultiples'\r\nimport { PercentOfQ, PercentChangeQ, ReversePercentageQ } from './Percentage';\r\nimport {\r\n  metricConversion, TimeConversion, MultiplyNumbers, NegNumbers,\r\n  Decimal, FactorsMultiples,\r\n  PercentOf, PercentChange, ReversePercentage,\r\n  Vocab, Ratio, Algebra01, Data, SolveLinear,\r\n  QTypes\r\n} from './QTypes';\r\n\r\n\r\nexport const GetNewQ = (QType, subQType) => {\r\n  // console.log('QType and subQType', QType, subQType)\r\n  var type = QType || QTypes[Math.floor(Math.random() * QTypes.length)];\r\n  var newQ;\r\n  switch (type) {\r\n    case metricConversion: { newQ = MetricConversionQ(subQType); break }\r\n    case MultiplyNumbers: { newQ = MultiplyNumberQ(subQType); break }\r\n    case NegNumbers: { newQ = NegNumQ(subQType); break }\r\n    case FactorsMultiples: { newQ = FactorsMultiplesQ(subQType); break }\r\n    case Decimal: { newQ = DecimalQ(subQType); break }\r\n    case PercentOf: { newQ = PercentOfQ(subQType); break }\r\n    case PercentChange: { newQ = PercentChangeQ(subQType); break }\r\n    case ReversePercentage: { newQ = ReversePercentageQ(); break }\r\n    case TimeConversion: { newQ = TimeConversionQ(subQType); break }\r\n    case Vocab: { newQ = VocabQ(); break }\r\n    case Ratio: { newQ = RatioQ(subQType); break }\r\n    case Algebra01: { newQ = Algebra01Q(subQType); break }\r\n    case SolveLinear: { newQ = SolveLinearQ(subQType); break }\r\n    case Data: { newQ = DataQ(subQType); break }\r\n    default: return {\r\n      q: \"How many mathematicians does it take to change a light bulb?\",\r\n      a: \"1\", QType: 'giveDefault'\r\n    }\r\n  }\r\n  // console.log(newQ)\r\n  return newQ;\r\n}\r\n\r\nexport const getQRating = async (qType) => {\r\n  const toGet = { qType: qType };\r\n  var qRating = 1234;\r\n  await axios.get('/qratings/get1rating', { params: toGet })\r\n    .then(res => {\r\n      console.log('Axios get 1 rating:', res.data);\r\n      qRating = res.data.rating;\r\n    })\r\n    .catch(err => {\r\n      console.log('Axios Error getting rating for ', qType, err);\r\n      qRating = 1345;\r\n    });\r\n  return qRating;\r\n}\r\n","const transformRating = (rating) => 10**(rating/400);\r\n\r\n// in this, the result is from the point of view of player 1 (human) \r\n// who answered question with difficulty of rating2\r\n// howProvisional will be in [1, 10]\r\n// if the humans rating is very provisional (ie: 10) then rating1 changes by more\r\n// but the question's rating changes by little\r\nconst NewRatings = (rating1, rating2, result, howProvisional) => {\r\n    var r1=transformRating(rating1), r2 = transformRating(rating2);\r\n    // expected result for each player\r\n    var ratingSum = r1+r2;\r\n    var e1=r1/ratingSum, e2=r2/ratingSum;\r\n    // console.log('r1, e1', r1, e1)\r\n\r\n    var newR1 = rating1 + 32*howProvisional*(result - e1),\r\n        newR2 = rating2 + (32/howProvisional)*(1-result - e2);\r\n    \r\n    return [Math.floor(newR1), Math.floor(newR2)]\r\n}\r\n\r\nexport default NewRatings;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Keypad_number, Keypad_delete } from '../Reducers/actions';\r\n\r\nconst Keypad = ({ extraKeys, Keypad_number, Keypad_delete }) => {\r\n    const buttons1_9 = [...'123456789'].map(x => <button\r\n        onClick={() => Keypad_number(x)}\r\n        className=\"keypadButton\"\r\n        key={'keypad-button' + x}>{x}</button>);\r\n    const button0 = <button\r\n        onClick={() => Keypad_number('0')}\r\n        className=\"keypadButton\"\r\n        key='keypad-button0'>0</button>;\r\n    const buttonDP = <button\r\n        onClick={() => Keypad_number('.')}\r\n        className=\"keypadButton\"\r\n        key='keypad-buttonDP'>.</button>\r\n    const buttonDEL = <button\r\n        onClick={() => Keypad_delete()}\r\n        className=\"keypadButton\"\r\n        key='keypad-buttonDEL'>DEL</button>\r\n    var buttonCount = extraKeys.length === 6 ? 6 : 3\r\n    const extraButtons = extraKeys.slice(0, buttonCount).map((x, i) => <button\r\n        onClick={() => Keypad_number(x)}\r\n        className=\"keypadButton\"\r\n        key={'extra-keypad-button'+x+i}>{x}\r\n        </button>)\r\n    return (\r\n        <div className=\"keypad\">\r\n            <div>{buttons1_9.slice(0, 3)}</div>\r\n            <div>{buttons1_9.slice(3, 6)}</div>\r\n            <div>{buttons1_9.slice(6)}</div>\r\n            <div>{button0}{buttonDP}{buttonDEL}</div>\r\n            <hr />\r\n            {buttonCount > 0 ? extraButtons.slice(0, 3) : ''}\r\n            {buttonCount === 6 ? extraButtons.slice(3, 6) : ''}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {extraKeys : state.extraKeys4Pad}\r\n}\r\nexport default connect(mapStateToProps, { Keypad_number, Keypad_delete })(Keypad);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {\r\n    UpdateUserAnswer, UserRatingChanges,\r\n    SetNewQ, UserIsWrong, NeedNewRatedQ\r\n} from '../Reducers/actions';\r\nimport { GetNewQ, getQRating } from '../NewQs/GetNewQ';\r\nimport NewRatings from '../Ratings/Ratings';\r\nimport Keypad from '../components/Keypad';\r\n\r\nconst Question = ({\r\n    quAndA, userAnswer, userRating, wrongAnswers, needNewRatedQ,\r\n    UserRatingChanges, UpdateUserAnswer, SetNewQ, UserIsWrong, NeedNewRatedQ }) => {\r\n    const changeHandler = (e) => {\r\n        UpdateUserAnswer(e.target.value);\r\n    }\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        // allow answer like 1.70 when the required answer is 1.7\r\n        // converting to Number will do this\r\n        // but take care if questions types are included that need a string as an answer\r\n        switch (quAndA.answerFormat) {\r\n            case 'string': {\r\n                var userIsCorrect = \r\n                  userAnswer.toLowerCase().replace(/\\s/g, '') === quAndA.a.toLowerCase().replace(/\\s/g, '');\r\n                break\r\n            }\r\n            default: userIsCorrect = Number(userAnswer) === Number(quAndA.a)\r\n        }\r\n        if (userIsCorrect) {\r\n            var [newUserRating, newQuAndARating] = NewRatings(userRating, quAndA.QRating || 1500, 1, 1);\r\n            UserRatingChanges(newUserRating);\r\n            NeedNewRatedQ();\r\n        } else {\r\n            [newUserRating, newQuAndARating] = NewRatings(userRating, quAndA.QRating || 1500, 0, 1);\r\n            //console.log('QType, QRating, old, new:', quAndA.QType, quAndA.QRating, newQuAndARating);\r\n            UserRatingChanges(newUserRating);\r\n            UserIsWrong(userAnswer, newQuAndARating)\r\n        }\r\n        if (quAndA.QType !== 'giveDefault') {\r\n            const toPost = {\r\n                category: quAndA.QType,\r\n                ratingValue: newQuAndARating\r\n            }\r\n            axios.put('/qratings/new-data', toPost)\r\n                .then(res => console.log('Success while posting rating of Q', res))\r\n                .catch(err => console.log('Error while posting rating of Q', err));\r\n        } else { console.log('Did not post about default Q') }\r\n    }\r\n\r\n    const wrongAnswerList = wrongAnswers.map((x, i) =>\r\n        <p key={i}>{x} was wrong</p>)\r\n\r\n    useEffect(() => {\r\n        if (needNewRatedQ || quAndA.QType === 'giveDefault') {\r\n            var newQ = GetNewQ('', '');\r\n            //console.log('q.js, useEffect, newQ is: ', newQ);\r\n            getQRating(newQ.QType).then(promiseMessage => {\r\n                //console.log('getQRating in useEffect has promise:', promiseMessage);\r\n                newQ.QRating = promiseMessage;\r\n                SetNewQ(newQ);\r\n            })\r\n                .catch(err => {\r\n                    console.log('GetNewQ in useEffect has error:', err);\r\n                });\r\n        }\r\n    })\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"quAndA\">\r\n                <h2>{quAndA.q}</h2>\r\n                <form onSubmit={submitHandler}>\r\n                    <input className=\"answerbox\"\r\n                        type=\"text\"\r\n                        name=\"answerbox\"\r\n                        value={userAnswer}\r\n                        onChange={changeHandler} />\r\n                    <button type=\"submit\">Submit</button>\r\n                </form>\r\n                <p>{quAndA.furtherInstructions || ''}</p>\r\n                {wrongAnswerList}\r\n                <br />\r\n            </div>\r\n            {needNewRatedQ ?\r\n                <p>Fetching the rating for a new question....</p> :\r\n                <Keypad />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        quAndA: state.quAndA,\r\n        needNewRatedQ: state.needNewRatedQ,\r\n        wrongAnswers: state.wrongAnswers,\r\n        userAnswer: state.userAnswer,\r\n        userRating: state.userRating\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    UpdateUserAnswer, UserRatingChanges, SetNewQ, UserIsWrong, NeedNewRatedQ\r\n})(Question);","import React from 'react';\r\n\r\nclass QWithReveal extends React.Component {\r\n    state = {showAnswer: false, localQ:this.props.freshQ() }\r\n    quandaClass = Number(this.props.rowType) % 2 ? \"quandaBlock-odd\" : \"quandaBlock-even\";\r\n    \r\n    \r\n    handleClick = () => {\r\n        this.setState({showAnswer:!this.state.showAnswer})\r\n    }\r\n    refreshQ = () => {\r\n        this.setState({localQ:this.props.freshQ(), showAnswer:false})\r\n    }\r\n\r\n    \r\n    render() {\r\n        const RevealButton = <button className=\"revealBtn\" onClick={this.handleClick}>Show answer</button>\r\n        const Answer = <h2 className=\"aBlock\" onClick={this.handleClick} >{this.state.localQ.a}</h2>; \r\n        return (\r\n            <div className={this.quandaClass}>\r\n                <h2 className=\"qBlock\" onClick={this.refreshQ} title={this.state.localQ.QType} >{this.state.localQ.q}</h2>\r\n                {this.state.showAnswer ? Answer : RevealButton}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default QWithReveal;","import React from 'react';\r\nimport QWithReveal from './QWithReveal';\r\nimport {GetNewQ} from '../NewQs/GetNewQ';\r\nimport { elementsFrom } from '../NewQs/RandomFuncs'\r\n\r\nconst ClassRoom = (props) => {\r\n    var qList = [];\r\n    const typesToShow = elementsFrom(5, props.typeList);\r\n    \r\n    typesToShow.forEach((t, i) =>  {\r\n        var QTypeSplit = t.split('-');\r\n        // console.log('classroom is looking for qType', t, QTypeSplit);\r\n        qList.push(\r\n            <QWithReveal \r\n                freshQ = {() => GetNewQ(QTypeSplit[0], QTypeSplit[1])}\r\n                rowType={'' + i} \r\n                key={i} />\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <h2>This is the class room</h2>\r\n            <h3>Where you simply click to see the answers</h3>\r\n            <p>(Click on a question to get another of the same type)</p>\r\n            {qList}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClassRoom;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ButtonGroup, Button, Dropdown, DropdownButton } from 'react-bootstrap';\r\nimport { QTypes } from '../NewQs/QTypes';\r\nimport { ToggleTopic, AllTopics, ChangeActiveScreen } from '../Reducers/actions';\r\n\r\nconst TopicSelect = ({ selectedTopics, ToggleTopic, AllTopics, ChangeActiveScreen }) => {\r\n    const qTypeList = QTypes.map(q =>\r\n        <DropdownButton title={q.topic}\r\n            variant={selectedTopics.includes(q.topic) ? \"success\" : \r\n                    selectedTopics.findIndex(t => t.startsWith(q.topic)) > -1 ? \"warning\" : \"secondary\"}\r\n            key={q.topic}\r\n            className=\"topicButton\"\r\n        >\r\n            <Dropdown.Item onClick={() => ToggleTopic(q.topic)}>all</Dropdown.Item>\r\n            {q.subTopics.map(st =>\r\n                <Dropdown.Item\r\n                    onClick={() => ToggleTopic(q.topic + '-' + st)}\r\n                    key={st}\r\n                    active={selectedTopics.includes(q.topic+'-'+st)}>{st}\r\n                </Dropdown.Item>\r\n            )}\r\n        </DropdownButton>\r\n    );\r\n\r\n    const furtherInstructions = selectedTopics.length > 0 ?\r\n        <p>When ready: <Button variant=\"link\"\r\n            onClick={() => ChangeActiveScreen(\"classRoom-General\")}>Go to the classroom</Button> <br />\r\n            (If you select more than five topics, I will pick five of them at random)\r\n        </p> :\r\n        <p>You need to select at least one topic.</p>\r\n\r\n    return (\r\n        <div>\r\n            <h2>Select Topics</h2>\r\n            <p>Click a topic to toggle its status. Select subtopics from the dropdown.<br />\r\n            Topics highlighted in green are entirely active, those in orange have subtopics selected. </p>\r\n            <ButtonGroup>\r\n                <Button onClick={() => AllTopics('all')} >Select all</Button>\r\n                <Button onClick={() => AllTopics('none')} >Clear all</Button>\r\n            </ButtonGroup>\r\n            {furtherInstructions}\r\n            <p>Currently selected are: {selectedTopics.join(', ')} </p>\r\n            <div id=\"topic-list\"  >{qTypeList}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedTopics: state.selectedTopics\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { ToggleTopic, AllTopics, ChangeActiveScreen })(TopicSelect);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { ChangeActiveScreen, LoginUser } from '../Reducers/actions';\r\n\r\nconst LoginForm = ({ ChangeActiveScreen, LoginUser }) => {\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const toPost = {\r\n            userName : event.target.UserName.value,\r\n            password: event.target.password.value\r\n        }\r\n        console.log('toPost is ', toPost);\r\n        axios.put('/users/login', toPost)\r\n            .then(res => {\r\n                console.log('axios posted login, got result with status', res.status);\r\n                console.log('need to set new user with name, rating', res.data.userName, res.data.userRating)\r\n                LoginUser(res.data.userName, res.data.userRating)\r\n            })\r\n            .catch(err => console.log('axios posted login got error', err));\r\n      }\r\n    return (\r\n        <div id=\"loginForm\">\r\n            <div>\r\n                <Button variant=\"link\" onClick={()=>ChangeActiveScreen('testRoom')}>\r\n                    If you are not a member, you can register for free\r\n                </Button>\r\n            </div>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group >\r\n                    <Form.Label>User name</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"UserName\" placeholder=\"User name\" required />\r\n                    <Form.Text className=\"text-muted\" >\r\n                        This will be your public name, to be used on the leaderboard\r\n                    </Form.Text>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" required />\r\n                </Form.Group>\r\n            <Button variant=\"secondary\" onClick={()=>ChangeActiveScreen('testRoom')} >Cancel</Button>\r\n            <Button variant=\"success\" type=\"submit\">Login</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, { ChangeActiveScreen, LoginUser })(LoginForm);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport Question from './components/Question';\r\nimport ClassRoom from './components/ClassRoom';\r\nimport TopicSelect from './components/TopicSelect';\r\nimport LoginForm from './components/LoginForm';\r\nimport { ChangeActiveScreen } from './Reducers/actions';\r\nimport './App.css';\r\n\r\nconst App = ({ \r\n    userName, userRating, currentQ, \r\n    activeScreen, selectedTopics, ChangeActiveScreen }) => {\r\n  const giveme5Option = <Dropdown.Item onClick={()=>ChangeActiveScreen('classRoom')}>5 in the Classroom</Dropdown.Item>;\r\n  const rateMymathsOption = <Dropdown.Item onClick={()=>ChangeActiveScreen('testRoom')}>Rate My Maths</Dropdown.Item>;\r\n  const selectTopicsOption = <Dropdown.Item onClick={()=>ChangeActiveScreen('topicSelect')} >Select Topics</Dropdown.Item>\r\n  const loginOption = <Dropdown.Item onClick={()=>ChangeActiveScreen('login')}>Login or Register</Dropdown.Item>;\r\n\r\n  const userLabel = userName === '' ? 'Guest user' : userName;\r\n\r\n  const mainScreen = () => {\r\n    switch (activeScreen) {\r\n      case \"testRoom\" : return <Question />;\r\n      case \"classRoom\" : return <ClassRoom typeList={[currentQ.QType]} />;\r\n      case \"classRoom-General\" : return <ClassRoom typeList={selectedTopics} />;\r\n      case \"topicSelect\" : return <TopicSelect />\r\n      case \"login\" : return <LoginForm />;\r\n      default : return <Question />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"header\" >\r\n        <DropdownButton id=\"dropdown-variants-info\" \r\n          title=\"Maths ELO\" className=\"appTitle\" size=\"lg\">\r\n          {activeScreen === 'testRoom' ? giveme5Option : rateMymathsOption}\r\n          {selectTopicsOption}\r\n          {/* {loginOption} */}\r\n        </DropdownButton>\r\n        <p>Rate and review your maths</p>\r\n        <p className=\"userVSquestion\" >{userLabel} ({userRating}) VS {currentQ.QType} ({currentQ.QRating||'????'}) </p>\r\n      </div>\r\n      { mainScreen() }\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userName: state.userID,\r\n    userRating: state.userRating,\r\n    currentQ: state.quAndA,\r\n    activeScreen: state.activeScreen,\r\n    selectedTopics: state.selectedTopics\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { ChangeActiveScreen })(App);\r\n","import { UPDATE_USER_ANSWER, TOGGLE_TOPIC, ALL_TOPICS,\r\n    KEYPAD_NUMBER, KEYPAD_DELETE,\r\n    SET_NEW_Q, \r\n    USER_IS_WRONG, USER_RATING_CHANGES, LOGIN_USER,\r\n    CHANGE_ACTIVE_SCREEN, \r\n    NEED_NEW_RATED_Q } from './actions';\r\n\r\nimport { QTypes } from '../NewQs/QTypes';\r\n\r\nconst newQ = { \r\n    q: \"How many mathematicians does it take to change a light bulb?\", \r\n    a: \"1\", QType:'giveDefault' };\r\nconst defaultExtraKeys = ['--', '--', '--'];\r\n\r\nconst initialState = {\r\n    userRating: 1500,\r\n    userID: '',\r\n    userLoggedIn: false,\r\n    quAndA: newQ,\r\n    needNewRatedQ: true,\r\n    userAnswer: '',\r\n    selectedTopics: [...QTypes].map(x=>x.topic),\r\n    wrongAnswers: [], \r\n    extraKeys4Pad: defaultExtraKeys,\r\n    activeScreen: 'topicSelect'\r\n}\r\n\r\nconst addOrDrop = (arr, el) => {\r\n    return arr.includes(el) ? arr.filter(e => e !== el) : [...arr, el]\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    console.log('handling the action ', action)\r\n    switch (action.type) {\r\n        case UPDATE_USER_ANSWER : return {...state, userAnswer:action.payload}\r\n        case TOGGLE_TOPIC : return {...state, selectedTopics:addOrDrop(state.selectedTopics, action.topic)}\r\n        case ALL_TOPICS : return { ...state, \r\n            selectedTopics: action.mode==='all' ? [...QTypes].map(x=>x.topic) : []\r\n        }\r\n        case NEED_NEW_RATED_Q : return {...state, needNewRatedQ:true}\r\n        case USER_RATING_CHANGES: return {...state, userRating:action.userRating}\r\n        case SET_NEW_Q : return {\r\n            ...state, \r\n            quAndA:action.quAndA, \r\n            needNewRatedQ: false,\r\n            extraKeys4Pad: action.quAndA.extraKeys || defaultExtraKeys,\r\n            userAnswer:'', wrongAnswers:[]}\r\n        case USER_IS_WRONG : return {\r\n            ...state,\r\n            wrongAnswers:[...state.wrongAnswers, action.wrongAnswer],\r\n            userAnswer: '',\r\n            quAndA: {...state.quAndA, QRating: action.newQuAndARating}\r\n        }\r\n        case LOGIN_USER : return {\r\n            ...state, \r\n            userID:action.userName, userRating:action.userRating, \r\n            activeScreen:'testRoom', userLoggedIn:true\r\n        }\r\n        case KEYPAD_NUMBER : return {...state, userAnswer:state.userAnswer+action.payload}\r\n        case KEYPAD_DELETE : return {...state, userAnswer:state.userAnswer.slice(0, -1)}\r\n        case CHANGE_ACTIVE_SCREEN : return {...state, activeScreen:action.newScreen}\r\n        default : return state;\r\n    } \r\n}\r\n\r\nexport default reducer;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport Reducer from './Reducers/Reducer';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={createStore(Reducer)} ><App /></Provider>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}