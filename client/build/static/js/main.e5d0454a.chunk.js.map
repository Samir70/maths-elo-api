{"version":3,"sources":["NewQs/RandomFuncs.js","NewQs/MetricConversion.js","NewQs/TimeConversion.js","NewQs/VocabQ.js","NewQs/QTypes.js","NewQs/Ratio.js","NewQs/AlgebraFuncs/CoeffsAndVars.js","NewQs/AlgebraFuncs/SimplifyAddSub.js","NewQs/AlgebraFuncs/ExpandBracket.js","NewQs/AlgebraQ.js","NewQs/NumberOperations.js","NewQs/GetNewQ.js","Ratings/Ratings.js","components/Keypad.js","Reducers/actions.js","components/Question.js","components/QWithReveal.js","components/ClassRoom.js","App.js","Reducers/Reducer.js","serviceWorker.js","index.js"],"names":["RandomElement","arr","Math","floor","random","length","distinctElementsFrom","n","list","push","filter","x","indexOf","primes","smallPrimes","module","exports","RandomInt","RandomPrime","t","distinctPrimes","conversionPairs","large","small","ratio","MetricConversionQ","subQType","Qtype","Number","convFacts","forward","extraLarge","q","a","QType","metricConversion","hms2sec","h","m","s","rnd","outof","TimeConversionQ","subType","left","right","leftUnits","rightUnits","sec","min","hr","totalSec","TimeConversion","console","log","answerFormat","extraKeys","VocabQList","VocabQ","question","subQTypes","RatioQ","slice","quAndA","Ratio","require","Coeffs","Array","fill","map","i","combine","c","v","l","exp","val","abs","SimplifyAddSub","varList","sort","reduce","acc","simpAddSubQ","coeffs","letters","threeVars","twoVars","oneVar","Brackets1","outer","varNames","multiply","out","inner","Expand1","FactoriseQ","level","co","p1","p2","Expand2","out1","co1","pm","out2","co2","first","second","final","Algebra01Q","Algebra01","newQ","furtherInstructions","mult","Expand1Q","c1","c2","o1","o2","vs","Expand2SimplifyQ","QTypes","GetNewQ","type","MultiplyNumbers","ceil","b","returnable","MultiplyNumberQ","getQRating","qType","toGet","qRating","axios","get","params","then","res","data","rating","catch","err","transformRating","NewRatings","rating1","rating2","result","howProvisional","r1","r2","ratingSum","newR1","newR2","connect","state","extraKeys4Pad","Keypad_number","payload","Keypad_delete","buttons1_9","onClick","className","key","button0","buttonDP","buttonDEL","buttonCount","extraButtons","needNewRatedQ","wrongAnswers","userAnswer","userRating","UpdateUserAnswer","newAnswer","UserRatingChanges","newUserRating","SetNewQ","newQuAndA","UserIsWrong","newQuAndARating","wrongAnswer","NeedNewRatedQ","wrongAnswerList","useEffect","promiseMessage","QRating","id","onSubmit","e","preventDefault","userIsCorrect","toLowerCase","replace","toPost","category","ratingValue","post","name","value","onChange","target","QWithReveal","showAnswer","quandaClass","props","rowType","handleClick","setState","RevealButton","Answer","this","React","Component","ClassRoom","qList","QTypeSplit","split","currentQ","showClassRoom","ToggleClass","giveme5Option","Dropdown","Item","rateMymathsOption","DropdownButton","title","size","defaultExtraKeys","initialState","reducer","action","Boolean","window","location","hostname","match","ReactDOM","render","store","createStore","Reducer","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e5d0454a.chunk.js","sourcesContent":["const RandomElement = (arr) => arr[Math.floor(Math.random()*arr.length)];\r\nconst RandomInt = (n) => Math.floor(Math.random()*n);\r\n\r\nconst distinctElementsFrom = (n, arr) => {\r\n    var list = [];\r\n    if (arr.length<=n) {return arr}\r\n    while (list.length<n) {\r\n        list.push(RandomElement(arr.filter(x=>list.indexOf(x)===-1)))\r\n    }\r\n    return list\r\n}\r\n\r\nconst primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47];\r\nconst smallPrimes = [2, 3, 5, 7];\r\n\r\nconst RandomPrime = (t) => t === 'small' ? RandomElement(smallPrimes) : RandomElement(primes);\r\nconst distinctPrimes = (n, t) => t === 'small' ? \r\n            distinctElementsFrom(n, smallPrimes) : distinctElementsFrom(n, primes);\r\n\r\nmodule.exports = {RandomElement, RandomInt, RandomPrime, distinctElementsFrom, distinctPrimes}\r\n\r\n//export default RandomElement;","import { metricConversion } from './QTypes';\r\n\r\nconst conversionPairs = [\r\n  'zeroQ',\r\n    {large:['metres', 'm'], small:['centimetres', 'cm'], ratio:100},\r\n    {large:['metres', 'm'], small:['millimetres', 'mm'], ratio:1000},\r\n    {large:['kilometres', 'Km'], small:['metres', 'm'], ratio:1000},\r\n\r\n    {large:['grams', 'g'], small:['milligrams', 'mg'], ratio:1000},\r\n    {large:['kilograms', 'Kg'], small:['grams', 'g'], ratio:1000},\r\n\r\n    {large:['litres', 'L'], small:['centilitres', 'cL'], ratio:100},\r\n    {large:['litres', 'L'], small:['millimetres', 'mL'], ratio:1000},\r\n]\r\n\r\nconst MetricConversionQ = (subQType) => {\r\n    var Qtype = Number(subQType) || Math.floor(Math.random()*(conversionPairs.length-1))+1;\r\n    //console.log(metricConversion+'-'+Qtype);\r\n    var convFacts = conversionPairs[Qtype];\r\n    let forward = Math.random() < 0.5 ? true : false,\r\n        extraLarge = Math.random() < 0.25 ? 1 : Math.random() < 0.8 ? 10 : 100;\r\n    let small = Math.floor(Math.random()*convFacts.ratio)*extraLarge,\r\n        large = small/convFacts.ratio;\r\n    return forward ? \r\n      {q:\"Convert \"+small+convFacts.small[1]+\" to \"+convFacts.large[0], \r\n        a:''+large, QType:metricConversion+'-'+Qtype} : \r\n      {q:\"Convert \"+large+convFacts.large[1]+\" to \"+convFacts.small[0], \r\n        a:''+small, QType:metricConversion+'-'+Qtype} \r\n}\r\n\r\nexport default MetricConversionQ;\r\n","import { TimeConversion } from './QTypes';\r\n\r\n// so ohr 2min 28sec => 148sec\r\nconst hms2sec = (h, m, s) => h*3600+m*60+s\r\n\r\nconst conversionPairs = [\r\n    'null',\r\n    'secMin', 'secMinHr',\r\n    //'minHr', 'minHrDays',\r\n    //'hrDays', 'hrWeeks', 'hrDaysWeeks'\r\n]\r\n\r\nconst rnd = (outof) => Math.floor(Math.random()*outof);\r\n\r\nconst TimeConversionQ = (subType) => {\r\n    var subQType = Number(subType) || Math.floor(Math.random()*(conversionPairs.length-1))+1;\r\n    /* direction of conversion decided by forward variable\r\n    * before composing quAndA: parts are labeled left, middle and right\r\n    * so 1min 78sec will give\r\n    * LMR: 138, 1, 78\r\n    * and the Qs\r\n    * 138 seconds is 1min and how many seconds?\r\n    * 138 seconds is 18seconds and how many minutes?\r\n    * Convert 1min 78sec into seconds\r\n    * because answer should be a number\r\n    */\r\n\r\n    // at the moment, I don't like the need for answers with unspecified format\r\n    // So I am setting forward to false so it never asks for answer in form 2hr 3min 5sec\r\n    let forward = Math.random() < 0 ? true : false;\r\n    var left, right, leftUnits, rightUnits;\r\n    var sec = rnd(60), min = rnd(60), hr = rnd(24);\r\n    switch (conversionPairs[subQType]) {\r\n        case 'secMin' : {\r\n            if (min===0) {min++}\r\n            var totalSec = hms2sec(0, min, sec);\r\n            left =''+totalSec; right = min+'min '+sec+'sec';\r\n            leftUnits = 'seconds'; rightUnits = 'minutes and seconds';\r\n            break\r\n        }\r\n        case 'secMinHr' : {\r\n            totalSec = hms2sec(hr, min, sec);\r\n            left = ''+totalSec; right=hr+'hr '+min+'min '+sec+'sec';\r\n            leftUnits='seconds'; rightUnits = 'hours minutes and seconds';\r\n            break\r\n        }\r\n        default: return { q:'TimeConversion default Q', a:'625' }\r\n    }\r\n    subQType = TimeConversion+'-'+subQType;\r\n    console.log(subQType);\r\n    return forward ? \r\n        { q:'Convert '+left+leftUnits+' to '+rightUnits, \r\n          a:right, QType:subQType, answerFormat:'string', extraKeys:['hrs', 'min', 'sec'] } :\r\n        { q:'Convert '+right+' to '+leftUnits,\r\n          a:left, QType:subQType, answerFormat:'number', extraKeys:['hrs', 'min', 'sec'] }\r\n}\r\n\r\nexport default TimeConversionQ\r\n","import { Vocab } from './QTypes';\r\n\r\nconst VocabQList = [\r\n    // circle vocab\r\n    {q:'What do you call a line that goes from the edge of a circle, through the centre, to the other side?', \r\n     a:'diameter'},\r\n    {q:'What do you call a line from the centre of a circle to the edge of the circle?', a:'radius'},\r\n    {q:'What do you call a line that just touches the outside of a circle?', a:'tangent'},\r\n    {q:'What do you call a line cuts across a circle, but not necessarily through the centre?', a:'chord'},\r\n    {q:'A chord cuts a circle into two ...?', a:'segments'},\r\n    {q:'Two radii (radiuses) cut out a piece like a slice of pie, called a ...?', a:'sector'}\r\n]\r\n\r\nconst VocabQ = () => {\r\n    var question = Math.floor(Math.random()*VocabQList.length);\r\n    return {...VocabQList[question], answerFormat:'string', QType:Vocab}\r\n}\r\n\r\nexport default VocabQ;\r\n","export const metricConversion = 'metricConversion';\r\nexport const TimeConversion = 'TimeConversion';\r\nexport const MultiplyNumbers = 'MultiplyNumbers';\r\nexport const Vocab = 'Vocab';\r\nexport const Ratio = 'Ratio';\r\nexport const Algebra01 = 'Algebra01'\r\n\r\n// Aiming for QCodes which the app can parse to produce a new question of the same type\r\n// but with different numbers.\r\n\r\n// Format will be a string beginning with a QType\r\n// 'metricConversion-2'\r\n// would get us the subQType with index 2 for that topic\r\n// whereas: just 'metricConversion' (or 'metricConversion-0') \r\n// should allow for a random choice of subQType","import { Ratio } from './QTypes';\r\nimport {RandomElement} from './RandomFuncs';\r\n\r\nconst subQTypes = [\r\n    null, 'simplify', 'mapForm', 'keepRatio', 'share', 'givenDiff'\r\n]\r\n\r\nconst RatioQ = (subType) => {\r\n    const subQType = subQTypes[Number(subType)] || RandomElement(subQTypes.slice(1));\r\n    var quAndA = { QType: Ratio+'-'+subQType, extraKeys:[':', ':', ':'] }\r\n\r\n    switch (subQType) {\r\n        case 'simplify' : {quAndA.q=\"Simplify 12:16\"; quAndA.a=\"3:4\";quAndA.answerFormat=\"string\"; break}\r\n        case 'mapForm' : {quAndA.q=\"Express 16:12 in the form 1:n\"; quAndA.a=\"1:0.75\"; quAndA.answerFormat=\"string\"; break}\r\n        case 'keepRatio' : {quAndA.q=\"The ratio of men to women waiting at a bus stop is 3:2. If there are 6 men, then how many women are there?\"; quAndA.a=\"4\"; break}\r\n        case 'share' : {quAndA.q=\"Share £180 in the ratio 3:5:4, giving your answer as a ratio\"; quAndA.a=\"45:75:60\"; quAndA.answerFormat=\"string\"; break}\r\n        case 'givenDiff' : {quAndA.q=\"Alice and Bob share some money in the ratio 7:5 Alice gets £10 more than Bob. How much money did they share?\"; quAndA.a=\"60\"; break}\r\n        default : {quAndA.q=\"Ratio default Q\"; quAndA.a=\"42\"}\r\n    }\r\n    \r\n    console.log(quAndA);\r\n    return quAndA\r\n}\r\n\r\nexport default RatioQ;","const { RandomInt, RandomElement } = require('../RandomFuncs');\r\nexport const Coeffs = (n) => Array(n).fill(9).map(RandomInt)\r\n        .map((x, i)=>{\r\n            if (i===0) {return x+1}\r\n            return RandomInt(2) === 1 ? x+1 : -(x+1)\r\n        });\r\nexport const threeVars = (n) => Array(n).fill(['a', 'b', 'c']).map(RandomElement);\r\nexport const twoVars = (n) => Array(n).fill(['a', 'b']).map(RandomElement);\r\nexport const oneVar = (n) => Array(n).fill(RandomElement(['a', 'b', 'c']));","import { Coeffs, threeVars, twoVars, oneVar } from './CoeffsAndVars';\r\nconst { RandomInt } = require('../RandomFuncs');\r\n\r\n\r\n// to test above, which are random so can't be tested with jest\r\n// for (var i = 0; i<10; i++) {\r\n//     console.log(Coeffs(4), Coeffs(6));\r\n//     console.log(threeVars(4), threeVars(7));\r\n//     console.log(twoVars(3), twoVars(6));\r\n//     console.log(oneVar(8), oneVar(2));\r\n// }\r\n\r\n\r\n// parameters are coefficients and the variable names\r\n// output is an expression such as 6a+7c+3b-9a+4c\r\nexport const combine = (c, v) => {\r\n    var l = Math.min(c.length, v.length);\r\n    if (l === 0 ) {return null}\r\n    var exp = '';\r\n    for (var i = 0; i<l; i++) {\r\n        if (c[i]!== 0) {\r\n            exp += c[i] < 0 ? '-' : exp.length > 0 ? '+' : '';\r\n            var val = Math.abs(c[i]);\r\n            exp += val === 1 ? '' : val;\r\n            exp += v[i];\r\n        }\r\n    }\r\n    return exp === '' ? '0' : exp;\r\n}\r\n\r\n// parameters are coefficients and the variable names\r\n// output is the simplified form of the expression given by combine\r\nexport const SimplifyAddSub = (c, v) => {\r\n    var varList = v.filter((x, i)=> v.indexOf(x) === i).sort();\r\n    const collectLikeTerms = (a) => c.reduce((acc, val, i) => v[i]===a?acc+val:acc, 0);\r\n    return combine(varList.map(collectLikeTerms), varList);\r\n}\r\n\r\n// expression in Q has n terms\r\n// at the moment, none of them are simply numbers\r\nexport const simpAddSubQ = (n) => {\r\n    var coeffs = Coeffs(n);\r\n    var t = RandomInt(4); // to choose how many variables to put into Q\r\n    var letters = t<=1? threeVars(n) : t===2 ? twoVars(n) : oneVar(n);\r\n    return {\r\n        q : 'Simplify '+combine(coeffs, letters),\r\n        a : SimplifyAddSub(coeffs, letters)\r\n    } \r\n}\r\n\r\n//console.log(Coeffs(), threeVars());","import { Coeffs } from './CoeffsAndVars';\r\nimport { RandomInt, distinctPrimes } from '../RandomFuncs';\r\nimport { combine } from './SimplifyAddSub';\r\n\r\nexport const Brackets1 = (outer, coeffs, varNames) => {\r\n    var inner = combine(coeffs, varNames)\r\n    return outer + '(' + inner + ')'\r\n}\r\n\r\nconst multiply = (out, inner) => inner.map(x => out * x)\r\nexport const Expand1 = (outer, coeffs, varNames) => combine(multiply(outer, coeffs), varNames);\r\n\r\nexport const Expand1Q = () => {\r\n    var co = Coeffs(2), mult = RandomInt(9) + 2;\r\n    return {\r\n        q: 'Expand ' + Brackets1(mult, co, ['a', '']),\r\n        a: Expand1(mult, co, ['a', ''])\r\n    }\r\n}\r\nexport const FactoriseQ = (level) => {\r\n    var co = [];\r\n    var [p1, p2] = distinctPrimes(2, 'small');\r\n    switch (level) {\r\n        case 1: { co = RandomInt(2) === 0 ? [1, p1] : [p1, 1]; break }\r\n        case 2: { co = RandomInt(2) === 0 ? [p1, p2] : [p1, -p2]; break }\r\n        default: { console.log('level unknown in FactoriseQ:', level); co = [3, 2] }\r\n    }\r\n    var out = RandomInt(9) + 2;\r\n    return {\r\n        q: 'Factorise ' + Expand1(out, co, ['a', 'b']),\r\n        a: Brackets1(out, co, ['a', 'b'])\r\n    }\r\n}\r\n\r\n// brackets always contain same variable names in same order\r\nexport const Expand2 = (out1, co1, pm, out2, co2, varNames) => {\r\n    var first = multiply(out1, co1), second = multiply(out2, co2);\r\n    var final = first.map((x, i) => pm === '+' ? x + second[i] : x - second[i]);\r\n    return combine(final, varNames)\r\n}\r\n\r\nexport const Expand2SimplifyQ = () => {\r\n    var c1 = Coeffs(2), c2 = Coeffs(2);\r\n    var o1 = RandomInt(9) + 2, o2 = RandomInt(9) + 2;\r\n    var pm = RandomInt(2) === 0 ? '+' : '-';\r\n    var vs = ['a', 'b']\r\n    return {\r\n        q: 'Expand and simplify ' + Brackets1(o1, c1, vs) + pm + Brackets1(o2, c2, vs),\r\n        a: Expand2(o1, c1, pm, o2, c2, vs)\r\n    }\r\n}","import { Algebra01 } from './QTypes';\r\nimport { RandomElement } from './RandomFuncs';\r\nimport { simpAddSubQ } from './AlgebraFuncs/SimplifyAddSub';\r\nimport { Expand1Q, Expand2SimplifyQ, FactoriseQ } from './AlgebraFuncs/ExpandBracket';\r\n\r\nconst subQTypes = [\r\n    null, 'simplifyAddSub', 'expandBracket', 'expand2Simplify', 'factorise1', 'factorise2'\r\n];\r\n\r\nconst Algebra01Q = (subType) => {\r\n    const subQType = subQTypes[Number(subType)] || RandomElement(subQTypes.slice(1));\r\n    var quAndA = {\r\n        QType: Algebra01 + '-' + subQType,\r\n        extraKeys: ['a', 'b', 'c', '+', '-', '/'],\r\n    }\r\n    var newQ = {};\r\n    switch (subQType) {\r\n        case 'simplifyAddSub': {\r\n            newQ = simpAddSubQ(5);\r\n            quAndA.answerFormat = 'string';\r\n            quAndA.furtherInstructions = 'Give variables in alphabetical order. eg: 7+3a-2b'\r\n            break\r\n        }\r\n        case 'expandBracket': {\r\n            newQ = Expand1Q();\r\n            quAndA.answerFormat = 'string';\r\n            quAndA.furtherInstructions = 'Give variables in order of appearance in brackets';\r\n            break\r\n        }\r\n        case 'expand2Simplify' : {\r\n            newQ = Expand2SimplifyQ();\r\n            quAndA.answerFormat = 'string';\r\n            quAndA.furtherInstructions = 'Give variables in order of appearance in brackets';\r\n            break\r\n            \r\n        }\r\n        case 'factorise1' : {\r\n            newQ = FactoriseQ(1);\r\n            quAndA.answerFormat = 'string';\r\n            quAndA.furtherInstructions = 'Give variables in order of appearance';\r\n            quAndA.extraKeys = ['a', 'b', '(', '+', '-', ')'];\r\n            break\r\n        }\r\n        case 'factorise2' : {\r\n            newQ = FactoriseQ(2);\r\n            quAndA.answerFormat = 'string';\r\n            quAndA.furtherInstructions = 'Give variables in order of appearance';\r\n            quAndA.extraKeys = ['a', 'b', '(', '+', '-', ')'];\r\n            break\r\n        }\r\n        default: { newQ.q = 'default algebra01 Q'; newQ.a = 42 }\r\n    }\r\n    quAndA.q = newQ.q; quAndA.a = newQ.a;\r\n    return quAndA;\r\n}\r\n\r\nexport default Algebra01Q;","import { MultiplyNumbers } from './QTypes';\r\n\r\nconst subQTypes = [\r\n    'zeroQ',\r\n    'sq', 'cube', \r\n    //'twos', 'threes', 'fours', 'fives', 'sixes', 'sevens', 'eights', 'nines', 'tens',\r\n    'sqEnd5', 'sqEnd1',\r\n    'gridWhole'//, 'decimal'\r\n]\r\n\r\nexport const MultiplyNumberQ = (subQType) => {\r\n    var type = Number(subQType) || Math.floor(Math.random()*(subQTypes.length-1))+1;\r\n    console.log(MultiplyNumbers+'-'+type)\r\n    var a = Math.ceil(Math.random()*9)+1, \r\n        b = Math.ceil(Math.random()*9)+1,\r\n        c = Math.ceil(Math.random()*90)+10;\r\n    var returnable = {QType:MultiplyNumbers+'-'+type}\r\n    switch (subQTypes[type]) {\r\n        case 'sq': return {...returnable, q:'What is '+a+' squared?', a:''+(a*a)}\r\n        case 'sqEnd5': {\r\n            a = a*10+5;\r\n            return {...returnable, q:'What is '+a+' squared?', a:''+(a*a)}\r\n        }\r\n        case 'sqEnd1': {\r\n            a = a*10+1;\r\n            return {...returnable, q:'What is '+a+' squared?', a:''+(a*a)}\r\n        }\r\n        case 'cube': return {...returnable, q:'What is '+a+' cubed?', a:''+(a*a*a)}\r\n        case 'gridWhole': return {...returnable, q:'What is '+c+' times '+(a*b)+'?', a:''+(a*b*c) }\r\n        default: return { q:'MultiplyNumberQ default Q', a:'625' }\r\n    }\r\n}","import axios from 'axios';\r\n\r\nimport MetricConversionQ from './MetricConversion';\r\nimport TimeConversionQ from './TimeConversion';\r\nimport VocabQ from './VocabQ';\r\nimport RatioQ from './Ratio';\r\nimport Algebra01Q from './AlgebraQ';\r\nimport { MultiplyNumberQ } from './NumberOperations';\r\nimport { metricConversion, TimeConversion, MultiplyNumbers, Vocab, Ratio, Algebra01 } from './QTypes';\r\nconst QTypes = [metricConversion, TimeConversion, MultiplyNumbers, Vocab, Ratio, Algebra01];\r\n\r\nexport const GetNewQ = (QType, subQType) => {\r\n  //console.log('QType and subQType', QType, subQType)\r\n  var type = QTypes[subQType] || QTypes[Math.floor(Math.random() * QTypes.length)];\r\n  var newQ;\r\n  switch (type) {\r\n    case metricConversion: { newQ = MetricConversionQ(subQType); break }\r\n    case MultiplyNumbers: { newQ = MultiplyNumberQ(subQType); break }\r\n    case TimeConversion: { newQ = TimeConversionQ(subQType); break }\r\n    case Vocab: { newQ = VocabQ(); break }\r\n    case Ratio: { newQ = RatioQ(subQType); break}\r\n    case Algebra01: {newQ = Algebra01Q(subQType); break}\r\n    default: return {\r\n      q: \"How many mathematicians does it take to change a light bulb?\",\r\n      a: \"1\", QType: 'giveDefault'\r\n    }\r\n  }\r\n  return newQ;\r\n}\r\n\r\nexport const getQRating = async (qType) => {\r\n  const toGet = { qType: qType };\r\n  var qRating = 1234;\r\n  await axios.get('/qratings/get1rating', { params: toGet })\r\n    .then(res => {\r\n      console.log('Axios get 1 rating:', res.data);\r\n      qRating = res.data.rating;\r\n    })\r\n    .catch(err => {\r\n      console.log('Axios Error getting rating for ', qType, err);\r\n      qRating = 1345;\r\n    });\r\n  return qRating;\r\n}\r\n","const transformRating = (rating) => 10**(rating/400);\r\n\r\n// in this, the result is from the point of view of player 1 (human) \r\n// who answered question with difficulty of rating2\r\n// howProvisional will be in [1, 10]\r\n// if the humans rating is very provisional (ie: 10) then rating1 changes by more\r\n// but the question's rating changes by little\r\nconst NewRatings = (rating1, rating2, result, howProvisional) => {\r\n    var r1=transformRating(rating1), r2 = transformRating(rating2);\r\n    // expected result for each player\r\n    var ratingSum = r1+r2;\r\n    var e1=r1/ratingSum, e2=r2/ratingSum;\r\n    // console.log('r1, e1', r1, e1)\r\n\r\n    var newR1 = rating1 + 32*howProvisional*(result - e1),\r\n        newR2 = rating2 + (32/howProvisional)*(1-result - e2);\r\n    \r\n    return [Math.floor(newR1), Math.floor(newR2)]\r\n}\r\n\r\nexport default NewRatings;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Keypad_number, Keypad_delete } from '../Reducers/actions';\r\n\r\nconst Keypad = ({ extraKeys, Keypad_number, Keypad_delete }) => {\r\n    const buttons1_9 = [...'123456789'].map(x => <button\r\n        onClick={() => Keypad_number(x)}\r\n        className=\"keypadButton\"\r\n        key={'keypad-button' + x}>{x}</button>);\r\n    const button0 = <button\r\n        onClick={() => Keypad_number('0')}\r\n        className=\"keypadButton\"\r\n        key='keypad-button0'>0</button>;\r\n    const buttonDP = <button\r\n        onClick={() => Keypad_number('.')}\r\n        className=\"keypadButton\"\r\n        key='keypad-buttonDP'>.</button>\r\n    const buttonDEL = <button\r\n        onClick={() => Keypad_delete()}\r\n        className=\"keypadButton\"\r\n        key='keypad-buttonDEL'>DEL</button>\r\n    var buttonCount = extraKeys.length === 6 ? 6 : 3\r\n    const extraButtons = extraKeys.slice(0, buttonCount).map((x, i) => <button\r\n        onClick={() => Keypad_number(x)}\r\n        className=\"keypadButton\"\r\n        key={'extra-keypad-button'+x+i}>{x}\r\n        </button>)\r\n    return (\r\n        <div className=\"keypad\">\r\n            <div>{buttons1_9.slice(0, 3)}</div>\r\n            <div>{buttons1_9.slice(3, 6)}</div>\r\n            <div>{buttons1_9.slice(6)}</div>\r\n            <div>{button0}{buttonDP}{buttonDEL}</div>\r\n            <hr />\r\n            {buttonCount > 0 ? extraButtons.slice(0, 3) : ''}\r\n            {buttonCount === 6 ? extraButtons.slice(3, 6) : ''}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {extraKeys : state.extraKeys4Pad}\r\n}\r\nexport default connect(mapStateToProps, { Keypad_number, Keypad_delete })(Keypad);","export const UPDATE_USER_ANSWER = 'UPDATE_USER_ANSWER';\r\nexport const SET_NEW_Q = 'SET_NEW_Q';\r\nexport const USER_IS_WRONG = 'USER_IS_WRONG';\r\nexport const USER_RATING_CHANGES = 'USER_RATING_CHANGES';\r\nexport const TOGGLE_CLASS = 'TOGGLE_CLASS';\r\nexport const NEED_NEW_RATED_Q = 'NEED_NEW_RATED_Q';\r\nexport const KEYPAD_NUMBER = 'KEYPAD_NUMBER';\r\nexport const KEYPAD_DELETE = 'KEYPAD_DELETE';\r\n\r\nexport const UpdateUserAnswer = (newAnswer) => {\r\n    return { type: UPDATE_USER_ANSWER, payload: newAnswer}\r\n}\r\n\r\nexport const SetNewQ = (newQuAndA) => {\r\n    return { type:SET_NEW_Q, quAndA: newQuAndA }\r\n}\r\n\r\nexport const UserIsWrong = (userAnswer, newQuAndARating) => {\r\n    return { type:USER_IS_WRONG, wrongAnswer:userAnswer, newQuAndARating:newQuAndARating }\r\n}\r\n\r\nexport const UserRatingChanges = (newUserRating) => {\r\n    return { type: USER_RATING_CHANGES, userRating: newUserRating}\r\n}\r\n\r\nexport const ToggleClass = () => {\r\n    return {type:TOGGLE_CLASS}\r\n}\r\n\r\nexport const NeedNewRatedQ = () => {\r\n    return {type: NEED_NEW_RATED_Q}\r\n}\r\n\r\nexport const Keypad_number = (n) => {\r\n    return {type:KEYPAD_NUMBER, payload:n}\r\n}\r\n\r\nexport const Keypad_delete = () => {\r\n    return {type:KEYPAD_DELETE}\r\n}","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {\r\n    UpdateUserAnswer, UserRatingChanges,\r\n    SetNewQ, UserIsWrong, NeedNewRatedQ\r\n} from '../Reducers/actions';\r\nimport { GetNewQ, getQRating } from '../NewQs/GetNewQ';\r\nimport NewRatings from '../Ratings/Ratings';\r\nimport Keypad from '../components/Keypad';\r\n\r\nconst Question = ({\r\n    quAndA, userAnswer, userRating, wrongAnswers, needNewRatedQ,\r\n    UserRatingChanges, UpdateUserAnswer, SetNewQ, UserIsWrong, NeedNewRatedQ }) => {\r\n    const changeHandler = (e) => {\r\n        UpdateUserAnswer(e.target.value);\r\n    }\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        // allow answer like 1.70 when the required answer is 1.7\r\n        // converting to Number will do this\r\n        // but take care if questions types are included that need a string as an answer\r\n        switch (quAndA.answerFormat) {\r\n            case 'string': {\r\n                var userIsCorrect = \r\n                  userAnswer.toLowerCase().replace(/\\s/g, '') === quAndA.a.toLowerCase().replace(/\\s/g, '');\r\n                break\r\n            }\r\n            default: userIsCorrect = Number(userAnswer) === Number(quAndA.a)\r\n        }\r\n        if (userIsCorrect) {\r\n            var [newUserRating, newQuAndARating] = NewRatings(userRating, quAndA.QRating || 1500, 1, 1);\r\n            UserRatingChanges(newUserRating);\r\n            NeedNewRatedQ();\r\n        } else {\r\n            [newUserRating, newQuAndARating] = NewRatings(userRating, quAndA.QRating || 1500, 0, 1);\r\n            //console.log('QType, QRating, old, new:', quAndA.QType, quAndA.QRating, newQuAndARating);\r\n            UserRatingChanges(newUserRating);\r\n            UserIsWrong(userAnswer, newQuAndARating)\r\n        }\r\n        if (quAndA.QType !== 'giveDefault') {\r\n            const toPost = {\r\n                category: quAndA.QType,\r\n                ratingValue: newQuAndARating\r\n            }\r\n            axios.post('/qratings/new-data', toPost)\r\n                .then(res => console.log('Success while posting rating of Q', res))\r\n                .catch(err => console.log('Error while posting rating of Q', err));\r\n        } else { console.log('Did not post about default Q') }\r\n    }\r\n\r\n    const wrongAnswerList = wrongAnswers.map((x, i) =>\r\n        <p key={i}>{x} was wrong</p>)\r\n\r\n    useEffect(() => {\r\n        if (needNewRatedQ || quAndA.QType === 'giveDefault') {\r\n            var newQ = GetNewQ('', '');\r\n            //console.log('q.js, useEffect, newQ is: ', newQ);\r\n            getQRating(newQ.QType).then(promiseMessage => {\r\n                //console.log('getQRating in useEffect has promise:', promiseMessage);\r\n                newQ.QRating = promiseMessage;\r\n                SetNewQ(newQ);\r\n            })\r\n                .catch(err => {\r\n                    console.log('GetNewQ in useEffect has error:', err);\r\n                });\r\n        }\r\n    })\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"quAndA\">\r\n                <h2>{quAndA.q}</h2>\r\n                <form onSubmit={submitHandler}>\r\n                    <input className=\"answerbox\"\r\n                        type=\"text\"\r\n                        name=\"answerbox\"\r\n                        value={userAnswer}\r\n                        onChange={changeHandler} />\r\n                    <button type=\"submit\">Submit</button>\r\n                </form>\r\n                <p>{quAndA.furtherInstructions || ''}</p>\r\n                {wrongAnswerList}\r\n                <br />\r\n            </div>\r\n            {needNewRatedQ ?\r\n                <p>Fetching the rating for a new question....</p> :\r\n                <Keypad />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        quAndA: state.quAndA,\r\n        needNewRatedQ: state.needNewRatedQ,\r\n        wrongAnswers: state.wrongAnswers,\r\n        userAnswer: state.userAnswer,\r\n        userRating: state.userRating\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    UpdateUserAnswer, UserRatingChanges, SetNewQ, UserIsWrong, NeedNewRatedQ\r\n})(Question);","import React from 'react';\r\n\r\nclass QWithReveal extends React.Component {\r\n    state = {showAnswer: false}\r\n    quandaClass = Number(this.props.rowType) % 2 ? \"quandaBlock-odd\" : \"quandaBlock-even\";\r\n    \r\n    \r\n    handleClick = () => {\r\n        this.setState({showAnswer:!this.state.showAnswer})\r\n    }\r\n    RevealButton = <button className=\"revealBtn\" onClick={this.handleClick}>Show answer</button>\r\n    Answer = <h2 className=\"aBlock\" onClick={this.handleClick} >{this.props.a}</h2>; \r\n\r\n    render() {\r\n        return (\r\n            <div className={this.quandaClass}>\r\n                <h2 className=\"qBlock\">{this.props.q}</h2>\r\n                {this.state.showAnswer ? this.Answer : this.RevealButton}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default QWithReveal;","import React from 'react';\r\nimport QWithReveal from './QWithReveal';\r\nimport {GetNewQ} from '../NewQs/GetNewQ';\r\n\r\nconst ClassRoom = (props) => {\r\n    var qList = [];\r\n    var QTypeSplit = props.QType.split('-');\r\n    console.log(props.QType, QTypeSplit)\r\n    for (var i=0; i<5; i++) {\r\n        var newQ = GetNewQ(QTypeSplit[0], QTypeSplit[1]);\r\n        qList.push(\r\n            <QWithReveal q={newQ.q} a={newQ.a} rowType={'' + i} key={i} />\r\n        )\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>This is the class room</h2>\r\n            <h3>Where you simply click to see the answers</h3>\r\n            {qList}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClassRoom;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport Question from './components/Question';\r\nimport ClassRoom from './components/ClassRoom';\r\nimport { ToggleClass } from './Reducers/actions';\r\nimport './App.css';\r\n\r\nconst App = ({ userRating, currentQ, showClassRoom, ToggleClass }) => {\r\n  const giveme5Option = <Dropdown.Item onClick={ToggleClass}>5 in the Classroom</Dropdown.Item>;\r\n  const rateMymathsOption = <Dropdown.Item onClick={ToggleClass}>Rate My Maths</Dropdown.Item>;\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"header\" >\r\n        <DropdownButton id=\"dropdown-variants-info\" title=\"Maths ELO\" className=\"appTitle\" size=\"lg\">\r\n          {showClassRoom ? rateMymathsOption : giveme5Option}\r\n        </DropdownButton>\r\n        <p>Rate and review your maths</p>\r\n        <p className=\"userVSquestion\" >Guest User ({userRating}) VS {currentQ.QType} ({currentQ.QRating||'????'}) </p>\r\n      </div>\r\n      {showClassRoom ? <ClassRoom QType={currentQ.QType} /> : <Question />}\r\n    </div>\r\n  );\r\n}\r\n// used before dropdown menu implemented\r\n// {showClassRoom ? giveMeTestsbtn : giveme5btn }\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userRating: state.userRating,\r\n    currentQ: state.quAndA,\r\n    showClassRoom: state.showClassRoom\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { ToggleClass })(App);\r\n","import { UPDATE_USER_ANSWER, KEYPAD_NUMBER, KEYPAD_DELETE,\r\n    SET_NEW_Q, \r\n    USER_IS_WRONG, USER_RATING_CHANGES, \r\n    TOGGLE_CLASS, NEED_NEW_RATED_Q } from './actions';\r\n\r\nconst newQ = { \r\n    q: \"How many mathematicians does it take to change a light bulb?\", \r\n    a: \"1\", QType:'giveDefault' };\r\nconst defaultExtraKeys = ['--', '--', '--'];\r\n\r\nconst initialState = {\r\n    userRating: 1500,\r\n    quAndA: newQ,\r\n    needNewRatedQ: true,\r\n    userAnswer: '',\r\n    wrongAnswers: [], \r\n    extraKeys4Pad: defaultExtraKeys,\r\n    showClassRoom: false\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    console.log('handling the action ', action)\r\n    switch (action.type) {\r\n        case NEED_NEW_RATED_Q : return {...state, needNewRatedQ:true}\r\n        // split update of rating and quandA\r\n        case USER_RATING_CHANGES: return {...state, userRating:action.userRating}\r\n        case SET_NEW_Q : return {\r\n            ...state, \r\n            quAndA:action.quAndA, \r\n            needNewRatedQ: false,\r\n            extraKeys4Pad: action.quAndA.extraKeys || defaultExtraKeys,\r\n            userAnswer:'', wrongAnswers:[]}\r\n        case USER_IS_WRONG : return {\r\n            ...state,\r\n            wrongAnswers:[...state.wrongAnswers, action.wrongAnswer],\r\n            userAnswer: '',\r\n            quAndA: {...state.quAndA, QRating: action.newQuAndARating}\r\n        }\r\n        case UPDATE_USER_ANSWER : return {...state, userAnswer:action.payload}\r\n        case KEYPAD_NUMBER : return {...state, userAnswer:state.userAnswer+action.payload}\r\n        case KEYPAD_DELETE : return {...state, userAnswer:state.userAnswer.slice(0, -1)}\r\n        case TOGGLE_CLASS : return {...state, showClassRoom:!state.showClassRoom}\r\n        default : return state;\r\n    } \r\n}\r\n\r\nexport default reducer;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport Reducer from './Reducers/Reducer';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={createStore(Reducer)} ><App /></Provider>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}