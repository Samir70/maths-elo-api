{"version":3,"sources":["Reducers/actions.js","NewQs/QTypes.js","NewQs/MetricConversion.js","NewQs/TimeConversion.js","NewQs/VocabQ.js","NewQs/Ratio.js","NewQs/AlgebraFuncs/CoeffsAndVars.js","NewQs/AlgebraFuncs/SimplifyAddSub.js","NewQs/AlgebraFuncs/ExpandBracket.js","NewQs/AlgebraQ.js","NewQs/NumberOperations.js","NewQs/GetNewQ.js","Ratings/Ratings.js","components/Keypad.js","components/Question.js","components/QWithReveal.js","components/ClassRoom.js","components/TopicSelect.js","components/LoginForm.js","App.js","Reducers/Reducer.js","serviceWorker.js","index.js","NewQs/RandomFuncs.js"],"names":["ChangeActiveScreen","newScreen","type","QTypes","conversionPairs","large","small","ratio","MetricConversionQ","subQType","Qtype","Number","Math","floor","random","length","convFacts","forward","extraLarge","q","a","QType","metricConversion","hms2sec","h","m","s","rnd","outof","TimeConversionQ","subType","left","right","leftUnits","rightUnits","sec","min","hr","totalSec","TimeConversion","console","log","answerFormat","extraKeys","VocabQList","VocabQ","question","subQTypes","RatioQ","RandomElement","slice","quAndA","Ratio","require","RandomInt","Coeffs","n","Array","fill","map","x","i","combine","c","v","l","exp","val","abs","SimplifyAddSub","varList","filter","indexOf","sort","reduce","acc","simpAddSubQ","coeffs","t","letters","threeVars","twoVars","oneVar","Brackets1","outer","varNames","multiply","out","inner","Expand1","FactoriseQ","level","co","distinctPrimes","p1","p2","Expand2","out1","co1","pm","out2","co2","first","second","final","Algebra01Q","Algebra01","newQ","furtherInstructions","mult","Expand1Q","c1","c2","o1","o2","vs","Expand2SimplifyQ","GetNewQ","MultiplyNumbers","ceil","b","returnable","MultiplyNumberQ","transformRating","rating","NewRatings","rating1","rating2","result","howProvisional","r1","r2","ratingSum","newR1","newR2","connect","state","extraKeys4Pad","Keypad_number","payload","Keypad_delete","buttons1_9","onClick","className","key","button0","buttonDP","buttonDEL","buttonCount","extraButtons","needNewRatedQ","wrongAnswers","userAnswer","userRating","UpdateUserAnswer","newAnswer","UserRatingChanges","newUserRating","SetNewQ","newQuAndA","UserIsWrong","newQuAndARating","wrongAnswer","NeedNewRatedQ","wrongAnswerList","useEffect","qType","async","toGet","qRating","axios","get","params","then","res","data","catch","err","getQRating","promiseMessage","QRating","id","onSubmit","e","preventDefault","userIsCorrect","toLowerCase","replace","toPost","category","ratingValue","put","name","value","onChange","target","QWithReveal","showAnswer","answer","quandaClass","props","rowType","handleClick","setState","refreshQ","freshQ","this","RevealButton","Answer","React","Component","ClassRoom","qList","elementsFrom","typeList","forEach","QTypeSplit","split","push","selectedTopics","ToggleTopic","topic","AllTopics","mode","qTypeList","Button","variant","includes","ButtonGroup","join","vertical","LoginUser","userName","Form","event","UserName","password","status","Group","Label","Control","placeholder","required","Text","userID","currentQ","activeScreen","giveme5Option","Dropdown","Item","rateMymathsOption","selectTopicsOption","userLabel","DropdownButton","title","size","mainScreen","defaultExtraKeys","initialState","userLoggedIn","addOrDrop","arr","el","reducer","action","Boolean","window","location","hostname","match","ReactDOM","render","store","createStore","Reducer","document","getElementById","navigator","serviceWorker","ready","registration","unregister","distinctElementsFrom","list","primes","smallPrimes","RandomPrime"],"mappings":"oOAwCaA,EAAqB,SAACC,GAC/B,MAAO,CAAEC,KAlCuB,uBAkCKD,UAAUA,I,iBC1BtCE,EAAS,CAfU,mBACF,iBACC,kBACV,QACA,QACI,aCHnBC,EAAkB,CACtB,QACE,CAACC,MAAM,CAAC,SAAU,KAAMC,MAAM,CAAC,cAAe,MAAOC,MAAM,KAC3D,CAACF,MAAM,CAAC,SAAU,KAAMC,MAAM,CAAC,cAAe,MAAOC,MAAM,KAC3D,CAACF,MAAM,CAAC,aAAc,MAAOC,MAAM,CAAC,SAAU,KAAMC,MAAM,KAE1D,CAACF,MAAM,CAAC,QAAS,KAAMC,MAAM,CAAC,aAAc,MAAOC,MAAM,KACzD,CAACF,MAAM,CAAC,YAAa,MAAOC,MAAM,CAAC,QAAS,KAAMC,MAAM,KAExD,CAACF,MAAM,CAAC,SAAU,KAAMC,MAAM,CAAC,cAAe,MAAOC,MAAM,KAC3D,CAACF,MAAM,CAAC,SAAU,KAAMC,MAAM,CAAC,cAAe,MAAOC,MAAM,MAkBhDC,EAfW,SAACC,GACvB,IAAIC,EAAQC,OAAOF,IAAaG,KAAKC,MAAMD,KAAKE,UAAUV,EAAgBW,OAAO,IAAI,EAEjFC,EAAYZ,EAAgBM,GAC5BO,EAAUL,KAAKE,SAAW,GAC1BI,EAAaN,KAAKE,SAAW,IAAO,EAAIF,KAAKE,SAAW,GAAM,GAAK,IACnER,EAAQM,KAAKC,MAAMD,KAAKE,SAASE,EAAUT,OAAOW,EAClDb,EAAQC,EAAMU,EAAUT,MAC5B,OAAOU,EACL,CAACE,EAAE,WAAWb,EAAMU,EAAUV,MAAM,GAAG,OAAOU,EAAUX,MAAM,GAC5De,EAAE,GAAGf,EAAOgB,MAAMC,oBAAqBZ,GACzC,CAACS,EAAE,WAAWd,EAAMW,EAAUX,MAAM,GAAG,OAAOW,EAAUV,MAAM,GAC5Dc,EAAE,GAAGd,EAAOe,MAAMC,oBAAqBZ,ICxBzCa,EAAU,SAACC,EAAGC,EAAGC,GAAP,OAAe,KAAFF,EAAS,GAAFC,EAAKC,GAEnCtB,EAAkB,CACpB,OACA,SAAU,YAKRuB,EAAM,SAACC,GAAD,OAAWhB,KAAKC,MAAMD,KAAKE,SAASc,IA6CjCC,EA3CS,SAACC,GACrB,IAeIC,EAAMC,EAAOC,EAAWC,EAfxBzB,EAAWE,OAAOmB,IAAYlB,KAAKC,MAAMD,KAAKE,UAAUV,EAAgBW,OAAO,IAAI,EAcnFE,EAAUL,KAAKE,SAAW,EAE1BqB,EAAMR,EAAI,IAAKS,EAAMT,EAAI,IAAKU,EAAKV,EAAI,IAC3C,OAAQvB,EAAgBK,IACpB,IAAK,SACS,IAAN2B,GAAUA,IACd,IAAIE,EAAWf,EAAQ,EAAGa,EAAKD,GAC/BJ,EAAM,GAAGO,EAAUN,EAAQI,EAAI,OAAOD,EAAI,MAC1CF,EAAY,UAAWC,EAAa,sBACpC,MAEJ,IAAK,WAEDH,EAAO,IADPO,EAAWf,EAAQc,EAAID,EAAKD,IACRH,EAAMK,EAAG,MAAMD,EAAI,OAAOD,EAAI,MAClDF,EAAU,UAAWC,EAAa,4BAClC,MAEJ,QAAS,MAAO,CAAEf,EAAE,2BAA4BC,EAAE,OAItD,OAFAX,EAAW8B,kBAAmB9B,EAC9B+B,QAAQC,IAAIhC,GACLQ,EACH,CAAEE,EAAE,WAAWY,EAAKE,EAAU,OAAOC,EACnCd,EAAEY,EAAOX,MAAMZ,EAAUiC,aAAa,SAAUC,UAAU,CAAC,MAAO,MAAO,QAC3E,CAAExB,EAAE,WAAWa,EAAM,OAAOC,EAC1Bb,EAAEW,EAAMV,MAAMZ,EAAUiC,aAAa,SAAUC,UAAU,CAAC,MAAO,MAAO,S,OCzB5EC,EAAU,UA3BI,CAChB,CAACzB,EAAE,sGACFC,EAAE,YACH,CAACD,EAAE,iFAAkFC,EAAE,UACvF,CAACD,EAAE,qEAAsEC,EAAE,WAC3E,CAACD,EAAE,6FAA8FC,EAAE,SACnG,CAACD,EAAE,sCAAuCC,EAAE,YAC5C,CAACD,EAAE,0EAA2EC,EAAE,WAG9D,CAClB,CAACD,EAAE,uDAAwDC,EAAE,eAC7D,CAACD,EAAE,+DAAgEC,EAAE,aACrE,CAACD,EAAE,qEAAsEC,EAAE,WAC3E,CAACD,EAAE,8DAA+DC,EAAE,eAGrD,CACf,CAACD,EAAE,8DAA+DC,EAAE,SACpE,CAACD,EAAE,4DAA6DC,EAAE,SAClE,CAACD,EAAE,8DAA+DC,EAAE,UACpE,CAACD,EAAE,+DAAgEC,EAAE,UACrE,CAACD,EAAE,+DAAgEC,EAAE,iBACrE,CAACD,EAAE,8DAA+DC,EAAE,iBACpE,CAACD,EAAE,+EAAgFC,EAAE,cAU1EyB,EALA,WACX,IAAIC,EAAWlC,KAAKC,MAAMD,KAAKE,SAAS8B,EAAW7B,QACnD,OAAO,eAAI6B,EAAWE,GAAtB,CAAiCJ,aAAa,SAAUrB,MH9BvC,W,OIAf0B,EAAY,CACd,KAAM,WAAY,UAAW,YAAa,QAAS,aAoBxCC,EAjBA,SAAClB,GACZ,IAAMrB,EAAWqB,GAAWmB,wBAAcF,EAAUG,MAAM,IACtDC,EAAS,CAAE9B,MAAO+B,SAAU3C,EAAUkC,UAAU,CAAC,IAAK,IAAK,MAE/D,OAAQlC,GACJ,IAAK,WAAc0C,EAAOhC,EAAE,iBAAkBgC,EAAO/B,EAAE,MAAM+B,EAAOT,aAAa,SAAU,MAC3F,IAAK,UAAaS,EAAOhC,EAAE,gCAAiCgC,EAAO/B,EAAE,SAAU+B,EAAOT,aAAa,SAAU,MAC7G,IAAK,YAAeS,EAAOhC,EAAE,6GAA8GgC,EAAO/B,EAAE,IAAK,MACzJ,IAAK,QAAW+B,EAAOhC,EAAE,kEAAgEgC,EAAO/B,EAAE,WAAY+B,EAAOT,aAAa,SAAU,MAC5I,IAAK,YAAeS,EAAOhC,EAAE,kHAAgHgC,EAAO/B,EAAE,KAAM,MAC5J,QAAW+B,EAAOhC,EAAE,kBAAmBgC,EAAO/B,EAAE,KAIpD,OADAoB,QAAQC,IAAIU,GACLA,G,ECrB0BE,EAAQ,GAArCC,E,EAAAA,UAAWL,E,EAAAA,cACNM,EAAS,SAACC,GAAD,OAAOC,MAAMD,GAAGE,KAAK,GAAGC,IAAIL,GACzCK,KAAI,SAACC,EAAGC,GACL,OAAQ,IAAJA,EAAeD,EAAE,EACG,IAAjBN,EAAU,GAAWM,EAAE,IAAMA,EAAE,OCH1CN,EAAcD,EAAQ,GAAtBC,UAcKQ,EAAU,SAACC,EAAGC,GACvB,IAAIC,EAAIrD,KAAKwB,IAAI2B,EAAEhD,OAAQiD,EAAEjD,QAC7B,GAAU,IAANkD,EAAW,OAAO,KAEtB,IADA,IAAIC,EAAM,GACDL,EAAI,EAAGA,EAAEI,EAAGJ,IACjB,GAAY,IAARE,EAAEF,GAAS,CACXK,GAAOH,EAAEF,GAAK,EAAI,IAAMK,EAAInD,OAAS,EAAI,IAAM,GAC/C,IAAIoD,EAAMvD,KAAKwD,IAAIL,EAAEF,IACrBK,GAAe,IAARC,GAAsB,KAATH,EAAEH,GAAY,GAAKM,EACvCD,GAAOF,EAAEH,GAIjB,MAAe,KAARK,EAAa,IAAMA,GAKjBG,EAAiB,SAACN,EAAGC,GAC9B,IAAIM,EAAUN,EAAEO,QAAO,SAACX,EAAGC,GAAJ,OAASG,EAAEQ,QAAQZ,KAAOC,KAAGY,OAEpD,OAAOX,EAAQQ,EAAQX,KADE,SAACvC,GAAD,OAAO2C,EAAEW,QAAO,SAACC,EAAKR,EAAKN,GAAX,OAAiBG,EAAEH,KAAKzC,EAAEuD,EAAIR,EAAIQ,IAAK,MAClCL,IAKrCM,EAAc,SAACpB,GACxB,IAAIqB,EAAStB,EAAOC,GAChBsB,EAAIxB,EAAU,GACdyB,EAAUD,GAAG,EDtCI,SAACtB,GAAD,OAAOC,MAAMD,GAAGE,KAAK,CAAC,IAAK,IAAK,MAAMC,IAAIV,GCsC3C+B,CAAUxB,GAAS,IAAJsB,EDrChB,SAACtB,GAAD,OAAOC,MAAMD,GAAGE,KAAK,CAAC,IAAK,MAAMC,IAAIV,GCqCbgC,CAAQzB,GDpCjC,SAACA,GAAD,OAAOC,MAAMD,GAAGE,KAAKT,EAAc,CAAC,IAAK,IAAK,OCoCRiC,CAAO1B,GAC/D,MAAO,CACHrC,EAAI,YAAY2C,EAAQe,EAAQE,GAChC3D,EAAIiD,EAAeQ,EAAQE,KC3CtBI,EAAY,SAACC,EAAOP,EAAQQ,GAErC,OAAOD,EAAQ,IADHtB,EAAQe,EAAQQ,GACC,KAG3BC,EAAW,SAACC,EAAKC,GAAN,OAAgBA,EAAM7B,KAAI,SAAAC,GAAC,OAAI2B,EAAM3B,MACzC6B,EAAU,SAACL,EAAOP,EAAQQ,GAAhB,OAA6BvB,EAAQwB,EAASF,EAAOP,GAASQ,IASxEK,EAAa,SAACC,GACvB,IAAIC,EAAK,GADwB,EAElBC,yBAAe,EAAG,SAFA,mBAE5BC,EAF4B,KAExBC,EAFwB,KAGjC,OAAQJ,GACJ,KAAK,EAAKC,EAAsB,IAAjBtC,oBAAU,GAAW,CAAC,EAAGwC,GAAM,CAACA,EAAI,GAAI,MACvD,KAAK,EAAKF,EAAsB,IAAjBtC,oBAAU,GAAW,CAACwC,EAAIC,GAAM,CAACD,GAAKC,GAAK,MAC1D,QAAWvD,QAAQC,IAAI,+BAAgCkD,GAAQC,EAAK,CAAC,EAAG,GAE5E,IAAIL,EAAMjC,oBAAU,GAAK,EACzB,MAAO,CACHnC,EAAG,aAAesE,EAAQF,EAAKK,EAAI,CAAC,IAAK,MACzCxE,EAAG+D,EAAUI,EAAKK,EAAI,CAAC,IAAK,QAKvBI,EAAU,SAACC,EAAMC,EAAKC,EAAIC,EAAMC,EAAKhB,GAC9C,IAAIiB,EAAQhB,EAASW,EAAMC,GAAMK,EAASjB,EAASc,EAAMC,GACrDG,EAAQF,EAAM3C,KAAI,SAACC,EAAGC,GAAJ,MAAiB,MAAPsC,EAAavC,EAAI2C,EAAO1C,GAAKD,EAAI2C,EAAO1C,MACxE,OAAOC,EAAQ0C,EAAOnB,ICjCpBtC,EAAY,CACd,KAAM,iBAAkB,gBAAiB,kBAAmB,aAAc,cAkD/D0D,EA/CI,SAAC3E,GAChB,IAAMrB,EAAWqB,GAAWmB,wBAAcF,EAAUG,MAAM,IACtDC,EAAS,CACT9B,MAAOqF,aAAkBjG,EACzBkC,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,MAErCgE,EAAO,GACX,OAAQlG,GACJ,IAAK,iBACDkG,EAAO/B,EAAY,GACnBzB,EAAOT,aAAe,SACtBS,EAAOyD,oBAAsB,oDAC7B,MAEJ,IAAK,gBACDD,EDZY,WACpB,IAAIf,EAAKrC,EAAO,GAAIsD,EAAOvD,oBAAU,GAAK,EAC1C,MAAO,CACHnC,EAAG,UAAYgE,EAAU0B,EAAMjB,EAAI,CAAC,IAAK,KACzCxE,EAAGqE,EAAQoB,EAAMjB,EAAI,CAAC,IAAK,MCQhBkB,GACP3D,EAAOT,aAAe,SACtBS,EAAOyD,oBAAsB,oDAC7B,MAEJ,IAAK,kBACDD,EDWoB,WAC5B,IAAII,EAAKxD,EAAO,GAAIyD,EAAKzD,EAAO,GAC5B0D,EAAK3D,oBAAU,GAAK,EAAG4D,EAAK5D,oBAAU,GAAK,EAC3C6C,EAAsB,IAAjB7C,oBAAU,GAAW,IAAM,IAChC6D,EAAK,CAAC,IAAK,KACf,MAAO,CACHhG,EAAG,uBAAyBgE,EAAU8B,EAAIF,EAAII,GAAMhB,EAAKhB,EAAU+B,EAAIF,EAAIG,GAC3E/F,EAAG4E,EAAQiB,EAAIF,EAAIZ,EAAIe,EAAIF,EAAIG,IClBpBC,GACPjE,EAAOT,aAAe,SACtBS,EAAOyD,oBAAsB,oDAC7B,MAGJ,IAAK,aACDD,EAAOjB,EAAW,GAClBvC,EAAOT,aAAe,SACtBS,EAAOyD,oBAAsB,wCAC7BzD,EAAOR,UAAY,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAC7C,MAEJ,IAAK,aACDgE,EAAOjB,EAAW,GAClBvC,EAAOT,aAAe,SACtBS,EAAOyD,oBAAsB,wCAC7BzD,EAAOR,UAAY,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAC7C,MAEJ,QAAWgE,EAAKxF,EAAI,sBAAuBwF,EAAKvF,EAAI,GAGxD,OADA+B,EAAOhC,EAAIwF,EAAKxF,EAAGgC,EAAO/B,EAAIuF,EAAKvF,EAC5B+B,GCnDLJ,EAAY,CACd,QACA,KAAM,OAEN,SAAU,SACV,aCQSsE,EAAU,SAAChG,EAAOZ,GAE7B,IACIkG,EACJ,OAFWtF,GAASlB,EAAOS,KAAKC,MAAMD,KAAKE,SAAWX,EAAOY,UAG3D,IVpB4B,mBUoBH4F,EAAOnG,EAAkBC,GAAW,MAC7D,IVnB2B,kBUmBHkG,EDXG,SAAClG,GAC5B,IAAIP,EAAOS,OAAOF,IAAaG,KAAKC,MAAMD,KAAKE,UAAUiC,EAAUhC,OAAO,IAAI,EAC9EyB,QAAQC,IAAI6E,mBAAoBpH,GAChC,IAAIkB,EAAIR,KAAK2G,KAAmB,EAAd3G,KAAKE,UAAY,EAC/B0G,EAAI5G,KAAK2G,KAAmB,EAAd3G,KAAKE,UAAY,EAC/BiD,EAAInD,KAAK2G,KAAmB,GAAd3G,KAAKE,UAAa,GAChC2G,EAAa,CAACpG,MAAMiG,mBAAoBpH,GAC5C,OAAQ6C,EAAU7C,IACd,IAAK,KAAM,OAAO,eAAIuH,EAAX,CAAuBtG,EAAE,WAAWC,EAAE,YAAaA,EAAE,GAAIA,EAAEA,IACtE,IAAK,SAED,OADAA,EAAM,GAAFA,EAAK,EACF,eAAIqG,EAAX,CAAuBtG,EAAE,WAAWC,EAAE,YAAaA,EAAE,GAAIA,EAAEA,IAE/D,IAAK,SAED,OADAA,EAAM,GAAFA,EAAK,EACF,eAAIqG,EAAX,CAAuBtG,EAAE,WAAWC,EAAE,YAAaA,EAAE,GAAIA,EAAEA,IAE/D,IAAK,OAAQ,OAAO,eAAIqG,EAAX,CAAuBtG,EAAE,WAAWC,EAAE,UAAWA,EAAE,GAAIA,EAAEA,EAAEA,IACxE,IAAK,YAAa,OAAO,eAAIqG,EAAX,CAAuBtG,EAAE,WAAW4C,EAAE,UAAW3C,EAAEoG,EAAG,IAAKpG,EAAE,GAAIA,EAAEoG,EAAEzD,IACvF,QAAS,MAAO,CAAE5C,EAAE,4BAA6BC,EAAE,QCRxBsG,CAAgBjH,GAAW,MAC1D,IVrB0B,iBUqBHkG,EAAO9E,EAAgBpB,GAAW,MACzD,IVpBiB,QUoBHkG,EAAO9D,IAAU,MAC/B,IVpBiB,QUoBH8D,EAAO3D,EAAOvC,GAAW,MACvC,IVpBqB,YUoBJkG,EAAOF,EAAWhG,GAAW,MAC9C,QAAS,MAAO,CACdU,EAAG,+DACHC,EAAG,IAAKC,MAAO,eAGnB,OAAOsF,GC/BHgB,EAAkB,SAACC,GAAD,gBAAY,GAAKA,EAAO,MAoBjCC,EAbI,SAACC,EAASC,EAASC,EAAQC,GAC1C,IAAIC,EAAGP,EAAgBG,GAAUK,EAAKR,EAAgBI,GAElDK,EAAYF,EAAGC,EAIfE,EAAQP,EAAU,GAAGG,GAAgBD,EAHlCE,EAAGE,GAINE,EAAQP,EAAW,GAAGE,GAAiB,EAAED,EAJrBG,EAAGC,GAM3B,MAAO,CAACxH,KAAKC,MAAMwH,GAAQzH,KAAKC,MAAMyH,K,QC2B3BC,eAHS,SAACC,GACrB,MAAO,CAAC7F,UAAY6F,EAAMC,iBAEU,CAAEC,cbIb,SAAClF,GAC1B,MAAO,CAACtD,KAxCiB,gBAwCGyI,QAAQnF,IaLiBoF,cbQ5B,WACzB,MAAO,CAAC1I,KA3CiB,mBakCdqI,EAvCA,SAAC,GAAiD,IAA/C5F,EAA8C,EAA9CA,UAAW+F,EAAmC,EAAnCA,cAAeE,EAAoB,EAApBA,cAClCC,EAAa,YAAI,aAAalF,KAAI,SAAAC,GAAC,OAAI,4BACzCkF,QAAS,kBAAMJ,EAAc9E,IAC7BmF,UAAU,eACVC,IAAK,gBAAkBpF,GAAIA,MACzBqF,EAAU,4BACZH,QAAS,kBAAMJ,EAAc,MAC7BK,UAAU,eACVC,IAAI,kBAHQ,KAIVE,EAAW,4BACbJ,QAAS,kBAAMJ,EAAc,MAC7BK,UAAU,eACVC,IAAI,mBAHS,KAIXG,EAAY,4BACdL,QAAS,kBAAMF,KACfG,UAAU,eACVC,IAAI,oBAHU,OAIdI,EAAmC,IAArBzG,EAAU5B,OAAe,EAAI,EACzCsI,EAAe1G,EAAUO,MAAM,EAAGkG,GAAazF,KAAI,SAACC,EAAGC,GAAJ,OAAU,4BAC/DiF,QAAS,kBAAMJ,EAAc9E,IAC7BmF,UAAU,eACVC,IAAK,sBAAsBpF,EAAEC,GAAID,MAErC,OACI,yBAAKmF,UAAU,UACX,6BAAMF,EAAW3F,MAAM,EAAG,IAC1B,6BAAM2F,EAAW3F,MAAM,EAAG,IAC1B,6BAAM2F,EAAW3F,MAAM,IACvB,6BAAM+F,EAASC,EAAUC,GACzB,6BACCC,EAAc,EAAIC,EAAanG,MAAM,EAAG,GAAK,GAC7B,IAAhBkG,EAAoBC,EAAanG,MAAM,EAAG,GAAK,OCoE7CqF,eAVS,SAACC,GACrB,MAAO,CACHrF,OAAQqF,EAAMrF,OACdmG,cAAed,EAAMc,cACrBC,aAAcf,EAAMe,aACpBC,WAAYhB,EAAMgB,WAClBC,WAAYjB,EAAMiB,cAIc,CACpCC,iBd7F4B,SAACC,GAC7B,MAAO,CAAEzJ,KAbqB,qBAaKyI,QAASgB,Ic4F1BC,kBdzEW,SAACC,GAC9B,MAAO,CAAE3J,KA5BsB,sBA4BKuJ,WAAYI,IcwEXC,QdjFlB,SAACC,GACpB,MAAO,CAAE7J,KAtBY,YAsBIiD,OAAQ4G,IcgFaC,Yd7EvB,SAACR,EAAYS,GACpC,MAAO,CAAE/J,KAzBgB,gBAyBIgK,YAAYV,EAAYS,gBAAgBA,Ic4EVE,cd7DlC,WACzB,MAAO,CAACjK,KArCoB,sBcgGjBqI,EA7FE,SAAC,GAEkE,IADhFpF,EAC+E,EAD/EA,OAAQqG,EACuE,EADvEA,WAAYC,EAC2D,EAD3DA,WAAYF,EAC+C,EAD/CA,aAAcD,EACiC,EADjCA,cAC9CM,EAA+E,EAA/EA,kBAAmBF,EAA4D,EAA5DA,iBAAkBI,EAA0C,EAA1CA,QAASE,EAAiC,EAAjCA,YAAaG,EAAoB,EAApBA,cAsCrDC,EAAkBb,EAAa5F,KAAI,SAACC,EAAGC,GAAJ,OACrC,uBAAGmF,IAAKnF,GAAID,EAAZ,iBAkBJ,OAhBAyG,qBAAU,WACN,GAAIf,GAAkC,gBAAjBnG,EAAO9B,MAAyB,CACjD,IAAIsF,EAAOU,EAAQ,GAAI,KHtBT,SAAOiD,GAAP,iBAAAlJ,EAAAmJ,OAAA,uDAClBC,EAAQ,CAAEF,MAAOA,GACnBG,EAAU,KAFU,WAAArJ,EAAA,MAGlBsJ,IAAMC,IAAI,uBAAwB,CAAEC,OAAQJ,IAC/CK,MAAK,SAAAC,GACJtI,QAAQC,IAAI,sBAAuBqI,EAAIC,MACvCN,EAAUK,EAAIC,KAAKnD,UAEpBoD,OAAM,SAAAC,GACLzI,QAAQC,IAAI,kCAAmC6H,EAAOW,GACtDR,EAAU,SAVU,gCAYjBA,GAZiB,sCGwBdS,CAAWvE,EAAKtF,OAAOwJ,MAAK,SAAAM,GAExBxE,EAAKyE,QAAUD,EACfrB,EAAQnD,MAEPqE,OAAM,SAAAC,GACHzI,QAAQC,IAAI,kCAAmCwI,UAO3D,6BACI,yBAAKI,GAAG,UACJ,4BAAKlI,EAAOhC,GACZ,0BAAMmK,SAzDI,SAACC,GAKnB,OAJAA,EAAEC,iBAIMrI,EAAOT,cACX,IAAK,SACD,IAAI+I,EACFjC,EAAWkC,cAAcC,QAAQ,MAAO,MAAQxI,EAAO/B,EAAEsK,cAAcC,QAAQ,MAAO,IACxF,MAEJ,QAASF,EAAgB9K,OAAO6I,KAAgB7I,OAAOwC,EAAO/B,GAElE,GAAIqK,EAAe,CAAC,IAAD,EACwB5D,EAAW4B,EAAYtG,EAAOiI,SAAW,KAAM,EAAG,GAD1E,mBACVvB,EADU,KACKI,EADL,KAEfL,EAAkBC,GAClBM,QACG,CAAC,IAAD,EACgCtC,EAAW4B,EAAYtG,EAAOiI,SAAW,KAAM,EAAG,GADlF,mBACFvB,EADE,KACaI,EADb,KAGHL,EAAkBC,GAClBG,EAAYR,EAAYS,GAE5B,GAAqB,gBAAjB9G,EAAO9B,MAAyB,CAChC,IAAMuK,EAAS,CACXC,SAAU1I,EAAO9B,MACjByK,YAAa7B,GAEjBS,IAAMqB,IAAI,qBAAsBH,GAC3Bf,MAAK,SAAAC,GAAG,OAAItI,QAAQC,IAAI,oCAAqCqI,MAC7DE,OAAM,SAAAC,GAAG,OAAIzI,QAAQC,IAAI,kCAAmCwI,WAC5DzI,QAAQC,IAAI,kCA2BT,2BAAOsG,UAAU,YACb7I,KAAK,OACL8L,KAAK,YACLC,MAAOzC,EACP0C,SAjEE,SAACX,GACnB7B,EAAiB6B,EAAEY,OAAOF,UAiEd,4BAAQ/L,KAAK,UAAb,WAEJ,2BAAIiD,EAAOyD,qBAAuB,IACjCwD,EACD,8BAEHd,EACG,yEACA,kBAAC,EAAD,U,2CC3DD8C,G,6MA1BX5D,MAAQ,CAAC6D,YAAY,EAAOvJ,SAAS,oBAAqBwJ,OAAO,M,EACjEC,YAAc5L,OAAO,EAAK6L,MAAMC,SAAW,EAAI,kBAAoB,mB,EAGnEC,YAAc,WACV,EAAKC,SAAS,CAACN,YAAY,EAAK7D,MAAM6D,c,EAE1CO,SAAW,WACP,IAAMjG,EAAO,EAAK6F,MAAMK,SACxB,EAAKF,SAAS,CAAC7J,SAAS6D,EAAKxF,EAAGmL,OAAO3F,EAAKvF,EAAGiL,YAAW,K,yEAKhC,sBAAtBS,KAAKtE,MAAM1F,UAAiCgK,KAAKF,WACrD,IAAMG,EAAe,4BAAQhE,UAAU,YAAYD,QAASgE,KAAKJ,aAA5C,eACfM,EAAS,wBAAIjE,UAAU,SAASD,QAASgE,KAAKJ,aAAeI,KAAKtE,MAAM8D,QAC9E,OACI,yBAAKvD,UAAW+D,KAAKP,aACjB,wBAAIxD,UAAU,SAASD,QAASgE,KAAKF,UAAYE,KAAKtE,MAAM1F,UAC3DgK,KAAKtE,MAAM6D,WAAaW,EAASD,O,GArBxBE,IAAMC,WC4BjBC,GAzBG,SAACX,GACf,IAAIY,EAAQ,GAcZ,OAboBC,uBAAa,EAAGb,EAAMc,UAE9BC,SAAQ,SAACzI,EAAGjB,GACpB,IAAI2J,EAAa1I,EAAE2I,MAAM,KACzBjL,QAAQC,IAAI,iCAAkCqC,EAAG0I,GACjDJ,EAAMM,KACF,kBAAC,GAAD,CACIb,OAAU,kBAAMxF,EAAQmG,EAAW,GAAIA,EAAW,KAClDf,QAAS,GAAK5I,EACdmF,IAAKnF,QAKb,6BACI,sDACA,yEACA,oFACCuJ,I,mBCiBE7E,gBANS,SAACC,GACrB,MAAO,CACHmF,eAAgBnF,EAAMmF,kBAIU,CAAEC,YjB1Bf,SAACC,GACxB,MAAO,CAAE3N,KAhBe,eAgBK2N,MAAMA,IiByBgBC,UjBtB9B,SAACC,GACtB,MAAO,CAAE7N,KAnBa,aAmBK6N,SiBqBmC/N,sBAAnDuI,EApCK,SAAC,GAAoE,IAAlEoF,EAAiE,EAAjEA,eAAgBC,EAAiD,EAAjDA,YAAaE,EAAoC,EAApCA,UAAW9N,EAAyB,EAAzBA,mBACrDgO,EAAY7N,EAAOwD,KAAI,SAAAxC,GAAC,OAC1B,kBAAC8M,GAAA,EAAD,CACInF,QAAS,kBAAM8E,EAAYzM,IAC3B+M,QAASP,EAAeQ,SAAShN,GAAK,UAAY,YAClD6H,IAAK7H,GAAIA,MAIXyF,EAAsB+G,EAAe5M,OAAS,EAC5C,0CAAe,kBAACkN,GAAA,EAAD,CAAQC,QAAQ,OAC3BpF,QAAS,kBAAM9I,EAAmB,uBADvB,wBAGf,oEAER,OACI,6BACI,6CACA,yGACA,kBAACoO,GAAA,EAAD,KACI,kBAACH,GAAA,EAAD,CAAQnF,QAAS,kBAAMgF,EAAU,SAAjC,cACA,kBAACG,GAAA,EAAD,CAAQnF,QAAS,kBAAMgF,EAAU,UAAjC,cAEHlH,EACD,qDAA2B+G,EAAeU,KAAK,MAA/C,KACA,kBAACD,GAAA,EAAD,CAAa/C,GAAG,YAAYiD,UAAQ,GAAGN,O,UCiBpCzF,eAAQ,KAAM,CAAEvI,qBAAoBuO,UlBZ1B,SAACvC,EAAMpE,GAC5B,MAAO,CAAE1H,KA/Ba,aA+BKsO,SAAUxC,EAAMvC,WAAW7B,KkBW3CW,EA1CG,SAAC,GAAuC,IAArCvI,EAAoC,EAApCA,mBAAoBuO,EAAgB,EAAhBA,UAgBrC,OACI,yBAAKlD,GAAG,aACJ,6BACI,kBAAC4C,GAAA,EAAD,CAAQC,QAAQ,OAAOpF,QAAS,kBAAI9I,EAAmB,cAAvD,uDAIJ,kBAACyO,GAAA,EAAD,CAAMnD,SAtBO,SAACoD,GAClBA,EAAMlD,iBACN,IAAMI,EAAS,CACX4C,SAAWE,EAAMvC,OAAOwC,SAAS1C,MACjC2C,SAAUF,EAAMvC,OAAOyC,SAAS3C,OAEpCzJ,QAAQC,IAAI,aAAcmJ,GAC1BlB,IAAMqB,IAAI,eAAgBH,GACrBf,MAAK,SAAAC,GACFtI,QAAQC,IAAI,6CAA8CqI,EAAI+D,QAC9DrM,QAAQC,IAAI,yCAA0CqI,EAAIC,KAAKyD,SAAU1D,EAAIC,KAAKtB,YAClF8E,EAAUzD,EAAIC,KAAKyD,SAAU1D,EAAIC,KAAKtB,eAEzCuB,OAAM,SAAAC,GAAG,OAAIzI,QAAQC,IAAI,+BAAgCwI,QAUtD,kBAACwD,GAAA,EAAKK,MAAN,KACI,kBAACL,GAAA,EAAKM,MAAN,kBACA,kBAACN,GAAA,EAAKO,QAAN,CAAc9O,KAAK,OAAO8L,KAAK,WAAWiD,YAAY,YAAYC,UAAQ,IAC1E,kBAACT,GAAA,EAAKU,KAAN,CAAWpG,UAAU,cAArB,iEAIJ,kBAAC0F,GAAA,EAAKK,MAAN,KACI,kBAACL,GAAA,EAAKM,MAAN,iBACA,kBAACN,GAAA,EAAKO,QAAN,CAAc9O,KAAK,WAAW8L,KAAK,WAAWiD,YAAY,WAAWC,UAAQ,KAErF,kBAACjB,GAAA,EAAD,CAAQC,QAAQ,YAAYpF,QAAS,kBAAI9I,EAAmB,cAA5D,UACA,kBAACiO,GAAA,EAAD,CAAQC,QAAQ,UAAUhO,KAAK,UAA/B,cCmBGqI,I,MAAAA,aAXS,SAACC,GACvB,MAAO,CACLgG,SAAUhG,EAAM4G,OAChB3F,WAAYjB,EAAMiB,WAClB4F,SAAU7G,EAAMrF,OAChBmM,aAAc9G,EAAM8G,aACpB3B,eAAgBnF,EAAMmF,kBAKc,CAAE3N,sBAA3BuI,EAjDH,SAAC,GAE+C,IADxDiG,EACuD,EADvDA,SAAU/E,EAC6C,EAD7CA,WAAY4F,EACiC,EADjCA,SACtBC,EAAuD,EAAvDA,aAAc3B,EAAyC,EAAzCA,eAAgB3N,EAAyB,EAAzBA,mBAC1BuP,EAAgB,kBAACC,EAAA,EAASC,KAAV,CAAe3G,QAAS,kBAAI9I,EAAmB,eAA/C,sBAChB0P,EAAoB,kBAACF,EAAA,EAASC,KAAV,CAAe3G,QAAS,kBAAI9I,EAAmB,cAA/C,iBACpB2P,EAAqB,kBAACH,EAAA,EAASC,KAAV,CAAe3G,QAAS,kBAAI9I,EAAmB,iBAA/C,iBAGrB4P,GAFc,kBAACJ,EAAA,EAASC,KAAV,CAAe3G,QAAS,kBAAI9I,EAAmB,WAA/C,qBAEW,KAAbwO,EAAkB,aAAeA,GAanD,OACE,yBAAKzF,UAAU,OACb,yBAAKA,UAAU,UACb,kBAAC8G,EAAA,EAAD,CAAgBxE,GAAG,yBACjByE,MAAM,YAAY/G,UAAU,WAAWgH,KAAK,MAC1B,aAAjBT,EAA8BC,EAAgBG,EAC9CC,GAGH,yDACA,uBAAG5G,UAAU,kBAAmB6G,EAAhC,KAA6CnG,EAA7C,QAA8D4F,EAAShO,MAAvE,KAAgFgO,EAASjE,SAAS,OAAlG,OArBa,WACjB,OAAQkE,GACN,IAAK,WAAa,OAAO,kBAAC,EAAD,MACzB,IAAK,YAAc,OAAO,kBAAC,GAAD,CAAWhC,SAAU,CAAC+B,EAAShO,SACzD,IAAK,oBAAsB,OAAO,kBAAC,GAAD,CAAWiM,SAAUK,IACvD,IAAK,cAAgB,OAAO,kBAAC,GAAD,MAC5B,IAAK,QAAU,OAAO,kBAAC,GAAD,MACtB,QAAU,OAAO,kBAAC,EAAD,OAgBfqC,QCjCFC,GAAmB,CAAC,KAAM,KAAM,MAEhCC,GAAe,CACjBzG,WAAY,KACZ2F,OAAQ,GACRe,cAAc,EACdhN,OATS,CACThC,EAAG,+DACHC,EAAG,IAAKC,MAAM,eAQdiI,eAAe,EACfE,WAAY,GACZmE,eAAe,YAAKxN,GACpBoJ,aAAc,GACdd,cAAewH,GACfX,aAAc,YAGZc,GAAY,SAACC,EAAKC,GACpB,OAAOD,EAAIlC,SAASmC,GAAMD,EAAI9L,QAAO,SAAAgH,GAAC,OAAIA,IAAM+E,KAAzC,sBAAmDD,GAAnD,CAAwDC,KAqCpDC,GAlCC,WAAmC,IAAlC/H,EAAiC,uDAAzB0H,GAAcM,EAAW,uCAE9C,OADAhO,QAAQC,IAAI,uBAAwB+N,GAC5BA,EAAOtQ,MACX,IpBlC0B,qBoBkCA,OAAO,eAAIsI,EAAX,CAAkBgB,WAAWgH,EAAO7H,UAC9D,IpBlCoB,eoBkCA,OAAO,eAAIH,EAAX,CAAkBmF,eAAeyC,GAAU5H,EAAMmF,eAAgB6C,EAAO3C,SAC5F,IpBlCkB,aoBkCA,OAAO,eAAKrF,EAAZ,CACdmF,eAA8B,QAAd6C,EAAOzC,KAAP,YAA0B5N,GAAU,KAExD,IpB/BwB,mBoB+BA,OAAO,eAAIqI,EAAX,CAAkBc,eAAc,IACxD,IpBnC2B,sBoBmCD,OAAO,eAAId,EAAX,CAAkBiB,WAAW+G,EAAO/G,aAC9D,IpBtCiB,YoBsCA,OAAO,eACjBjB,EADU,CAEbrF,OAAOqN,EAAOrN,OACdmG,eAAe,EACfb,cAAe+H,EAAOrN,OAAOR,WAAasN,GAC1CzG,WAAW,GAAID,aAAa,KAChC,IpB3CqB,gBoB2CA,OAAO,eACrBf,EADc,CAEjBe,aAAa,GAAD,mBAAKf,EAAMe,cAAX,CAAyBiH,EAAOtG,cAC5CV,WAAY,GACZrG,OAAO,eAAKqF,EAAMrF,OAAZ,CAAoBiI,QAASoF,EAAOvG,oBAE9C,IpB/CkB,aoB+CA,OAAO,eAClBzB,EADW,CAEd4G,OAAOoB,EAAOhC,SAAU/E,WAAW+G,EAAO/G,WAC1C6F,aAAa,WAAYa,cAAa,IAE1C,IpBjDqB,gBoBiDA,OAAO,eAAI3H,EAAX,CAAkBgB,WAAWhB,EAAMgB,WAAWgH,EAAO7H,UAC1E,IpBjDqB,gBoBiDA,OAAO,eAAIH,EAAX,CAAkBgB,WAAWhB,EAAMgB,WAAWtG,MAAM,GAAI,KAC7E,IpBrD4B,uBoBqDA,OAAO,eAAIsF,EAAX,CAAkB8G,aAAakB,EAAOvQ,YAClE,QAAU,OAAOuI,ICjDLiI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRNC,IAASC,OACL,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,KAAW,kBAAC,GAAD,OACxCC,SAASC,eAAe,SDqHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1G,MAAK,SAAA2G,GACjCA,EAAaC,iB,odEnINxO,EAAgB,SAACoN,GAAD,OAASA,EAAIzP,KAAKC,MAAMD,KAAKE,SAASuP,EAAItP,UAC1DuC,EAAY,SAACE,GAAD,OAAO5C,KAAKC,MAAMD,KAAKE,SAAS0C,IAE5C6J,EAAe,SAAC7J,EAAG6M,GAC5B,GAAIA,EAAItP,SAAWyC,EAAI,OAAO6M,EAC9B,GAAIA,EAAItP,OAASyC,EAAI,OAAOkO,EAAqBlO,EAAG6M,GAEpD,IADA,IAAIsB,EAAO,GACJA,EAAK5Q,OAAOyC,GACfmO,EAAI,sBAAOA,GAAP,YAAgBtB,IAExB,OAAOsB,EAAKzO,MAAM,EAAGM,IAGZkO,EAAuB,SAAClO,EAAG6M,GACpC,IAAIsB,EAAO,GACX,GAAItB,EAAItP,QAAQyC,EAAI,OAAO6M,EAC3B,KAAOsB,EAAK5Q,OAAOyC,GACfmO,EAAKjE,KAAKzK,EAAcoN,EAAI9L,QAAO,SAAAX,GAAC,OAAqB,IAAnB+N,EAAKnN,QAAQZ,QAEvD,OAAO+N,GAGEC,EAAS,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC9DC,EAAc,CAAC,EAAG,EAAG,EAAG,GAExBC,EAAc,SAAChN,GAAD,OAAuB7B,EAAV,UAAN6B,EAA8B+M,EAA6BD,IAChF/L,EAAiB,SAACrC,EAAGsB,GAAJ,OAClB4M,EAAqBlO,EADa,UAANsB,EACJ+M,EAAuCD,K","file":"static/js/main.58e1e533.chunk.js","sourcesContent":["export const UPDATE_USER_ANSWER = 'UPDATE_USER_ANSWER';\r\nexport const TOGGLE_TOPIC = \"TOGGLE_TOPIC\";\r\nexport const ALL_TOPICS = \"ALL_TOPICS\";\r\nexport const SET_NEW_Q = 'SET_NEW_Q';\r\nexport const USER_IS_WRONG = 'USER_IS_WRONG';\r\nexport const USER_RATING_CHANGES = 'USER_RATING_CHANGES';\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const CHANGE_ACTIVE_SCREEN = 'CHANGE_ACTIVE_SCREEN';\r\nexport const NEED_NEW_RATED_Q = 'NEED_NEW_RATED_Q';\r\nexport const KEYPAD_NUMBER = 'KEYPAD_NUMBER';\r\nexport const KEYPAD_DELETE = 'KEYPAD_DELETE';\r\n\r\nexport const UpdateUserAnswer = (newAnswer) => {\r\n    return { type: UPDATE_USER_ANSWER, payload: newAnswer}\r\n}\r\n\r\nexport const ToggleTopic = (topic) => {\r\n    return { type: TOGGLE_TOPIC, topic:topic }\r\n}\r\n\r\nexport const AllTopics = (mode) => {\r\n    return { type: ALL_TOPICS, mode }\r\n}\r\n\r\nexport const SetNewQ = (newQuAndA) => {\r\n    return { type:SET_NEW_Q, quAndA: newQuAndA }\r\n}\r\n\r\nexport const UserIsWrong = (userAnswer, newQuAndARating) => {\r\n    return { type:USER_IS_WRONG, wrongAnswer:userAnswer, newQuAndARating:newQuAndARating }\r\n}\r\n\r\nexport const UserRatingChanges = (newUserRating) => {\r\n    return { type: USER_RATING_CHANGES, userRating: newUserRating}\r\n}\r\n\r\nexport const LoginUser = (name, rating) => {\r\n    return { type: LOGIN_USER, userName: name, userRating:rating }\r\n}\r\n\r\nexport const ChangeActiveScreen = (newScreen) => {\r\n    return { type: CHANGE_ACTIVE_SCREEN, newScreen:newScreen }\r\n}\r\n\r\nexport const NeedNewRatedQ = () => {\r\n    return {type: NEED_NEW_RATED_Q}\r\n}\r\n\r\nexport const Keypad_number = (n) => {\r\n    return {type:KEYPAD_NUMBER, payload:n}\r\n}\r\n\r\nexport const Keypad_delete = () => {\r\n    return {type:KEYPAD_DELETE}\r\n}","export const metricConversion = 'metricConversion';\r\nexport const TimeConversion = 'TimeConversion';\r\nexport const MultiplyNumbers = 'MultiplyNumbers';\r\nexport const Vocab = 'Vocab';\r\nexport const Ratio = 'Ratio';\r\nexport const Algebra01 = 'Algebra01'\r\n\r\n// Aiming for QCodes which the app can parse to produce a new question of the same type\r\n// but with different numbers.\r\n\r\n// Format will be a string with format QType-subQType\r\n// 'metricConversion-2', or 'Algebra01-expandBracket'\r\n// whereas: just 'metricConversion' (or 'metricConversion-0') \r\n// should allow for a random choice of subQType\r\n\r\nexport const QTypes = [\r\n    metricConversion, TimeConversion, \r\n    MultiplyNumbers, \r\n    Vocab, \r\n    Ratio, \r\n    Algebra01\r\n];","import { metricConversion } from './QTypes';\r\n\r\nconst conversionPairs = [\r\n  'zeroQ',\r\n    {large:['metres', 'm'], small:['centimetres', 'cm'], ratio:100},\r\n    {large:['metres', 'm'], small:['millimetres', 'mm'], ratio:1000},\r\n    {large:['kilometres', 'Km'], small:['metres', 'm'], ratio:1000},\r\n\r\n    {large:['grams', 'g'], small:['milligrams', 'mg'], ratio:1000},\r\n    {large:['kilograms', 'Kg'], small:['grams', 'g'], ratio:1000},\r\n\r\n    {large:['litres', 'L'], small:['centilitres', 'cL'], ratio:100},\r\n    {large:['litres', 'L'], small:['millimetres', 'mL'], ratio:1000},\r\n]\r\n\r\nconst MetricConversionQ = (subQType) => {\r\n    var Qtype = Number(subQType) || Math.floor(Math.random()*(conversionPairs.length-1))+1;\r\n    //console.log(metricConversion+'-'+Qtype);\r\n    var convFacts = conversionPairs[Qtype];\r\n    let forward = Math.random() < 0.5 ? true : false,\r\n        extraLarge = Math.random() < 0.25 ? 1 : Math.random() < 0.8 ? 10 : 100;\r\n    let small = Math.floor(Math.random()*convFacts.ratio)*extraLarge,\r\n        large = small/convFacts.ratio;\r\n    return forward ? \r\n      {q:\"Convert \"+small+convFacts.small[1]+\" to \"+convFacts.large[0], \r\n        a:''+large, QType:metricConversion+'-'+Qtype} : \r\n      {q:\"Convert \"+large+convFacts.large[1]+\" to \"+convFacts.small[0], \r\n        a:''+small, QType:metricConversion+'-'+Qtype} \r\n}\r\n\r\nexport default MetricConversionQ;\r\n","import { TimeConversion } from './QTypes';\r\n\r\n// so ohr 2min 28sec => 148sec\r\nconst hms2sec = (h, m, s) => h*3600+m*60+s\r\n\r\nconst conversionPairs = [\r\n    'null',\r\n    'secMin', 'secMinHr',\r\n    //'minHr', 'minHrDays',\r\n    //'hrDays', 'hrWeeks', 'hrDaysWeeks'\r\n]\r\n\r\nconst rnd = (outof) => Math.floor(Math.random()*outof);\r\n\r\nconst TimeConversionQ = (subType) => {\r\n    var subQType = Number(subType) || Math.floor(Math.random()*(conversionPairs.length-1))+1;\r\n    /* direction of conversion decided by forward variable\r\n    * before composing quAndA: parts are labeled left, middle and right\r\n    * so 1min 78sec will give\r\n    * LMR: 138, 1, 78\r\n    * and the Qs\r\n    * 138 seconds is 1min and how many seconds?\r\n    * 138 seconds is 18seconds and how many minutes?\r\n    * Convert 1min 78sec into seconds\r\n    * because answer should be a number\r\n    */\r\n\r\n    // at the moment, I don't like the need for answers with unspecified format\r\n    // So I am setting forward to false so it never asks for answer in form 2hr 3min 5sec\r\n    let forward = Math.random() < 0 ? true : false;\r\n    var left, right, leftUnits, rightUnits;\r\n    var sec = rnd(60), min = rnd(60), hr = rnd(24);\r\n    switch (conversionPairs[subQType]) {\r\n        case 'secMin' : {\r\n            if (min===0) {min++}\r\n            var totalSec = hms2sec(0, min, sec);\r\n            left =''+totalSec; right = min+'min '+sec+'sec';\r\n            leftUnits = 'seconds'; rightUnits = 'minutes and seconds';\r\n            break\r\n        }\r\n        case 'secMinHr' : {\r\n            totalSec = hms2sec(hr, min, sec);\r\n            left = ''+totalSec; right=hr+'hr '+min+'min '+sec+'sec';\r\n            leftUnits='seconds'; rightUnits = 'hours minutes and seconds';\r\n            break\r\n        }\r\n        default: return { q:'TimeConversion default Q', a:'625' }\r\n    }\r\n    subQType = TimeConversion+'-'+subQType;\r\n    console.log(subQType);\r\n    return forward ? \r\n        { q:'Convert '+left+leftUnits+' to '+rightUnits, \r\n          a:right, QType:subQType, answerFormat:'string', extraKeys:['hrs', 'min', 'sec'] } :\r\n        { q:'Convert '+right+' to '+leftUnits,\r\n          a:left, QType:subQType, answerFormat:'number', extraKeys:['hrs', 'min', 'sec'] }\r\n}\r\n\r\nexport default TimeConversionQ\r\n","import { Vocab } from './QTypes';\r\n\r\nconst circleVocab = [\r\n    {q:'What do you call a line that goes from the edge of a circle, through the centre, to the other side?', \r\n     a:'diameter'},\r\n    {q:'What do you call a line from the centre of a circle to the edge of the circle?', a:'radius'},\r\n    {q:'What do you call a line that just touches the outside of a circle?', a:'tangent'},\r\n    {q:'What do you call a line that cuts across a circle, but not necessarily through the centre?', a:'chord'},\r\n    {q:'A chord cuts a circle into two ...?', a:'segments'},\r\n    {q:'Two radii (radiuses) cut out a piece like a slice of pie, called a ...?', a:'sector'}\r\n];\r\n\r\nconst triangleVocab = [\r\n    {q:'A triangle with all sides equal is described as ...?', a:'equilateral'},\r\n    {q:'A triangle with exactly two sides equal is described as ...?', a:'isosceles'},\r\n    {q:'A triangle with all sides of different length is described as ...?', a:'scalene'},\r\n    {q:'The long side of a right-angled triangle is called the ...?', a:'hypotenuse'}\r\n];\r\n\r\nconst angleVocab = [\r\n    {q:'An angle which is less than 90 degrees is described as ...?', a:'acute'},\r\n    {q:'An angle which is exactly 90 degrees is described as ...?', a:'right'},\r\n    {q:'An angle which is more than 90 degrees is described as ...?', a:'obtuse'},\r\n    {q:'An angle which is more than 180 degrees is described as ...?', a:'reflex'},\r\n    {q:'Two angles which add up to 180 degress are described as ...?', a:'supplementary'},\r\n    {q:'Two angles which add up to 90 degress are described as ...?', a:'complementary'},\r\n    {q:'Lines which point in the same direction and never meet are described as ...?', a:'parallel'}\r\n]\r\n\r\nconst VocabQList = [...circleVocab, ...triangleVocab, ...angleVocab];\r\n\r\nconst VocabQ = () => {\r\n    var question = Math.floor(Math.random()*VocabQList.length);\r\n    return {...VocabQList[question], answerFormat:'string', QType:Vocab}\r\n}\r\n\r\nexport default VocabQ;\r\n","import { Ratio } from './QTypes';\r\nimport {RandomElement} from './RandomFuncs';\r\n\r\nconst subQTypes = [\r\n    null, 'simplify', 'mapForm', 'keepRatio', 'share', 'givenDiff'\r\n]\r\n\r\nconst RatioQ = (subType) => {\r\n    const subQType = subType || RandomElement(subQTypes.slice(1));\r\n    var quAndA = { QType: Ratio+'-'+subQType, extraKeys:[':', ':', ':'] }\r\n\r\n    switch (subQType) {\r\n        case 'simplify' : {quAndA.q=\"Simplify 12:16\"; quAndA.a=\"3:4\";quAndA.answerFormat=\"string\"; break}\r\n        case 'mapForm' : {quAndA.q=\"Express 16:12 in the form 1:n\"; quAndA.a=\"1:0.75\"; quAndA.answerFormat=\"string\"; break}\r\n        case 'keepRatio' : {quAndA.q=\"The ratio of men to women waiting at a bus stop is 3:2. If there are 6 men, then how many women are there?\"; quAndA.a=\"4\"; break}\r\n        case 'share' : {quAndA.q=\"Share £180 in the ratio 3:5:4, giving your answer as a ratio\"; quAndA.a=\"45:75:60\"; quAndA.answerFormat=\"string\"; break}\r\n        case 'givenDiff' : {quAndA.q=\"Alice and Bob share some money in the ratio 7:5 Alice gets £10 more than Bob. How much money did they share?\"; quAndA.a=\"60\"; break}\r\n        default : {quAndA.q=\"Ratio default Q\"; quAndA.a=\"42\"}\r\n    }\r\n    \r\n    console.log(quAndA);\r\n    return quAndA\r\n}\r\n\r\nexport default RatioQ;","const { RandomInt, RandomElement } = require('../RandomFuncs');\r\nexport const Coeffs = (n) => Array(n).fill(9).map(RandomInt)\r\n        .map((x, i)=>{\r\n            if (i===0) {return x+1}\r\n            return RandomInt(2) === 1 ? x+1 : -(x+1)\r\n        });\r\nexport const threeVars = (n) => Array(n).fill(['a', 'b', 'c']).map(RandomElement);\r\nexport const twoVars = (n) => Array(n).fill(['a', 'b']).map(RandomElement);\r\nexport const oneVar = (n) => Array(n).fill(RandomElement(['a', 'b', 'c']));","import { Coeffs, threeVars, twoVars, oneVar } from './CoeffsAndVars';\r\nconst { RandomInt } = require('../RandomFuncs');\r\n\r\n\r\n// to test above, which are random so can't be tested with jest\r\n// for (var i = 0; i<10; i++) {\r\n//     console.log(Coeffs(4), Coeffs(6));\r\n//     console.log(threeVars(4), threeVars(7));\r\n//     console.log(twoVars(3), twoVars(6));\r\n//     console.log(oneVar(8), oneVar(2));\r\n// }\r\n\r\n\r\n// parameters are coefficients and the variable names\r\n// output is an expression such as 6a+7c+3b-9a+4c\r\nexport const combine = (c, v) => {\r\n    var l = Math.min(c.length, v.length);\r\n    if (l === 0 ) {return null}\r\n    var exp = '';\r\n    for (var i = 0; i<l; i++) {\r\n        if (c[i]!== 0) {\r\n            exp += c[i] < 0 ? '-' : exp.length > 0 ? '+' : '';\r\n            var val = Math.abs(c[i]);\r\n            exp += val === 1 && v[i] !== '' ? '' : val;\r\n            exp += v[i];\r\n        }\r\n    }\r\n    // console.log('combining ', c, v, 'to get', exp)\r\n    return exp === '' ? '0' : exp;\r\n}\r\n\r\n// parameters are coefficients and the variable names\r\n// output is the simplified form of the expression given by combine\r\nexport const SimplifyAddSub = (c, v) => {\r\n    var varList = v.filter((x, i)=> v.indexOf(x) === i).sort();\r\n    const collectLikeTerms = (a) => c.reduce((acc, val, i) => v[i]===a?acc+val:acc, 0);\r\n    return combine(varList.map(collectLikeTerms), varList);\r\n}\r\n\r\n// expression in Q has n terms\r\n// at the moment, none of them are simply numbers\r\nexport const simpAddSubQ = (n) => {\r\n    var coeffs = Coeffs(n);\r\n    var t = RandomInt(4); // to choose how many variables to put into Q\r\n    var letters = t<=1? threeVars(n) : t===2 ? twoVars(n) : oneVar(n);\r\n    return {\r\n        q : 'Simplify '+combine(coeffs, letters),\r\n        a : SimplifyAddSub(coeffs, letters)\r\n    } \r\n}\r\n\r\n//console.log(Coeffs(), threeVars());","import { Coeffs } from './CoeffsAndVars';\r\nimport { RandomInt, distinctPrimes } from '../RandomFuncs';\r\nimport { combine } from './SimplifyAddSub';\r\n\r\nexport const Brackets1 = (outer, coeffs, varNames) => {\r\n    var inner = combine(coeffs, varNames)\r\n    return outer + '(' + inner + ')'\r\n}\r\n\r\nconst multiply = (out, inner) => inner.map(x => out * x)\r\nexport const Expand1 = (outer, coeffs, varNames) => combine(multiply(outer, coeffs), varNames);\r\n\r\nexport const Expand1Q = () => {\r\n    var co = Coeffs(2), mult = RandomInt(9) + 2;\r\n    return {\r\n        q: 'Expand ' + Brackets1(mult, co, ['a', '']),\r\n        a: Expand1(mult, co, ['a', ''])\r\n    }\r\n}\r\nexport const FactoriseQ = (level) => {\r\n    var co = [];\r\n    var [p1, p2] = distinctPrimes(2, 'small');\r\n    switch (level) {\r\n        case 1: { co = RandomInt(2) === 0 ? [1, p1] : [p1, 1]; break }\r\n        case 2: { co = RandomInt(2) === 0 ? [p1, p2] : [p1, -p2]; break }\r\n        default: { console.log('level unknown in FactoriseQ:', level); co = [3, 2] }\r\n    }\r\n    var out = RandomInt(9) + 2;\r\n    return {\r\n        q: 'Factorise ' + Expand1(out, co, ['a', 'b']),\r\n        a: Brackets1(out, co, ['a', 'b'])\r\n    }\r\n}\r\n\r\n// brackets always contain same variable names in same order\r\nexport const Expand2 = (out1, co1, pm, out2, co2, varNames) => {\r\n    var first = multiply(out1, co1), second = multiply(out2, co2);\r\n    var final = first.map((x, i) => pm === '+' ? x + second[i] : x - second[i]);\r\n    return combine(final, varNames)\r\n}\r\n\r\nexport const Expand2SimplifyQ = () => {\r\n    var c1 = Coeffs(2), c2 = Coeffs(2);\r\n    var o1 = RandomInt(9) + 2, o2 = RandomInt(9) + 2;\r\n    var pm = RandomInt(2) === 0 ? '+' : '-';\r\n    var vs = ['a', 'b']\r\n    return {\r\n        q: 'Expand and simplify ' + Brackets1(o1, c1, vs) + pm + Brackets1(o2, c2, vs),\r\n        a: Expand2(o1, c1, pm, o2, c2, vs)\r\n    }\r\n}","import { Algebra01 } from './QTypes';\r\nimport { RandomElement } from './RandomFuncs';\r\nimport { simpAddSubQ } from './AlgebraFuncs/SimplifyAddSub';\r\nimport { Expand1Q, Expand2SimplifyQ, FactoriseQ } from './AlgebraFuncs/ExpandBracket';\r\n\r\nconst subQTypes = [\r\n    null, 'simplifyAddSub', 'expandBracket', 'expand2Simplify', 'factorise1', 'factorise2'\r\n];\r\n\r\nconst Algebra01Q = (subType) => {\r\n    const subQType = subType || RandomElement(subQTypes.slice(1));\r\n    var quAndA = {\r\n        QType: Algebra01 + '-' + subQType,\r\n        extraKeys: ['a', 'b', 'c', '+', '-', '/'],\r\n    }\r\n    var newQ = {};\r\n    switch (subQType) {\r\n        case 'simplifyAddSub': {\r\n            newQ = simpAddSubQ(5);\r\n            quAndA.answerFormat = 'string';\r\n            quAndA.furtherInstructions = 'Give variables in alphabetical order. eg: 7+3a-2b'\r\n            break\r\n        }\r\n        case 'expandBracket': {\r\n            newQ = Expand1Q();\r\n            quAndA.answerFormat = 'string';\r\n            quAndA.furtherInstructions = 'Give variables in order of appearance in brackets';\r\n            break\r\n        }\r\n        case 'expand2Simplify' : {\r\n            newQ = Expand2SimplifyQ();\r\n            quAndA.answerFormat = 'string';\r\n            quAndA.furtherInstructions = 'Give variables in order of appearance in brackets';\r\n            break\r\n            \r\n        }\r\n        case 'factorise1' : {\r\n            newQ = FactoriseQ(1);\r\n            quAndA.answerFormat = 'string';\r\n            quAndA.furtherInstructions = 'Give variables in order of appearance';\r\n            quAndA.extraKeys = ['a', 'b', '(', '+', '-', ')'];\r\n            break\r\n        }\r\n        case 'factorise2' : {\r\n            newQ = FactoriseQ(2);\r\n            quAndA.answerFormat = 'string';\r\n            quAndA.furtherInstructions = 'Give variables in order of appearance';\r\n            quAndA.extraKeys = ['a', 'b', '(', '+', '-', ')'];\r\n            break\r\n        }\r\n        default: { newQ.q = 'default algebra01 Q'; newQ.a = 42 }\r\n    }\r\n    quAndA.q = newQ.q; quAndA.a = newQ.a;\r\n    return quAndA;\r\n}\r\n\r\nexport default Algebra01Q;","import { MultiplyNumbers } from './QTypes';\r\n\r\nconst subQTypes = [\r\n    'zeroQ',\r\n    'sq', 'cube', \r\n    //'twos', 'threes', 'fours', 'fives', 'sixes', 'sevens', 'eights', 'nines', 'tens',\r\n    'sqEnd5', 'sqEnd1',\r\n    'gridWhole'//, 'decimal'\r\n]\r\n\r\nexport const MultiplyNumberQ = (subQType) => {\r\n    var type = Number(subQType) || Math.floor(Math.random()*(subQTypes.length-1))+1;\r\n    console.log(MultiplyNumbers+'-'+type)\r\n    var a = Math.ceil(Math.random()*9)+1, \r\n        b = Math.ceil(Math.random()*9)+1,\r\n        c = Math.ceil(Math.random()*90)+10;\r\n    var returnable = {QType:MultiplyNumbers+'-'+type}\r\n    switch (subQTypes[type]) {\r\n        case 'sq': return {...returnable, q:'What is '+a+' squared?', a:''+(a*a)}\r\n        case 'sqEnd5': {\r\n            a = a*10+5;\r\n            return {...returnable, q:'What is '+a+' squared?', a:''+(a*a)}\r\n        }\r\n        case 'sqEnd1': {\r\n            a = a*10+1;\r\n            return {...returnable, q:'What is '+a+' squared?', a:''+(a*a)}\r\n        }\r\n        case 'cube': return {...returnable, q:'What is '+a+' cubed?', a:''+(a*a*a)}\r\n        case 'gridWhole': return {...returnable, q:'What is '+c+' times '+(a*b)+'?', a:''+(a*b*c) }\r\n        default: return { q:'MultiplyNumberQ default Q', a:'625' }\r\n    }\r\n}","import axios from 'axios';\r\n\r\nimport MetricConversionQ from './MetricConversion';\r\nimport TimeConversionQ from './TimeConversion';\r\nimport VocabQ from './VocabQ';\r\nimport RatioQ from './Ratio';\r\nimport Algebra01Q from './AlgebraQ';\r\nimport { MultiplyNumberQ } from './NumberOperations';\r\nimport { \r\n  metricConversion, TimeConversion, MultiplyNumbers, \r\n  Vocab, Ratio, Algebra01, \r\n  QTypes \r\n} from './QTypes';\r\n\r\n\r\nexport const GetNewQ = (QType, subQType) => {\r\n  //console.log('QType and subQType', QType, subQType)\r\n  var type = QType || QTypes[Math.floor(Math.random() * QTypes.length)];\r\n  var newQ;\r\n  switch (type) {\r\n    case metricConversion: { newQ = MetricConversionQ(subQType); break }\r\n    case MultiplyNumbers: { newQ = MultiplyNumberQ(subQType); break }\r\n    case TimeConversion: { newQ = TimeConversionQ(subQType); break }\r\n    case Vocab: { newQ = VocabQ(); break }\r\n    case Ratio: { newQ = RatioQ(subQType); break}\r\n    case Algebra01: {newQ = Algebra01Q(subQType); break}\r\n    default: return {\r\n      q: \"How many mathematicians does it take to change a light bulb?\",\r\n      a: \"1\", QType: 'giveDefault'\r\n    }\r\n  }\r\n  return newQ;\r\n}\r\n\r\nexport const getQRating = async (qType) => {\r\n  const toGet = { qType: qType };\r\n  var qRating = 1234;\r\n  await axios.get('/qratings/get1rating', { params: toGet })\r\n    .then(res => {\r\n      console.log('Axios get 1 rating:', res.data);\r\n      qRating = res.data.rating;\r\n    })\r\n    .catch(err => {\r\n      console.log('Axios Error getting rating for ', qType, err);\r\n      qRating = 1345;\r\n    });\r\n  return qRating;\r\n}\r\n","const transformRating = (rating) => 10**(rating/400);\r\n\r\n// in this, the result is from the point of view of player 1 (human) \r\n// who answered question with difficulty of rating2\r\n// howProvisional will be in [1, 10]\r\n// if the humans rating is very provisional (ie: 10) then rating1 changes by more\r\n// but the question's rating changes by little\r\nconst NewRatings = (rating1, rating2, result, howProvisional) => {\r\n    var r1=transformRating(rating1), r2 = transformRating(rating2);\r\n    // expected result for each player\r\n    var ratingSum = r1+r2;\r\n    var e1=r1/ratingSum, e2=r2/ratingSum;\r\n    // console.log('r1, e1', r1, e1)\r\n\r\n    var newR1 = rating1 + 32*howProvisional*(result - e1),\r\n        newR2 = rating2 + (32/howProvisional)*(1-result - e2);\r\n    \r\n    return [Math.floor(newR1), Math.floor(newR2)]\r\n}\r\n\r\nexport default NewRatings;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Keypad_number, Keypad_delete } from '../Reducers/actions';\r\n\r\nconst Keypad = ({ extraKeys, Keypad_number, Keypad_delete }) => {\r\n    const buttons1_9 = [...'123456789'].map(x => <button\r\n        onClick={() => Keypad_number(x)}\r\n        className=\"keypadButton\"\r\n        key={'keypad-button' + x}>{x}</button>);\r\n    const button0 = <button\r\n        onClick={() => Keypad_number('0')}\r\n        className=\"keypadButton\"\r\n        key='keypad-button0'>0</button>;\r\n    const buttonDP = <button\r\n        onClick={() => Keypad_number('.')}\r\n        className=\"keypadButton\"\r\n        key='keypad-buttonDP'>.</button>\r\n    const buttonDEL = <button\r\n        onClick={() => Keypad_delete()}\r\n        className=\"keypadButton\"\r\n        key='keypad-buttonDEL'>DEL</button>\r\n    var buttonCount = extraKeys.length === 6 ? 6 : 3\r\n    const extraButtons = extraKeys.slice(0, buttonCount).map((x, i) => <button\r\n        onClick={() => Keypad_number(x)}\r\n        className=\"keypadButton\"\r\n        key={'extra-keypad-button'+x+i}>{x}\r\n        </button>)\r\n    return (\r\n        <div className=\"keypad\">\r\n            <div>{buttons1_9.slice(0, 3)}</div>\r\n            <div>{buttons1_9.slice(3, 6)}</div>\r\n            <div>{buttons1_9.slice(6)}</div>\r\n            <div>{button0}{buttonDP}{buttonDEL}</div>\r\n            <hr />\r\n            {buttonCount > 0 ? extraButtons.slice(0, 3) : ''}\r\n            {buttonCount === 6 ? extraButtons.slice(3, 6) : ''}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {extraKeys : state.extraKeys4Pad}\r\n}\r\nexport default connect(mapStateToProps, { Keypad_number, Keypad_delete })(Keypad);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {\r\n    UpdateUserAnswer, UserRatingChanges,\r\n    SetNewQ, UserIsWrong, NeedNewRatedQ\r\n} from '../Reducers/actions';\r\nimport { GetNewQ, getQRating } from '../NewQs/GetNewQ';\r\nimport NewRatings from '../Ratings/Ratings';\r\nimport Keypad from '../components/Keypad';\r\n\r\nconst Question = ({\r\n    quAndA, userAnswer, userRating, wrongAnswers, needNewRatedQ,\r\n    UserRatingChanges, UpdateUserAnswer, SetNewQ, UserIsWrong, NeedNewRatedQ }) => {\r\n    const changeHandler = (e) => {\r\n        UpdateUserAnswer(e.target.value);\r\n    }\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        // allow answer like 1.70 when the required answer is 1.7\r\n        // converting to Number will do this\r\n        // but take care if questions types are included that need a string as an answer\r\n        switch (quAndA.answerFormat) {\r\n            case 'string': {\r\n                var userIsCorrect = \r\n                  userAnswer.toLowerCase().replace(/\\s/g, '') === quAndA.a.toLowerCase().replace(/\\s/g, '');\r\n                break\r\n            }\r\n            default: userIsCorrect = Number(userAnswer) === Number(quAndA.a)\r\n        }\r\n        if (userIsCorrect) {\r\n            var [newUserRating, newQuAndARating] = NewRatings(userRating, quAndA.QRating || 1500, 1, 1);\r\n            UserRatingChanges(newUserRating);\r\n            NeedNewRatedQ();\r\n        } else {\r\n            [newUserRating, newQuAndARating] = NewRatings(userRating, quAndA.QRating || 1500, 0, 1);\r\n            //console.log('QType, QRating, old, new:', quAndA.QType, quAndA.QRating, newQuAndARating);\r\n            UserRatingChanges(newUserRating);\r\n            UserIsWrong(userAnswer, newQuAndARating)\r\n        }\r\n        if (quAndA.QType !== 'giveDefault') {\r\n            const toPost = {\r\n                category: quAndA.QType,\r\n                ratingValue: newQuAndARating\r\n            }\r\n            axios.put('/qratings/new-data', toPost)\r\n                .then(res => console.log('Success while posting rating of Q', res))\r\n                .catch(err => console.log('Error while posting rating of Q', err));\r\n        } else { console.log('Did not post about default Q') }\r\n    }\r\n\r\n    const wrongAnswerList = wrongAnswers.map((x, i) =>\r\n        <p key={i}>{x} was wrong</p>)\r\n\r\n    useEffect(() => {\r\n        if (needNewRatedQ || quAndA.QType === 'giveDefault') {\r\n            var newQ = GetNewQ('', '');\r\n            //console.log('q.js, useEffect, newQ is: ', newQ);\r\n            getQRating(newQ.QType).then(promiseMessage => {\r\n                //console.log('getQRating in useEffect has promise:', promiseMessage);\r\n                newQ.QRating = promiseMessage;\r\n                SetNewQ(newQ);\r\n            })\r\n                .catch(err => {\r\n                    console.log('GetNewQ in useEffect has error:', err);\r\n                });\r\n        }\r\n    })\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"quAndA\">\r\n                <h2>{quAndA.q}</h2>\r\n                <form onSubmit={submitHandler}>\r\n                    <input className=\"answerbox\"\r\n                        type=\"text\"\r\n                        name=\"answerbox\"\r\n                        value={userAnswer}\r\n                        onChange={changeHandler} />\r\n                    <button type=\"submit\">Submit</button>\r\n                </form>\r\n                <p>{quAndA.furtherInstructions || ''}</p>\r\n                {wrongAnswerList}\r\n                <br />\r\n            </div>\r\n            {needNewRatedQ ?\r\n                <p>Fetching the rating for a new question....</p> :\r\n                <Keypad />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        quAndA: state.quAndA,\r\n        needNewRatedQ: state.needNewRatedQ,\r\n        wrongAnswers: state.wrongAnswers,\r\n        userAnswer: state.userAnswer,\r\n        userRating: state.userRating\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    UpdateUserAnswer, UserRatingChanges, SetNewQ, UserIsWrong, NeedNewRatedQ\r\n})(Question);","import React from 'react';\r\n\r\nclass QWithReveal extends React.Component {\r\n    state = {showAnswer: false, question:'dummy classroom Q', answer:'42'}\r\n    quandaClass = Number(this.props.rowType) % 2 ? \"quandaBlock-odd\" : \"quandaBlock-even\";\r\n    \r\n    \r\n    handleClick = () => {\r\n        this.setState({showAnswer:!this.state.showAnswer})\r\n    }\r\n    refreshQ = () => {\r\n        const newQ = this.props.freshQ();\r\n        this.setState({question:newQ.q, answer:newQ.a, showAnswer:false})\r\n    }\r\n\r\n    \r\n    render() {\r\n        if (this.state.question==='dummy classroom Q') {this.refreshQ()}\r\n        const RevealButton = <button className=\"revealBtn\" onClick={this.handleClick}>Show answer</button>\r\n        const Answer = <h2 className=\"aBlock\" onClick={this.handleClick} >{this.state.answer}</h2>; \r\n        return (\r\n            <div className={this.quandaClass}>\r\n                <h2 className=\"qBlock\" onClick={this.refreshQ} >{this.state.question}</h2>\r\n                {this.state.showAnswer ? Answer : RevealButton}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default QWithReveal;","import React from 'react';\r\nimport QWithReveal from './QWithReveal';\r\nimport {GetNewQ} from '../NewQs/GetNewQ';\r\nimport { elementsFrom } from '../NewQs/RandomFuncs'\r\n\r\nconst ClassRoom = (props) => {\r\n    var qList = [];\r\n    const typesToShow = elementsFrom(5, props.typeList);\r\n    \r\n    typesToShow.forEach((t, i) =>  {\r\n        var QTypeSplit = t.split('-');\r\n        console.log('classroom is looking for qType', t, QTypeSplit);\r\n        qList.push(\r\n            <QWithReveal \r\n                freshQ = {() => GetNewQ(QTypeSplit[0], QTypeSplit[1])}\r\n                rowType={'' + i} \r\n                key={i} />\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <h2>This is the class room</h2>\r\n            <h3>Where you simply click to see the answers</h3>\r\n            <p>(Click on a question to get another of the same type)</p>\r\n            {qList}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClassRoom;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ButtonGroup, Button } from 'react-bootstrap';\r\nimport { QTypes } from '../NewQs/QTypes';\r\nimport { ToggleTopic, AllTopics, ChangeActiveScreen } from '../Reducers/actions';\r\n\r\nconst TopicSelect = ({ selectedTopics, ToggleTopic, AllTopics, ChangeActiveScreen }) => {\r\n    const qTypeList = QTypes.map(q =>\r\n        <Button\r\n            onClick={() => ToggleTopic(q)}\r\n            variant={selectedTopics.includes(q) ? \"success\" : \"secondary\"}\r\n            key={q}>{q}\r\n        </Button>\r\n    );\r\n\r\n    const furtherInstructions = selectedTopics.length > 0 ? \r\n            <p>When ready: <Button variant=\"link\"\r\n                onClick={() => ChangeActiveScreen(\"classRoom-General\")}>Go to the classroom</Button>\r\n            </p> : \r\n            <p>You need to select at least one topic</p>\r\n        \r\n    return (\r\n        <div>\r\n            <h2>Select Topics</h2>\r\n            <p>Topics highlighted in green are active. Click a topic to toggle its status</p>\r\n            <ButtonGroup>\r\n                <Button onClick={() => AllTopics('all')} >Select all</Button>\r\n                <Button onClick={() => AllTopics('none')} >Clear all</Button>\r\n            </ButtonGroup>\r\n            {furtherInstructions}\r\n            <p>Currently selected are {selectedTopics.join(', ')} </p>\r\n            <ButtonGroup id=\"topicList\" vertical >{qTypeList}</ButtonGroup>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedTopics: state.selectedTopics\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { ToggleTopic, AllTopics, ChangeActiveScreen })(TopicSelect);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { ChangeActiveScreen, LoginUser } from '../Reducers/actions';\r\n\r\nconst LoginForm = ({ ChangeActiveScreen, LoginUser }) => {\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const toPost = {\r\n            userName : event.target.UserName.value,\r\n            password: event.target.password.value\r\n        }\r\n        console.log('toPost is ', toPost);\r\n        axios.put('/users/login', toPost)\r\n            .then(res => {\r\n                console.log('axios posted login, got result with status', res.status);\r\n                console.log('need to set new user with name, rating', res.data.userName, res.data.userRating)\r\n                LoginUser(res.data.userName, res.data.userRating)\r\n            })\r\n            .catch(err => console.log('axios posted login got error', err));\r\n      }\r\n    return (\r\n        <div id=\"loginForm\">\r\n            <div>\r\n                <Button variant=\"link\" onClick={()=>ChangeActiveScreen('testRoom')}>\r\n                    If you are not a member, you can register for free\r\n                </Button>\r\n            </div>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group >\r\n                    <Form.Label>User name</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"UserName\" placeholder=\"User name\" required />\r\n                    <Form.Text className=\"text-muted\" >\r\n                        This will be your public name, to be used on the leaderboard\r\n                    </Form.Text>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" required />\r\n                </Form.Group>\r\n            <Button variant=\"secondary\" onClick={()=>ChangeActiveScreen('testRoom')} >Cancel</Button>\r\n            <Button variant=\"success\" type=\"submit\">Login</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, { ChangeActiveScreen, LoginUser })(LoginForm);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport Question from './components/Question';\r\nimport ClassRoom from './components/ClassRoom';\r\nimport TopicSelect from './components/TopicSelect';\r\nimport LoginForm from './components/LoginForm';\r\nimport { ChangeActiveScreen } from './Reducers/actions';\r\nimport './App.css';\r\n\r\nconst App = ({ \r\n    userName, userRating, currentQ, \r\n    activeScreen, selectedTopics, ChangeActiveScreen }) => {\r\n  const giveme5Option = <Dropdown.Item onClick={()=>ChangeActiveScreen('classRoom')}>5 in the Classroom</Dropdown.Item>;\r\n  const rateMymathsOption = <Dropdown.Item onClick={()=>ChangeActiveScreen('testRoom')}>Rate My Maths</Dropdown.Item>;\r\n  const selectTopicsOption = <Dropdown.Item onClick={()=>ChangeActiveScreen('topicSelect')} >Select Topics</Dropdown.Item>\r\n  const loginOption = <Dropdown.Item onClick={()=>ChangeActiveScreen('login')}>Login or Register</Dropdown.Item>;\r\n\r\n  const userLabel = userName === '' ? 'Guest user' : userName;\r\n\r\n  const mainScreen = () => {\r\n    switch (activeScreen) {\r\n      case \"testRoom\" : return <Question />;\r\n      case \"classRoom\" : return <ClassRoom typeList={[currentQ.QType]} />;\r\n      case \"classRoom-General\" : return <ClassRoom typeList={selectedTopics} />;\r\n      case \"topicSelect\" : return <TopicSelect />\r\n      case \"login\" : return <LoginForm />;\r\n      default : return <Question />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"header\" >\r\n        <DropdownButton id=\"dropdown-variants-info\" \r\n          title=\"Maths ELO\" className=\"appTitle\" size=\"lg\">\r\n          {activeScreen === 'testRoom' ? giveme5Option : rateMymathsOption}\r\n          {selectTopicsOption}\r\n          {/* {loginOption} */}\r\n        </DropdownButton>\r\n        <p>Rate and review your maths</p>\r\n        <p className=\"userVSquestion\" >{userLabel} ({userRating}) VS {currentQ.QType} ({currentQ.QRating||'????'}) </p>\r\n      </div>\r\n      { mainScreen() }\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userName: state.userID,\r\n    userRating: state.userRating,\r\n    currentQ: state.quAndA,\r\n    activeScreen: state.activeScreen,\r\n    selectedTopics: state.selectedTopics\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { ChangeActiveScreen })(App);\r\n","import { UPDATE_USER_ANSWER, TOGGLE_TOPIC, ALL_TOPICS,\r\n    KEYPAD_NUMBER, KEYPAD_DELETE,\r\n    SET_NEW_Q, \r\n    USER_IS_WRONG, USER_RATING_CHANGES, LOGIN_USER,\r\n    CHANGE_ACTIVE_SCREEN, \r\n    NEED_NEW_RATED_Q } from './actions';\r\n\r\nimport { QTypes } from '../NewQs/QTypes';\r\n\r\nconst newQ = { \r\n    q: \"How many mathematicians does it take to change a light bulb?\", \r\n    a: \"1\", QType:'giveDefault' };\r\nconst defaultExtraKeys = ['--', '--', '--'];\r\n\r\nconst initialState = {\r\n    userRating: 1500,\r\n    userID: '',\r\n    userLoggedIn: false,\r\n    quAndA: newQ,\r\n    needNewRatedQ: true,\r\n    userAnswer: '',\r\n    selectedTopics: [...QTypes],\r\n    wrongAnswers: [], \r\n    extraKeys4Pad: defaultExtraKeys,\r\n    activeScreen: 'testRoom'\r\n}\r\n\r\nconst addOrDrop = (arr, el) => {\r\n    return arr.includes(el) ? arr.filter(e => e !== el) : [...arr, el]\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    console.log('handling the action ', action)\r\n    switch (action.type) {\r\n        case UPDATE_USER_ANSWER : return {...state, userAnswer:action.payload}\r\n        case TOGGLE_TOPIC : return {...state, selectedTopics:addOrDrop(state.selectedTopics, action.topic)}\r\n        case ALL_TOPICS : return { ...state, \r\n            selectedTopics: action.mode==='all' ? [...QTypes] : []\r\n        }\r\n        case NEED_NEW_RATED_Q : return {...state, needNewRatedQ:true}\r\n        case USER_RATING_CHANGES: return {...state, userRating:action.userRating}\r\n        case SET_NEW_Q : return {\r\n            ...state, \r\n            quAndA:action.quAndA, \r\n            needNewRatedQ: false,\r\n            extraKeys4Pad: action.quAndA.extraKeys || defaultExtraKeys,\r\n            userAnswer:'', wrongAnswers:[]}\r\n        case USER_IS_WRONG : return {\r\n            ...state,\r\n            wrongAnswers:[...state.wrongAnswers, action.wrongAnswer],\r\n            userAnswer: '',\r\n            quAndA: {...state.quAndA, QRating: action.newQuAndARating}\r\n        }\r\n        case LOGIN_USER : return {\r\n            ...state, \r\n            userID:action.userName, userRating:action.userRating, \r\n            activeScreen:'testRoom', userLoggedIn:true\r\n        }\r\n        case KEYPAD_NUMBER : return {...state, userAnswer:state.userAnswer+action.payload}\r\n        case KEYPAD_DELETE : return {...state, userAnswer:state.userAnswer.slice(0, -1)}\r\n        case CHANGE_ACTIVE_SCREEN : return {...state, activeScreen:action.newScreen}\r\n        default : return state;\r\n    } \r\n}\r\n\r\nexport default reducer;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport Reducer from './Reducers/Reducer';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={createStore(Reducer)} ><App /></Provider>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const RandomElement = (arr) => arr[Math.floor(Math.random()*arr.length)];\r\nexport const RandomInt = (n) => Math.floor(Math.random()*n);\r\n\r\nexport const elementsFrom = (n, arr) => {\r\n    if (arr.length === n) {return arr}\r\n    if (arr.length > n) {return distinctElementsFrom(n, arr)}\r\n    var list = [];\r\n    while (list.length<n) {\r\n        list = [...list, ...arr];\r\n    }\r\n    return list.slice(0, n)\r\n}\r\n\r\nexport const distinctElementsFrom = (n, arr) => {\r\n    var list = [];\r\n    if (arr.length<=n) {return arr}\r\n    while (list.length<n) {\r\n        list.push(RandomElement(arr.filter(x=>list.indexOf(x)===-1)))\r\n    }\r\n    return list\r\n}\r\n\r\nexport const primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47];\r\nexport const smallPrimes = [2, 3, 5, 7];\r\n\r\nexport const RandomPrime = (t) => t === 'small' ? RandomElement(smallPrimes) : RandomElement(primes);\r\nexport const distinctPrimes = (n, t) => t === 'small' ? \r\n            distinctElementsFrom(n, smallPrimes) : distinctElementsFrom(n, primes);\r\n\r\n// module.exports = {RandomElement, RandomInt, RandomPrime, elementsFrom, distinctElementsFrom, distinctPrimes}\r\n\r\n//export default RandomElement;"],"sourceRoot":""}